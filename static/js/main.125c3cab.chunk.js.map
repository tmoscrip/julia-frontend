{"version":3,"sources":["helpers.js","components/ModelProvider.js","interp.js","colorspace.js","texture.js","components/gui/base_components/Item.js","components/gui/base_components/HelpTooltip.js","components/gui/base_components/Label.js","components/gui/base_components/OptionSelector.js","components/gui/julia/MSAA.js","webgl/color.js","webgl/math.js","webgl/julia.js","webgl.js","components/Hooks.js","components/ShaderCanvas.js","components/gui/GUI.js","components/gui/base_components/Folder.js","components/gui/base_components/InputField.js","components/gui/julia/Coefficients.js","components/gui/julia/ConstantPoint.js","components/gui/julia/MaxIterations.js","components/gui/julia/EscapeRadius.js","components/gui/julia/SmoothingToggle.js","components/gui/julia/TimeScale.js","components/gui/viewport/Dimensions.js","components/gui/viewport/Translate.js","components/gui/viewport/LockAspectRatio.js","components/gui/colourmapping/ColorCurveSelector.js","components/gui/colourmapping/ColorModelSelector.js","components/gui/colourmapping/ColorPointControls.js","components/gui/colourmapping/ColorPointItem.js","components/gui/base_components/Base64Image.js","components/gui/colourmapping/ColorMapRender.js","components/gui/colourmapping/ColorMapFolder.js","components/gui/base_components/Button.js","components/gui/other/PauseButton.js","components/gui/presets/PresetNameField.js","components/gui/presets/PresetSelector.js","components/gui/presets/PresetErrorField.js","components/gui/presets/PresetButtons.js","components/gui/presets/PresetFolder.js","components/gui/other/ToggleMenuButton.js","components/MyGUI.js","serviceWorker.js","index.js","App.js"],"names":["findClosestPair","arr","num","i","length","cur","next","lowerTrim","str","replace","toLowerCase","isUseStateArray","item","Array","isArray","name","startsWith","hasSetState","fixWebGlInts","match","finalStr","anyNumberRegex","RegExp","matches","exec","push","filter","m","includes","insertedCount","insertAt","slice","ShaderContext","React","createContext","ShaderProvider","Provider","Consumer","contextToValueObject","obj","valuesObj","key","ModelProvider","children","initModelState","canvasRef","useState","gl","julia","coefficients","c","x","y","maxIterations","escapeRadius","useSmoothing","msaa","viewport","width","height","translate","lockAspectRatio","color","colorPoints","hex","position","curve","colorModel","textureData","time","startedAt","Date","now","lastFrameTime","paused","elapsed","timeScale","value","doInterp","a","b","frac","fn","res","Interps","linear","quadratic","Math","pow","cubic","squareroot","cuberoot","cosine","cos","PI","logarithmic","log","exponential","ColorSpaces","channels","min","max","rgb2hsv","rgbColor","h","s","map","r","g","delta","TEX_WIDTH","TEX_HEIGHT","TEX_CHANNELS","parseHexColor","colorString","cString","trim","parseInt","concat","generateTextureData","curveName","interp","sortedColorPoints","sort","parseFloat","sortedPositions","convertedColorPoints","texLerp","mapPct","closetPairIdxs","c1","c1pos","c2","c2pos","localMapPct","abs","tmp","withAlpha","mapNDArray","e","hsvColor","f","p","q","t","v","floor","hsv2rgb","round","TEX_SIZE","Uint8Array","px","chan","Item","className","HelpTooltip","text","dangerouslySetInnerHTML","__html","Label","htmlFor","tooltip","Option","OptionSelector","label","id","options","onChange","idx","msaaOptions","aaFrac","MSAA","ctx","useContext","setValue","newValue","target","math","cValue","cmplxExp","exp","coeff","coeffList","split","polySource","nextTerm","polyIterate","buildFragCode","msaaStateValue","find","antialiasing","val","degree","toString","smoothIterations","vertCode","vertices","indices","setUniforms","shaderProgram","escapeRadiusUniform","getUniformLocation","uniform1f","maxIterationsUniform","uniform1i","resolutionUniform","uniform2fv","startedAtUniform","widthUniform","heightUniform","xTranslateUniform","yTranslateUniform","colormapUniform","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","bindColorMap","glDrawFrame","fragCode","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","bindVertices","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","bindIndices","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getShaderParameter","COMPILE_STATUS","logOutput","getShaderInfoLog","console","idxList","lineNumber","substring","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","enable","DEPTH_TEST","clear","DEPTH_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","alert","useWindowSize","isClient","window","getSize","innerWidth","undefined","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useToggle","initial","whenSetToTrueCb","whenSetToFalseCb","Error","bool","setBool","scaleViewportByAspectRatio","anchor","aspectRatio","orientation","document","getElementsByClassName","canvas","offsetWidth","offsetHeight","canvasWidth","canvasHeight","getAspectRatio","getOrientation","ShaderCanvas","dragStart","setDragStart","useRef","setRef","setGl","current","getContext","preserveDrawingBuffer","useGlCanvas","setTextureData","newTextureData","o","useTextureBuilder","setWidth","setHeight","newViewport","useScaleInitialRenderViewport","animateRef","setLastFrameTime","setElapsed","animate","timeElapsedThisFrame","elapsedDelta","requestAnimationFrame","cancelAnimationFrame","useJuliaAnimation","onDown","dataURL","toDataURL","createElement","href","setAttribute","click","useCanvasImageSaver","onMouseDown","loc","clientX","clientY","onMouseUp","setTranslateX","setTranslateY","setViewportWidth","setViewportHeight","dragEnd","dragBox","x1","x2","y1","y2","dragHasNoArea","dragCenterGrid","gridWidth","gridHeight","heightScale","canvasToGrid","viewportWidth","viewportHeight","dragViewport","ref","GUI","shouldHaveScroll","elemRef","windowHeight","elemHeight","getBoundingClientRect","useScrollbarSizing","style","Folder","title","startClosed","closed","toggle","onClick","InputField","type","checked","stopPropagation","Coefficients","ConstantPointX","ConstantPointY","MaxIterations","EscapeRadius","SmoothingToggle","TimeScale","DimensionsFolder","handleChanges","newWidth","newHeight","ViewportWidth","ViewportHeight","TranslateX","TranslateY","LockAspectRatio","ColorCurveSelector","Object","keys","selectedValue","interpKey","ColorModelSelector","ColorPointControls","ColorPicker","handleChange","ColorPosition","ColorPointItem","Base64Image","data","encoding","alt","src","ColorMapRender","pngArrayBuffer","UPNG","encode","btoa","String","fromCharCode","apply","useColorMapBase64","ColorMapFolder","setColorPoints","handleColorPointChanges","objAtIdx","nextObj","call","nextColorPoints","Button","PauseButton","setPaused","PresetNameField","PresetSelector","PresetErrorField","PresetButtonSave","PresetButtonLoad","SaveLoadButtons","onClickSave","onClickLoad","getPresetArray","presetArray","localStorage","getItem","JSON","parse","PresetFolder","selectedPresetName","setSelectedPresetName","presetName","setPresetName","presetsList","setPresetsList","promptedToOverwrite","setPromptedToOverwrite","error","setError","presetsNames","updatePresetsList","presets","resetErrorState","setInitialSelectedPreset","preset","setItem","stringify","removePresetFromArray","array","addPresetToArray","_ctx","makePresetObject","loadObjectIntoContext","setState","ToggleMenuButton","MyGUI","hideMenu","toggleMenu","display","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.125c3cab.chunk.js","sourcesContent":["// Map function which recurses into elements of given array which are also arrays\r\nexport function mapNDArray(arr, fn) {\r\n  for (let i in arr) {\r\n    let e = arr[i]\r\n    if (e != null && Array.isArray(e)) {\r\n      arr[i] = mapNDArray(arr[i], fn)\r\n    } else {\r\n      arr[i] = fn(arr[i])\r\n    }\r\n  }\r\n  return arr\r\n}\r\n\r\n// Find the indexes of the two closest numbers to the provided parameter in a sorted array\r\nexport function findClosestPair(arr, num) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let cur = arr[i]\r\n    let next = arr[i + 1]\r\n    if (cur <= num && next > num) {\r\n      return [i, i + 1]\r\n    }\r\n  }\r\n}\r\n\r\n// Trims spaces from string and converts to lowercase\r\nexport function lowerTrim(str) {\r\n  return str.replace(/ /g, '').toLowerCase()\r\n}\r\n\r\n// Is the item a useState array?\r\n// Perform checks on requirements for hasSetState beforehand\r\nexport const isUseStateArray = (item) => {\r\n  // Check to see if array has useState set function within\r\n  const hasSetState = (item) => typeof item[1] === 'function' && item[1].name.startsWith('bound ')\r\n  return Array.isArray(item) && item.length === 2 && hasSetState(item)\r\n}\r\n\r\n/*\r\n  Ints are not implictly cast to floats in WebGL, any value which is passed to\r\n  WebGL code for use as a float must contain a decimal point\r\n\r\n  This function appends a period to any int to avoid type errors once it's passed\r\n  into WebGL code\r\n*/\r\nexport function fixWebGlInts(str) {\r\n  let finalStr = str\r\n\r\n  // Capture: 1. floats, 2. floats (int w/ trailing period), 3. ints\r\n  const anyNumberRegex = new RegExp(/\\d+[.]\\d+|(\\d+[.])+|(\\d+)/g)\r\n\r\n  // Find all matches\r\n  let match\r\n  let matches = []\r\n  while ((match = anyNumberRegex.exec(str)) !== null) {\r\n    matches.push(match)\r\n  }\r\n\r\n  // Filter out floats\r\n  matches = matches.filter((m) => !m[0].includes('.'))\r\n\r\n  // How many extra characters have been inserted\r\n  let insertedCount = 0\r\n  try {\r\n    for (let i in matches) {\r\n      let m = matches[i]\r\n      let insertAt = m['index'] + m[0].length + insertedCount\r\n      finalStr = finalStr.slice(0, insertAt) + '.' + finalStr.slice(insertAt, finalStr.length)\r\n      insertedCount += 1\r\n    }\r\n  } catch {\r\n    // Shader will fail to compile and pause given an unfixable string\r\n    return str\r\n  }\r\n\r\n  return finalStr\r\n}\r\n","import React, { useState } from 'react'\r\nimport { isUseStateArray } from './../helpers'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport const ShaderContext = React.createContext()\r\nexport const ShaderProvider = ShaderContext.Provider\r\nexport const ShaderConsumer = ShaderContext.Consumer\r\n\r\n/*\r\n  Take object from context and extract the values for each setState array\r\n  Recurse down if possilble and maintain k:v structure\r\n\r\n  Keeps object structure, but converts [state, setState]\r\n  Arrays to just the state value\r\n*/\r\nexport function contextToValueObject(obj) {\r\n  const valuesObj = {}\r\n  for (let key in obj) {\r\n    if (isUseStateArray(obj[key])) {\r\n      valuesObj[key] = obj[key][0]\r\n    } else {\r\n      valuesObj[key] = contextToValueObject(obj[key])\r\n    }\r\n  }\r\n\r\n  return valuesObj\r\n}\r\n\r\n// Inverse of contextToValueObject\r\n// Takes an object and attempts to move values from\r\n// it into context's state through setState\r\nexport function loadObjectIntoContext(obj, ctx) {\r\n  for (const item in obj) {\r\n    if (isUseStateArray(ctx[item])) {\r\n      // Call setState in ctx for each key in obj\r\n      const setState = ctx[item][1]\r\n      setState(obj[item])\r\n    } else {\r\n      loadObjectIntoContext(obj[item], ctx[item])\r\n    }\r\n  }\r\n}\r\n\r\nfunction ModelProvider({ children }) {\r\n  const initModelState = {\r\n    canvasRef: useState(null), // Canvas element used for rendering the fractal\r\n    gl: useState(null), // WebGL context of the canvas\r\n    julia: {\r\n      coefficients: useState('1,1/3, c*2, 1 , 0, 1'),\r\n      c: {\r\n        x: useState('0.2+0.5*cos(u_time*5)'),\r\n        y: useState('0.2-0.7*sin(u_time*3)'),\r\n      },\r\n      maxIterations: useState('20'),\r\n      escapeRadius: useState('10'),\r\n      useSmoothing: useState(true),\r\n      msaa: useState('1x'),\r\n    },\r\n    viewport: {\r\n      width: useState('5'),\r\n      height: useState('5'),\r\n      translate: {\r\n        x: useState('0'),\r\n        y: useState('0'),\r\n      },\r\n      lockAspectRatio: useState(true),\r\n    },\r\n    color: {\r\n      colorPoints: useState([\r\n        {\r\n          hex: '#000000',\r\n          position: '0',\r\n        },\r\n        {\r\n          hex: '#3ad629',\r\n          position: '0.7',\r\n        },\r\n        {\r\n          hex: '#faaa05',\r\n          position: '1.0',\r\n        },\r\n      ]),\r\n      curve: useState('linear'),\r\n      colorModel: useState('RGB'),\r\n      textureData: useState([255, 255, 255]),\r\n    },\r\n    time: {\r\n      startedAt: useState(Date.now()),\r\n      lastFrameTime: useState(Date.now()),\r\n      paused: useState(false),\r\n      elapsed: useState(0),\r\n      timeScale: useState('1'),\r\n    },\r\n  }\r\n\r\n  return <ShaderProvider value={initModelState}>{children}</ShaderProvider>\r\n}\r\n\r\nModelProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default ModelProvider\r\n","function doInterp(a, b, frac, fn) {\r\n  const res = fn(frac)\r\n  return a * (1 - res) + b * res\r\n}\r\n\r\nconst linear = {\r\n  name: 'Linear',\r\n  value: 'linear',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => frac\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst quadratic = {\r\n  name: 'Quadratic',\r\n  value: 'quadratic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 2)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst squareroot = {\r\n  name: 'Square root',\r\n  value: 'squareroot',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 1 / 2)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cubic = {\r\n  name: 'Cubic',\r\n  value: 'cubic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 3)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cuberoot = {\r\n  name: 'Cube root',\r\n  value: 'cuberoot',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 1 / 3)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cosine = {\r\n  name: 'Cosine',\r\n  value: 'cosine',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => -0.5 * Math.cos(Math.PI * frac) + 0.5\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst logarithmic = {\r\n  name: 'Logarithmic',\r\n  value: 'logarithmic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => (1 / Math.log(2)) * Math.log(frac + 1)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst exponential = {\r\n  name: 'Exponential',\r\n  value: 'exponential',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(2, frac) - 1\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nexport const Interps = { linear, quadratic, cubic, squareroot, cuberoot, cosine, logarithmic, exponential }\r\n","// Conversion functions adapted from https://www.cs.rit.edu/~ncs/color/t_convert.html\r\n\r\nexport const ColorSpaces = [\r\n  {\r\n    name: 'RGB',\r\n    channels: [\r\n      {\r\n        name: 'red',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n      {\r\n        name: 'green',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n      {\r\n        name: 'blue',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: 'HSV',\r\n    channels: [\r\n      {\r\n        name: 'hue',\r\n        min: 0,\r\n        max: 360,\r\n      },\r\n      {\r\n        name: 'saturation',\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n      {\r\n        name: 'value',\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n// Expects array of r,g,b values in range [0, 255]\r\n// Outputs array of h,s,v values: h [0, 360] s,v [0, 1]\r\n// TODO: convert white->white correctly\r\nexport function rgb2hsv(rgbColor) {\r\n  // Normalise colours to 0-1 range\r\n  const [r, g, b] = rgbColor.map((c) => c / 255)\r\n  let h, s, v\r\n\r\n  // white\r\n  if (r + g + b === 3) {\r\n    return [-1, 0, 1]\r\n  }\r\n\r\n  // black\r\n  if (r + g + b === 0) {\r\n    return [-1, 0, 0]\r\n  }\r\n\r\n  // r,g,b values are from 0 to 1\r\n  // h = [0,360], s = [0,1], v = [0,1]\r\n  const min = Math.min(r, g, b)\r\n  const max = Math.max(r, g, b)\r\n  const delta = max - min\r\n\r\n  s = max !== 0 ? delta / max : 0\r\n  v = max\r\n  if (s !== 0) {\r\n    if (r === max) {\r\n      h = (g - b) / delta\r\n    } else if (g === max) {\r\n      h = 2 + (b - r) / delta\r\n    } else {\r\n      h = 4 + (r - g) / delta\r\n    }\r\n    h = h * 60\r\n    if (h < 0) h += 360\r\n  } else {\r\n    // greys have undefined hue\r\n    h = -1\r\n  }\r\n\r\n  return [h, s, v]\r\n}\r\n// Expects array of h,s,v values: h [0, 360] s,v [0, 1]\r\n// Outputs array of rgb values in range [0, 255]\r\nexport function hsv2rgb(hsvColor) {\r\n  let [h, s, v] = hsvColor\r\n  let r, g, b\r\n  let i, f, p, q, t\r\n\r\n  if (s === 0) {\r\n    // achromatic (grey)\r\n    r = g = b = v\r\n    return [r * 255, g * 255, b * 255]\r\n  }\r\n  h /= 60 // sector 0 to 5\r\n  i = Math.floor(h)\r\n  f = h - i // factorial part of h\r\n  p = v * (1 - s)\r\n  q = v * (1 - s * f)\r\n  t = v * (1 - s * (1 - f))\r\n  switch (i) {\r\n    case 0:\r\n      r = v\r\n      g = t\r\n      b = p\r\n      break\r\n    case 1:\r\n      r = q\r\n      g = v\r\n      b = p\r\n      break\r\n    case 2:\r\n      r = p\r\n      g = v\r\n      b = t\r\n      break\r\n    case 3:\r\n      r = p\r\n      g = q\r\n      b = v\r\n      break\r\n    case 4:\r\n      r = t\r\n      g = p\r\n      b = v\r\n      break\r\n    default:\r\n      // case 5:\r\n      r = v\r\n      g = p\r\n      b = q\r\n      break\r\n  }\r\n  return [r * 255, g * 255, b * 255]\r\n}\r\n","import { mapNDArray, findClosestPair } from './helpers'\r\nimport { Interps } from './interp'\r\nimport { hsv2rgb, rgb2hsv } from './colorspace'\r\n\r\nexport const TEX_WIDTH = 2048\r\nexport const TEX_HEIGHT = 1\r\nexport const TEX_CHANNELS = 4\r\n\r\nexport function parseHexColor(colorString) {\r\n  let cString = colorString.trim()\r\n\r\n  if (cString.startsWith('#')) {\r\n    cString = cString.slice(1, cString.length)\r\n  }\r\n\r\n  const hexIdent = '0x'\r\n\r\n  if (parseInt(cString) != null) {\r\n    const colorAsArray = [\r\n      parseInt(hexIdent.concat(cString.slice(0, 2))),\r\n      parseInt(hexIdent.concat(cString.slice(2, 4))),\r\n      parseInt(hexIdent.concat(cString.slice(4, 6))),\r\n    ]\r\n    return colorAsArray\r\n  }\r\n\r\n  return [0, 0, 0]\r\n}\r\n\r\nexport function generateTextureData(colorPoints, curveName, colorModel) {\r\n  const defaultColorSpace = 'RGB'\r\n  const interp = Interps[curveName].fn\r\n  const sortedColorPoints = colorPoints.sort((a, b) => parseFloat(a.position) - parseFloat(b.position))\r\n  const sortedPositions = sortedColorPoints.map((a) => parseFloat(a.position))\r\n\r\n  // Convert all colorPoints to target color space\r\n  const convertedColorPoints =\r\n    colorModel !== defaultColorSpace\r\n      ? sortedColorPoints.map((item) => {\r\n          return { ...item, color: rgb2hsv(item.color) }\r\n        })\r\n      : sortedColorPoints\r\n\r\n  // Peform interpolation on each channel in each color\r\n  let texLerp = []\r\n  for (let i = 0; i < TEX_WIDTH; i++) {\r\n    const mapPct = i / TEX_WIDTH\r\n    const closetPairIdxs = findClosestPair(sortedPositions, mapPct)\r\n    const c1 = convertedColorPoints[closetPairIdxs[0]]\r\n    const c1pos = parseFloat(c1.position)\r\n    const c2 = convertedColorPoints[closetPairIdxs[1]]\r\n    const c2pos = parseFloat(c2.position)\r\n    const localMapPct = (mapPct - c1pos) / Math.abs(c1pos - c2pos)\r\n\r\n    // This check accounts for the 'undefined' hue values of achromatic shades\r\n    // We carry the hue of the colour we interpolate from and interp on sat/value\r\n    if (c2.color[0] === -1) {\r\n      c2.color[0] = c1.color[0]\r\n    }\r\n\r\n    if (c1.color[0] === -1) {\r\n      c1.color[0] = c2.color[0]\r\n    }\r\n\r\n    const tmp = []\r\n    for (let c = 0; c < c1.color.length; c++) {\r\n      tmp[c] = interp(c1.color[c], c2.color[c], localMapPct)\r\n    }\r\n    texLerp[i] = tmp\r\n  }\r\n\r\n  // Convert back into RGB\r\n  const texRGB = colorModel !== defaultColorSpace ? texLerp.map((item) => hsv2rgb(item)) : texLerp\r\n  // Round to integers\r\n  const tex2D = mapNDArray(texRGB, (i) => Math.round(i))\r\n  // Append alpha channel\r\n  const withAlpha = tex2D.map((item) => [...item, 255])\r\n\r\n  const TEX_SIZE = TEX_WIDTH * TEX_CHANNELS\r\n  const textureData = new Uint8Array(TEX_SIZE)\r\n  for (let i = 0; i < TEX_SIZE; i++) {\r\n    // Pixel number\r\n    let px = Math.floor(i / TEX_CHANNELS)\r\n    // Channel number\r\n    let chan = i % TEX_CHANNELS\r\n    // Push into Uint8Array\r\n    textureData[i] = withAlpha[px][chan]\r\n  }\r\n\r\n  return textureData\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Item({ children }) {\r\n  return <li className='item'>{children}</li>\r\n}\r\n\r\nItem.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function HelpTooltip({ text }) {\r\n  return (\r\n    <div className='tooltip'>\r\n      <span dangerouslySetInnerHTML={{ __html: text }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nHelpTooltip.propTypes = {\r\n  text: PropTypes.node.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport HelpTooltip from './HelpTooltip'\r\n\r\nexport default function Label({ htmlFor, text, tooltip }) {\r\n  tooltip = tooltip || null\r\n  return (\r\n    <>\r\n      <label htmlFor={htmlFor}>\r\n        {text} {tooltip ? <HelpTooltip text={tooltip} /> : null}\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n\r\nLabel.propTypes = {\r\n  htmlFor: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n\r\nimport Item from './Item'\r\nimport Label from './Label'\r\n\r\nfunction Option({ item }) {\r\n  return <option value={item}>{item}</option>\r\n}\r\n\r\nexport default function OptionSelector({ label, tooltip, id, options, value, onChange }) {\r\n  label = label || null\r\n  tooltip = tooltip || null\r\n\r\n  return (\r\n    <Item>\r\n      {label ? <Label htmlFor={id} text={label} tooltip={tooltip} /> : null}\r\n      <select id={id} name={id} value={value} onChange={onChange}>\r\n        {options.map((item, idx) => (\r\n          <Option key={idx} item={item} />\r\n        ))}\r\n      </select>\r\n    </Item>\r\n  )\r\n}\r\n\r\nOptionSelector.propTypes = {\r\n  label: PropTypes.string,\r\n  tooptip: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport OptionSelector from './../base_components/OptionSelector'\r\nimport { ShaderContext } from './../../ModelProvider'\r\n\r\nexport const msaaOptions = [\r\n  { name: '1x', aaFrac: 1 },\r\n  { name: '2x', aaFrac: 1 / 2 },\r\n  { name: '4x', aaFrac: 1 / 4 },\r\n  { name: '8x', aaFrac: 1 / 8 },\r\n  { name: '16x', aaFrac: 1 / 16 },\r\n]\r\n\r\nexport default function MSAA() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.msaa\r\n\r\n  const options = msaaOptions.map(item => item.name)\r\n\r\n  const label = 'Anti-aliasing'\r\n  const id = 'msaa'\r\n  const tooltip =\r\n    'Level of supersample anti-aliasing applied to render. High levels may result in considerable slowdown'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={value} onChange={onChange} />\r\n}\r\n","//\r\n// color SPACE FUNCTIONS\r\n//\r\nconst hsv2rgb = `\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\r\n}\r\n`\r\n\r\n//\r\n// JULIA ITERATIONS HSV COLORING FUNCTIONS\r\n//\r\nconst huefn = `\r\nfloat huefn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .1 + .3*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst satfn = `\r\nfloat satfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + .5*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst valfn = `\r\nfloat valfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + 2.*(iterations / max_iter);\r\n}\r\n`\r\n\r\nexport const color = `\r\n${hsv2rgb}\r\n${huefn}\r\n${satfn}\r\n${valfn}\r\n`\r\n","//\r\n// MATHEMATICAL CONSTANTS\r\n//\r\nconst mathConstants = `\r\n#define PI 3.14159265359\r\n#define TAU 6.28318530718\r\n`\r\n\r\n//\r\n// COMPLEX NUMBER OPERATIONS\r\n// Source:\r\n// https://gist.github.com/NiklasRosenstein/ee1f1b5786f94e17995361c63dafeb3f\r\n//\r\nconst complexConjug = `\r\nvec2 complexConjug(in vec2 c) { \r\n  return vec2(c.x, -c.y); \r\n}\r\n`\r\n\r\nconst complexMult = `\r\nvec2 complexMult(in vec2 a, in vec2 b) {\r\n  return vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\r\n}\r\n`\r\n\r\nconst complexDiv = `\r\nvec2 complexDiv(in vec2 a, in vec2 b) {\r\n  return complexMult(a, complexConjug(b));\r\n}\r\n`\r\n\r\nconst complexMag = `\r\nfloat complexMag(in vec2 c) { \r\n  return sqrt(c.x * c.x + c.y * c.y); \r\n}\r\n`\r\n\r\nconst complexAdd = `\r\nvec2 complexAdd(vec2 z1, vec2 z2) { \r\n  return vec2(z1.x + z2.x, z1.y + z2.y); \r\n}\r\n`\r\n\r\n// Raises a complex number to the power of a second complex number\r\n// Use vec2(x, 0) as second parameter to raise by only a real\r\n// See http://mathworld.wolfram.com/ComplexExponentiation.html\r\nconst complexPower = `\r\nvec2 complexPower(vec2 z1, vec2 z2) {\r\n  float a2b2 = z1.x * z1.x + z1.y * z1.y;\r\n  float t1 = pow(a2b2, z2.x / 2.) * exp(-z2.y * atan(z1.y, z1.x));\r\n  float t2 = z2.x * atan(z1.y, z1.x) + .5 * z2.y * log(a2b2);\r\n  return vec2(t1 * cos(t2), t1 * sin(t2));\r\n}\r\n`\r\n\r\nexport const math = `\r\n${mathConstants}\r\n${complexConjug}\r\n${complexMult}\r\n${complexDiv}\r\n${complexMag}\r\n${complexPower}\r\n${complexAdd}\r\n`","import { msaaOptions } from '../components/gui/julia/MSAA'\r\nimport { fixWebGlInts } from './../helpers'\r\nimport { color } from './color'\r\nimport { math } from './math'\r\n\r\n// GLSL 'for' loops can only be indexed up to a constant value\r\n// Passing in the max iteration count through a uniform encounters an error\r\n// Therefore this function constructs a constant value definition\r\nfunction maxIterations(val) {\r\n  return `#define maxIterations ${val}`\r\n}\r\n\r\nfunction cValue({ x, y }) {\r\n  return `vec2 c = vec2(${fixWebGlInts(x)}, ${fixWebGlInts(y)});`\r\n}\r\n\r\nfunction viewport({ width, height, translate }) {\r\n  return `\r\n  vec2 size = vec2(${fixWebGlInts(width)}, ${fixWebGlInts(height)});\r\n  vec2 translate = vec2(${fixWebGlInts(translate.x)}, ${\r\n    fixWebGlInts(translate.y)});\r\n  `\r\n}\r\n\r\nconst antialiasing =\r\n  (msaaStateValue) => {\r\n    const { aaFrac } = msaaOptions.find((item) => item.name === msaaStateValue)\r\n\r\n    if (aaFrac !== 1) {\r\n      return `#define AA ${aaFrac}`\r\n    }\r\n    else {\r\n      return ''\r\n    }\r\n  }\r\n\r\nconst uniforms = `\r\nuniform float u_escapeRadius;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\nuniform float u_width;\r\nuniform float u_height;\r\nuniform float u_translatex;\r\nuniform float u_translatey;\r\n\r\nuniform sampler2D u_colormap;\r\n`\r\n\r\nconst headers = `\r\nprecision highp float;\r\n`\r\n\r\n//\r\n// JULIA ITERATION FUNCTIONS\r\n//\r\nconst polyIterate =\r\n  (coefficients) => {\r\n    function cmplxExp(exp, coeff) {\r\n      // Skip all terms with coefficient of 0\r\n      if (parseFloat(coeff) !== 0) {\r\n        // When exp = 0, we are handling the C value\r\n        if (exp === 0) {\r\n          return `z = complexAdd(z, ${coeff}*c);`\r\n        }\r\n        // Use complexAdd instead of complexPower for exponent 1\r\n        if (exp === 1) {\r\n          return `z = complexAdd(z, ${coeff}*zPrev);`\r\n        }\r\n        return `z = complexAdd(z, complexPower(${coeff}*zPrev, vec2(${\r\n          exp}, 0.)));`\r\n      }\r\n      return ''\r\n    }\r\n\r\n    // Remove all whitespace, split into list delimitted by commas\r\n    const coeffList = coefficients.replace(/\\s/g, '').split(',')\r\n    let polySource = ''\r\n    for (let i = 0; i < coeffList.length; i++) {\r\n      const exp = coeffList.length - (i + 1)\r\n      const nextTerm = cmplxExp(exp, coeffList[i])\r\n      if (nextTerm !== '') {\r\n        polySource = polySource.concat(nextTerm, '\\n')\r\n      }\r\n    }\r\n    return polySource\r\n  }\r\n\r\nconst julia = (ctx) => `\r\nvec4 julia(vec2 pixel) {\r\n  ${viewport(ctx.viewport)}\r\n  ${cValue(ctx.julia.c)}\r\n\r\n  // Map pixel value [0, canvasWidth], [0, canvasHeight] into ranges [0, 1]\r\n  vec2 uv = pixel / u_resolution;\r\n\r\n  vec2 zPrev = (size * (uv - 0.5)) + translate;\r\n  vec2 z = vec2(0.);\r\n\r\n  float result;\r\n  int iters = 0;\r\n  for (int i = 0; i <= maxIterations; i++) {\r\n    ${polyIterate(fixWebGlInts(ctx.julia.coefficients))}\r\n    iters = i;\r\n    zPrev = z;\r\n    if (complexMag(z) > u_escapeRadius) break;\r\n  }\r\n\r\n  if (iters == maxIterations) {\r\n    return vec4(0,0,0,1);\r\n  } else {\r\n    ${\r\n  ctx.julia.useSmoothing ? 'result = smoothIterations(z, iters);' :\r\n    'result = float(iters);'}\r\n  }\r\n\r\n  float percent = result/float(maxIterations);\r\n  return texture2D(u_colormap, vec2(percent));;\r\n}\r\n`\r\n\r\n// Smooth coloring function\r\n// http://linas.org/art-gallery/escape/escape.html\r\n// https://en.wikipedia.org/wiki/Mandelbrot_set#Continuous_(smooth)_coloring\r\n// http://www.iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\r\nfunction smoothIterations(julia) {\r\n  const { coefficients, escapeRadius } = julia\r\n  const degree = (coefficients.match(/,/g) || []).length.toString()\r\n\r\n  return `\r\n  float smoothIterations(vec2 z, int iterations) {\r\n    float mag = complexMag(z);\r\n    float logmag = log(mag);\r\n    float logbound = log(u_escapeRadius);\r\n    float top = log(logmag/logbound);\r\n    float f = top/log(${fixWebGlInts(degree)});\r\n\r\n    return float(iterations) - f;\r\n  }\r\n  `\r\n}\r\n\r\n//\r\n// JULIA MAIN FUNCTION\r\n//\r\nconst main = (ctx) => `\r\nvoid main(void) {\r\n  vec4 color;\r\n\r\n  #ifdef AA\r\n    float n; // Number of loops\r\n    for (float x = 0.; x < 1.; x += AA) {\r\n        for (float y = 0.; y < 1.; y += AA) {\r\n            color += julia(gl_FragCoord.xy + vec2(x, y));\r\n            n += 1.0;\r\n        }\r\n    }\r\n    // Normalise colour\r\n    color /= n; \r\n  #else\r\n    color = julia(gl_FragCoord.xy);\r\n  #endif\r\n\r\n  gl_FragColor = color;\r\n}\r\n`\r\n\r\nexport const buildFragCode = (ctx) => `\r\n${headers}\r\n${antialiasing(ctx.julia.msaa)}\r\n${maxIterations(ctx.julia.maxIterations)}\r\n${uniforms}\r\n${math}\r\n${color}\r\n${smoothIterations(ctx.julia)}\r\n${julia(ctx)}\r\n${main(ctx)}\r\n`\r\n\r\nexport const vertCode = `\r\nattribute vec3 coordinates;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4(coordinates, 1.0);\r\n}\r\n`\r\n","import { buildFragCode, vertCode } from './webgl/julia'\r\nimport { TEX_WIDTH } from './texture'\r\n\r\n//\r\n// WebGL initialisation and render loop\r\n// Code adapted from https://observablehq.com/@tomktjemsland/simple-webgl\r\n//\r\n\r\n// Define a square composed of two triangles\r\nconst vertices = [-1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0]\r\n// Index vertices in groups of 3\r\nconst indices = [3, 2, 1, 3, 1, 0]\r\n\r\nfunction bindVertices(gl) {\r\n  // Create an empty buffer object to store vertex buffer\r\n  const vertexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n\r\n  return vertexBuffer\r\n}\r\n\r\nfunction bindIndices(gl) {\r\n  // Create an empty buffer object to store Index buffer\r\n  const indexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\r\n\r\n  return indexBuffer\r\n}\r\n\r\nfunction createProgram(gl, fragCode) {\r\n  // Create a vertex shader object\r\n  const vertShader = gl.createShader(gl.VERTEX_SHADER)\r\n\r\n  // Attach vertex shader source code\r\n  gl.shaderSource(vertShader, vertCode)\r\n\r\n  // Compile the vertex shader\r\n  gl.compileShader(vertShader)\r\n\r\n  // Create fragment shader object\r\n  const fragShader = gl.createShader(gl.FRAGMENT_SHADER)\r\n\r\n  // Attach fragment shader source code\r\n  gl.shaderSource(fragShader, fragCode)\r\n\r\n  // Compile the fragmentt shader\r\n  gl.compileShader(fragShader)\r\n\r\n  // Create a shader program object to\r\n  // store the combined shader program\r\n  const shaderProgram = gl.createProgram()\r\n\r\n  // Attach a vertex shader\r\n  gl.attachShader(shaderProgram, vertShader)\r\n\r\n  // Attach a fragment shader\r\n  gl.attachShader(shaderProgram, fragShader)\r\n\r\n  // Link both the programs\r\n  gl.linkProgram(shaderProgram)\r\n\r\n  // Use the combined shader program object\r\n  gl.useProgram(shaderProgram)\r\n\r\n  if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n    const logOutput = gl.getShaderInfoLog(fragShader)\r\n    console.log(logOutput)\r\n\r\n    // Extract line of error from log and print that line of the frag shader code\r\n    let idxList = []\r\n    for (let i = 0; i < logOutput.length; i++) {\r\n      if (logOutput[i] === ':') {\r\n        idxList.push(i)\r\n      }\r\n    }\r\n\r\n    // Line number exists between second and third colons\r\n    const lineNumber = logOutput.substring(idxList[1] + 1, idxList[2])\r\n\r\n    console.log(fragCode.split('\\n')[lineNumber - 1])\r\n  }\r\n\r\n  if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(vertShader))\r\n  }\r\n\r\n  return shaderProgram\r\n}\r\n\r\nfunction bindColorMap(gl, textureData) {\r\n  const texture = gl.createTexture()\r\n  gl.bindTexture(gl.TEXTURE_2D, texture)\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, TEX_WIDTH, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, textureData)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n  return texture\r\n}\r\n\r\nfunction setUniforms(shaderProgram, ctx) {\r\n  const { canvasRef, gl, julia, time, viewport } = ctx\r\n  const { escapeRadius, maxIterations } = julia\r\n  const { elapsed } = time\r\n\r\n  const escapeRadiusUniform = gl.getUniformLocation(shaderProgram, 'u_escapeRadius')\r\n  gl.uniform1f(escapeRadiusUniform, escapeRadius)\r\n\r\n  const maxIterationsUniform = gl.getUniformLocation(shaderProgram, 'u_maxIterations')\r\n  gl.uniform1i(maxIterationsUniform, maxIterations)\r\n\r\n  const resolutionUniform = gl.getUniformLocation(shaderProgram, 'u_resolution')\r\n  gl.uniform2fv(resolutionUniform, [canvasRef.width, canvasRef.height])\r\n\r\n  const startedAtUniform = gl.getUniformLocation(shaderProgram, 'u_time')\r\n  gl.uniform1f(startedAtUniform, elapsed / 5000)\r\n\r\n  const widthUniform = gl.getUniformLocation(shaderProgram, 'u_width')\r\n  gl.uniform1f(widthUniform, viewport.width)\r\n\r\n  const heightUniform = gl.getUniformLocation(shaderProgram, 'u_height')\r\n  gl.uniform1f(heightUniform, viewport.height)\r\n\r\n  const xTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatex')\r\n  gl.uniform1f(xTranslateUniform, viewport.translate.x)\r\n\r\n  const yTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatey')\r\n  gl.uniform1f(yTranslateUniform, viewport.translate.y)\r\n\r\n  const colormapUniform = gl.getUniformLocation(shaderProgram, 'u_colormap')\r\n  const texture = bindColorMap(gl, ctx.color.textureData)\r\n  gl.uniform1i(colormapUniform, texture)\r\n}\r\n\r\nfunction getMillisElapsed(startedAt, pauseDuration) {\r\n  return Date.now() - startedAt - pauseDuration\r\n}\r\n\r\nexport function glDrawFrame(ctx) {\r\n  const { canvasRef, gl } = ctx\r\n\r\n  // Only continue if WebGL is available and working\r\n  if (gl === null) {\r\n    alert('Unable to initialize WebGL. Your browser or machine may not support it.')\r\n    return\r\n  }\r\n\r\n  // Construct the final version of the fragment shader code\r\n  const fragCode = buildFragCode(ctx)\r\n\r\n  const vertexBuffer = bindVertices(gl)\r\n  const indexBuffer = bindIndices(gl)\r\n  const shaderProgram = createProgram(gl, fragCode)\r\n  setUniforms(shaderProgram, ctx)\r\n\r\n  /*======= Associating shaders to buffer objects =======*/\r\n  // Bind vertex buffer object\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n\r\n  // Bind index buffer object\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n\r\n  // Get the attribute location\r\n  const coord = gl.getAttribLocation(shaderProgram, 'coordinates')\r\n\r\n  // Point an attribute to the currently bound VBO\r\n  gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0)\r\n\r\n  // Enable the attribute\r\n  gl.enableVertexAttribArray(coord)\r\n\r\n  /*============= Drawing the Quad ================*/\r\n  // Clear the canvas\r\n  gl.clearColor(0, 0, 0, 1)\r\n\r\n  // Enable the depth test\r\n  gl.enable(gl.DEPTH_TEST)\r\n\r\n  // Clear the color buffer bit\r\n  gl.clear(gl.DEPTH_BUFFER_BIT)\r\n\r\n  // Set the view port\r\n  gl.viewport(0, 0, canvasRef.width, canvasRef.height)\r\n\r\n  // Draw the triangles\r\n  gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0)\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n// Credits: https://usehooks.com/useWindowSize/\r\n// License: https://github.com/gragland/usehooks/blob/master/LICENSE\r\nexport function useWindowSize() {\r\n  const isClient = typeof window === 'object'\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    }\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize)\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize\r\n}\r\n\r\nexport function useToggle(initial, whenSetToTrueCb, whenSetToFalseCb) {\r\n  whenSetToTrueCb = whenSetToTrueCb || null\r\n  whenSetToFalseCb = whenSetToFalseCb || null\r\n\r\n  if (typeof initial !== 'boolean') {\r\n    throw new Error('Non-boolean supplied for useToggle initial value')\r\n  }\r\n\r\n  const [bool, setBool] = useState(initial)\r\n\r\n  const toggle = (e) => {\r\n    if (bool === true) {\r\n      setBool(false)\r\n      if (whenSetToFalseCb !== null) {\r\n        if (typeof whenSetToFalseCb !== 'function') {\r\n          throw new Error('whenSetToFalseCb not a function')\r\n        }\r\n        whenSetToFalseCb(e)\r\n      }\r\n    } else {\r\n      setBool(true)\r\n      if (whenSetToTrueCb !== null) {\r\n        if (typeof whenSetToTrueCb !== 'function') {\r\n          throw new Error('whenSetToTrueCb not a function')\r\n        }\r\n        whenSetToTrueCb(e)\r\n      }\r\n    }\r\n  }\r\n\r\n  return [bool, toggle]\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\n\r\nimport { parseHexColor } from '../texture'\r\nimport { glDrawFrame } from '../webgl'\r\n\r\nimport { generateTextureData } from './../texture'\r\nimport { useWindowSize } from './Hooks'\r\nimport { contextToValueObject, ShaderContext } from './ModelProvider'\r\n\r\nexport function scaleViewportByAspectRatio({ width, height, anchor }) {\r\n  function getOrientation() {\r\n    const [canvas] = document.getElementsByClassName('glcanvas')\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    return canvasWidth > canvasHeight ?\r\n      'landscape' :\r\n      'portrait'\r\n  }\r\n\r\n  function getAspectRatio(orientation) {\r\n    const [canvas] = document.getElementsByClassName('glcanvas')\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    // return early if 0 to avoid div by 0 errors\r\n    if (canvasHeight === 0 || canvasWidth === 0) return 1\r\n    if (orientation === 'landscape') {\r\n      return canvasHeight / canvasWidth\r\n    }\r\n    else if (orientation === 'portrait') {\r\n      return canvasWidth / canvasHeight\r\n    }\r\n    // Fallback if orientation does not match one of two expected values\r\n    return 1\r\n  }\r\n\r\n  anchor = anchor || getOrientation()\r\n  const aspectRatio = getAspectRatio(anchor)\r\n  // For landscape, width should not change\r\n  // For portrait, height should not change\r\n  if (anchor === 'landscape') {\r\n    height = width * aspectRatio\r\n  }\r\n  else if (anchor === 'portrait') {\r\n    width = height * aspectRatio\r\n  }\r\n  return {\r\n    width, height\r\n  }\r\n}\r\n\r\nfunction useGlCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const canvasRef = useRef()\r\n  const [, setRef] = ctx.canvasRef\r\n  const [, setGl] = ctx.gl\r\n\r\n  useEffect(() => {\r\n    setRef(canvasRef.current)\r\n    setGl(canvasRef.current.getContext('webgl', { preserveDrawingBuffer: true }))\r\n  }, [setRef, setGl, canvasRef])\r\n\r\n  return canvasRef\r\n}\r\n\r\nfunction useJuliaAnimation() {\r\n  const ctx = useContext(ShaderContext)\r\n  const animateRef = useRef()\r\n  const [lastFrameTime, setLastFrameTime] = ctx.time.lastFrameTime\r\n  const [elapsed, setElapsed] = ctx.time.elapsed\r\n  const [timeScale] = ctx.time.timeScale\r\n  const [paused] = ctx.time.paused\r\n  const [gl] = ctx.gl\r\n\r\n  // Define function to be run on every frame render\r\n  const animate = () => {\r\n    // Do nothing if gl not available\r\n    if (gl === null) {\r\n      return\r\n    }\r\n\r\n    // Advance time if not paused\r\n    if (!paused) {\r\n      const timeElapsedThisFrame = Date.now() - lastFrameTime\r\n      const elapsedDelta = parseFloat(timeElapsedThisFrame * timeScale)\r\n      if (parseFloat(elapsedDelta)) {\r\n        setElapsed(elapsed + elapsedDelta)\r\n      }\r\n    }\r\n\r\n    // Draw frames even when 'paused'\r\n    // Pausing only stops time advancing, we want to see the results\r\n    // of manipulations even while 'paused'\r\n    const glObj = contextToValueObject(ctx)\r\n    glDrawFrame(glObj)\r\n    setLastFrameTime(Date.now())\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Start frame requests\r\n    animateRef.current = requestAnimationFrame(animate)\r\n    // Return cleanup as callback\r\n    return () => cancelAnimationFrame(animateRef.current)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ctx])\r\n}\r\n\r\nfunction useScaleInitialRenderViewport() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  useEffect(() => {\r\n    const newViewport = scaleViewportByAspectRatio({ width, height })\r\n    setWidth(newViewport.width)\r\n    setHeight(newViewport.height)\r\n    // Effect can't fire when width/height changes, results in loop\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n}\r\n\r\nfunction useTextureBuilder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [colorPoints] = ctx.color.colorPoints\r\n  const [curve] = ctx.color.curve\r\n  const [colorModel] = ctx.color.colorModel\r\n  const [, setTextureData] = ctx.color.textureData\r\n\r\n  useEffect(() => {\r\n    const cp = colorPoints.map((o) => {\r\n      return {\r\n        color: parseHexColor(o.hex), position: o.position,\r\n      }\r\n    })\r\n    const newTextureData = generateTextureData(cp, curve, colorModel)\r\n    setTextureData(newTextureData)\r\n  }, [colorPoints, curve, colorModel, setTextureData])\r\n}\r\n\r\nfunction useCanvasImageSaver() {\r\n\r\n  function onDown(e) {\r\n    if (e.key.toLowerCase() === 'enter') {\r\n      const [canvas] = document.getElementsByClassName('glcanvas')\r\n\r\n      const dataURL = canvas.toDataURL('image/png')\r\n      const a = document.createElement(\"a\")\r\n      a.href = dataURL\r\n      a.setAttribute(\"download\", 'image.png')\r\n      a.click()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onDown)\r\n    return () => {\r\n      window.removeEventListener('keydown', onDown)\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default function ShaderCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n  const windowSize = useWindowSize()\r\n\r\n  const [lockAspectRatio] = ctx.viewport.lockAspectRatio\r\n  const [dragStart, setDragStart] = useState()\r\n\r\n  // Initialise canvas and webgl\r\n  const canvasRef = useGlCanvas()\r\n\r\n  // Build colour mapping texture\r\n  useTextureBuilder()\r\n\r\n  // Scale initial viewport size to respect aspect ratio\r\n  useScaleInitialRenderViewport()\r\n\r\n  // Start rendering\r\n  useJuliaAnimation()\r\n\r\n  // Canvas save on keypress\r\n  useCanvasImageSaver()\r\n\r\n  function startDrag(e) {\r\n    const loc = [e.clientX, e.clientY]\r\n    setDragStart(loc)\r\n  }\r\n\r\n  function endDrag(e) {\r\n    // Translate position values from the canvas to xy-coordinates on the grid\r\n    function canvasToGrid({ x, y }) {\r\n      const [canvas] = document.getElementsByClassName('glcanvas')\r\n      const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n      const gridWidth = parseFloat(ctx.viewport.width[0])\r\n      const gridHeight = parseFloat(ctx.viewport.height[0])\r\n\r\n      const widthScale = gridWidth / canvasWidth\r\n      const heightScale = gridHeight / canvasHeight\r\n\r\n      const translateX = parseFloat(ctx.viewport.translate.x[0])\r\n      const translateY = parseFloat(ctx.viewport.translate.y[0])\r\n\r\n      const res = {\r\n        x: -gridWidth / 2 + x * widthScale + translateX,\r\n        y: -gridHeight / 2 + y * heightScale + translateY,\r\n      }\r\n\r\n      return res\r\n    }\r\n\r\n    function dragHasNoArea({ x1, x2, y1, y2 }) {\r\n      const width = Math.abs(x1 - x2)\r\n      const height = Math.abs(y1 - y2)\r\n\r\n      return width < 1 || height < 1\r\n    }\r\n\r\n\r\n    const setTranslateX = ctx.viewport.translate.x[1]\r\n    const setTranslateY = ctx.viewport.translate.y[1]\r\n    const setViewportWidth = ctx.viewport.width[1]\r\n    const setViewportHeight = ctx.viewport.height[1]\r\n\r\n    const dragEnd = [e.clientX, e.clientY]\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n    // Handle error where drags ended on an element other than the canvas\r\n    if (dragStart === undefined || dragEnd === undefined) {\r\n      return\r\n    }\r\n\r\n    // y values subtracted from canvas height to get correct locations\r\n    // canvas dimensions are measured from top left, need to start from bottom\r\n    // left as that's what our grid starts from\r\n    const dragBox = {\r\n      x1: dragStart[0],\r\n      x2: dragEnd[0],\r\n      y1: canvas.offsetHeight - dragStart[1],\r\n      y2: canvas.offsetHeight - dragEnd[1],\r\n    }\r\n\r\n    // Prevent clicks on one point zooming into an infinitely small area\r\n    if (dragHasNoArea(dragBox)) {\r\n      return\r\n    }\r\n\r\n    const dragCenterCanvas = {\r\n      x: (dragBox.x1 + dragBox.x2) / 2,\r\n      y: (dragBox.y1 + dragBox.y2) / 2\r\n    }\r\n    const dragCenterGrid = canvasToGrid(dragCenterCanvas)\r\n\r\n    setTranslateX(dragCenterGrid.x)\r\n    setTranslateY(dragCenterGrid.y)\r\n\r\n    // Scale current viewport size by ratio of drag box\r\n    const viewportWidth = parseFloat(ctx.viewport.width)\r\n    const viewportHeight = parseFloat(ctx.viewport.height)\r\n\r\n    const dragDimensions = {\r\n      width: Math.abs(dragBox.x1 - dragBox.x2),\r\n      height: Math.abs(dragBox.y1 - dragBox.y2)\r\n    }\r\n    const dragViewport = {\r\n      width: viewportWidth * (dragDimensions.width / canvasWidth),\r\n      height: viewportHeight * (dragDimensions.height / canvasHeight),\r\n    }\r\n\r\n    if (lockAspectRatio === true) {\r\n      const newViewport = scaleViewportByAspectRatio(dragViewport)\r\n      setViewportWidth(newViewport.width)\r\n      setViewportHeight(newViewport.height)\r\n    }\r\n    else {\r\n      setViewportWidth(dragViewport.width)\r\n      setViewportHeight(dragViewport.height)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        className='glcanvas'\r\n        width={windowSize.width}\r\n        height={windowSize.height}\r\n        onMouseDown={startDrag}\r\n        onMouseUp={endDrag}\r\n        ref={\r\n          canvasRef}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\nimport { useWindowSize } from './../Hooks'\r\n\r\nfunction useScrollbarSizing(elemRef, windowHeight) {\r\n  const [bool, setBool] = useState(false)\r\n  // If ref element has not been initialised, don't display a scroll\r\n  const elemHeight = elemRef.current ? elemRef.current.getBoundingClientRect().height : 0\r\n\r\n  useEffect(() => {\r\n    if (elemHeight >= windowHeight) {\r\n      setBool(true)\r\n    } else {\r\n      setBool(false)\r\n    }\r\n  }, [elemHeight, windowHeight])\r\n\r\n  return bool\r\n}\r\n\r\nexport default function GUI({ children }) {\r\n  const ref = useRef()\r\n  const { height } = useWindowSize()\r\n  const shouldHaveScroll = useScrollbarSizing(ref, height)\r\n\r\n  const className = `gui-container ${shouldHaveScroll ? 'scrollable' : ''}`\r\n\r\n  return (\r\n    <ul ref={ref} style={{ height }} className={className}>\r\n      {children}\r\n    </ul>\r\n  )\r\n}\r\n\r\nGUI.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import { PropTypes } from 'prop-types'\r\nimport React from 'react'\r\nimport { useToggle } from '../../Hooks'\r\n\r\nexport default function Folder({ title, children, startClosed }) {\r\n  startClosed = startClosed ? true : false\r\n  const [closed, toggle] = useToggle(startClosed)\r\n\r\n  return (\r\n    <li className='folder'>\r\n      <div className='group'>\r\n        <ul className={closed ? 'closed' : ''}>\r\n          <li className='title' onClick={toggle}>\r\n            {title}\r\n          </li>\r\n          {children}\r\n        </ul>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nFolder.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  startClosed: PropTypes.bool,\r\n  children: PropTypes.node,\r\n}\r\n","import React from 'react'\r\nimport Item from './Item'\r\nimport Label from './Label'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function InputField({ type, label, name, tooltip, id, value, onChange }) {\r\n  type = type || 'text' // Default to textbox\r\n  name = name || id // Reuse id if name not provided\r\n  label = label || null\r\n  tooltip = tooltip || null\r\n\r\n  function def(e) {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Item>\r\n      {label ? <Label htmlFor={id} text={label} tooltip={tooltip} /> : null}\r\n      <input type={type} name={name} id={id} value={value} checked={value} onChange={onChange} onClick={def} />\r\n    </Item>\r\n  )\r\n}\r\n\r\nInputField.propTypes = {\r\n  type: PropTypes.oneOf(['text', 'checkbox', 'color']),\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function Coefficients() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.coefficients\r\n\r\n  const label = 'Coefficients'\r\n  const id = lowerTrim(label)\r\n  const tooltip = `Comma-seperated values for the coefficients of each polynomial term. <br><br>\r\n    N values applied in the order Z<sup>n-1</sup> + Z<sup>n-2</sup> + ... + Z, C <br><br>\r\n    It is recommended to keep the coefficient of the highest term ≤1`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\n\r\nexport function ConstantPointX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.c.x\r\n\r\n  const label = 'X'\r\n  const id = 'constantx'\r\n  const tooltip = `X (real) component of the constant point C`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function ConstantPointY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.c.y\r\n\r\n  const label = 'Y'\r\n  const id = 'constanty'\r\n  const tooltip = `Y (imaginary) component of the constant point C`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function MaxIterations() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.maxIterations\r\n\r\n  const label = 'Max Iterations'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Maximum number of times to iterate a point before it is considered to be part of the bounded set'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers';\r\n\r\nexport default function EscapeRadius() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.escapeRadius\r\n\r\n  const label = 'Escape Radius'\r\n  const id = lowerTrim(label)\r\n  const tooltip =\r\n    \"When an iterates' magnitude is greater than the square root of this number, consider it as tending towards infinity\"\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport InputField from '../base_components/InputField'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function SmoothingToggle() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.useSmoothing\r\n\r\n  const label = 'Julia smoothing'\r\n  const id = lowerTrim(label)\r\n  const tooltip =\r\n    'Toggle Julia escape iteration renormalisation. Produces smooth gradients between the boundries of n and n+1 iterations before escape'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.checked\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField type='checkbox' id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport default function TimeScale() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.time.timeScale\r\n\r\n  const label = 'Time Scale'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Scale the speed at which time passes for functions reliant on u_time'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from './../base_components/InputField'\r\nimport Folder from '../base_components/Folder'\r\nimport { scaleViewportByAspectRatio } from './../../ShaderCanvas'\r\n\r\nexport default function DimensionsFolder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n  const [height, setHeight] = ctx.viewport.height\r\n  const [lockAspectRatio] = ctx.viewport.lockAspectRatio\r\n\r\n  function handleChanges(e) {\r\n    let newViewport\r\n    switch (e.target.name) {\r\n      case 'viewportwidth':\r\n        const newWidth = e.target.value\r\n        newViewport = lockAspectRatio\r\n          ? scaleViewportByAspectRatio({ width: newWidth, height, anchor: 'landscape' })\r\n          : { width: newWidth, height }\r\n        setWidth(newViewport.width)\r\n        setHeight(newViewport.height)\r\n        break\r\n      case 'viewportheight':\r\n        const newHeight = e.target.value\r\n        newViewport = lockAspectRatio\r\n          ? scaleViewportByAspectRatio({ width, height: newHeight, anchor: 'portrait' })\r\n          : { width, height: newHeight }\r\n        setWidth(newViewport.width)\r\n        setHeight(newViewport.height)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Folder title='Dimensions'>\r\n      <ViewportWidth value={width} onChange={handleChanges} />\r\n      <ViewportHeight value={height} onChange={handleChanges} />\r\n    </Folder>\r\n  )\r\n}\r\n\r\nfunction ViewportWidth({ value, onChange }) {\r\n  const label = 'Width'\r\n  const id = 'viewportwidth'\r\n  const tooltip = 'Width of the complex plane'\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nfunction ViewportHeight({ value, onChange }) {\r\n  const label = 'Height'\r\n  const id = 'viewportheight'\r\n  const tooltip = 'Height of the complex plane'\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport InputField from './../base_components/InputField'\r\nimport { ShaderContext } from './../../ModelProvider';\r\n\r\nexport function TranslateX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.translate.x\r\n\r\n  const label = 'X'\r\n  const id = 'translatex'\r\n  const tooltip = 'Horizontal translation of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function TranslateY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.translate.y\r\n\r\n  const label = 'Y'\r\n  const id = 'translatey'\r\n  const tooltip = 'Vertical translation of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from './../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function LockAspectRatio() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.lockAspectRatio\r\n\r\n  const label = 'Lock aspect ratio'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Lock the aspect ratio of the complex plane to match that of the canvas'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.checked\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField type='checkbox' id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\nimport { useContext } from 'react'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { Interps } from '../../../interp'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function ColorCurveSelector() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.color.curve\r\n  const curveName = Interps[value].name\r\n  const options = Object.keys(Interps).map(key => Interps[key].name)\r\n\r\n  const label = 'Mapping curve'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Curve used to shape the colour mapping'\r\n\r\n  function onChange(e) {\r\n    const selectedValue = e.target.value\r\n    const interpKey = Object.keys(Interps).find(key => Interps[key].name === selectedValue)\r\n    setValue(interpKey)\r\n  }\r\n\r\n  return (\r\n    <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={curveName} onChange={onChange} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\nimport { useContext } from 'react'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { ColorSpaces } from '../../../colorspace'\r\nimport { lowerTrim } from './../../../helpers';\r\n\r\nexport default function ColorModelSelector() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.color.colorModel\r\n  const options = ColorSpaces.map(obj => obj.name)\r\n\r\n  const label = 'Colour model'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Colour model used for interpolation between each colour specified in the colour map'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ColorPointControls() {\r\n  return <div></div>\r\n}\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\nimport InputField from './../base_components/InputField'\r\nimport Folder from '../base_components/Folder'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nfunction ColorPicker({ item, idx, handleChange }) {\r\n  const value = item.hex\r\n  const label = 'Colour'\r\n  const name = 'color'\r\n  const id = `${lowerTrim(label)}${idx}`\r\n\r\n  function onChange(e) {\r\n    handleChange(e, idx)\r\n  }\r\n\r\n  return <InputField type='color' label={label} name={name} id={id} value={value} onChange={onChange} />\r\n}\r\n\r\nfunction ColorPosition({ item, idx, handleChange }) {\r\n  const value = item.position\r\n  const label = 'Position'\r\n  const name = 'position'\r\n  const id = `${lowerTrim(label)}${idx}`\r\n  const tooltip = \"Value in range [0, 1] representing the colour's position on the colour mapping\"\r\n\r\n  function onChange(e) {\r\n    handleChange(e, idx)\r\n  }\r\n\r\n  return (\r\n    <InputField type='text' label={label} name={name} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n  )\r\n}\r\n\r\nexport default function ColorPointItem({ item, idx, handleChange }) {\r\n  return (\r\n    <Folder title={`Colour ${idx + 1}`}>\r\n      <ColorPicker item={item} idx={idx} handleChange={handleChange} />\r\n      <ColorPosition item={item} idx={idx} handleChange={handleChange} />\r\n    </Folder>\r\n  )\r\n}\r\n\r\nconst propTypes = {\r\n  item: PropTypes.shape({\r\n    hex: PropTypes.string,\r\n    position: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  }),\r\n  idx: PropTypes.number,\r\n  handleChange: PropTypes.func.isRequired,\r\n}\r\n\r\nColorPicker.propTypes = propTypes\r\nColorPosition.propTypes = propTypes\r\nColorPointItem.propTypes = propTypes\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function Base64Image({ data, encoding, alt, className }) {\r\n  alt = alt || ''\r\n  return <img className={className} src={`data:image/${encoding};base64,${data}`} alt={alt} />\r\n}\r\n\r\nBase64Image.propTypes = {\r\n  data: PropTypes.string.isRequired,\r\n  encoding: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  className: PropTypes.string,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport Base64Image from '../base_components/Base64Image'\r\nimport Item from '../base_components/Item'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport UPNG from 'upng'\r\nimport { TEX_WIDTH, TEX_HEIGHT } from './../../../texture'\r\n\r\nfunction useColorMapBase64() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [textureData] = ctx.color.textureData\r\n\r\n  if (textureData.length >= 4) {\r\n    const pngArrayBuffer = UPNG.encode(textureData, TEX_WIDTH, TEX_HEIGHT, 0, [])\r\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(pngArrayBuffer)))\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default function ColorMapRender() {\r\n  const encoding = 'png'\r\n  const data = useColorMapBase64()\r\n\r\n  return data !== null ? (\r\n    <Item>\r\n      <Base64Image className='colormap' data={data} encoding={encoding} />\r\n    </Item>\r\n  ) : null\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport Folder from '../base_components/Folder'\r\nimport ColorPointControls from './ColorPointControls'\r\nimport ColorPointItem from './ColorPointItem'\r\nimport ColorMapRender from './ColorMapRender'\r\n\r\nexport default function ColorMapFolder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [colorPoints, setColorPoints] = ctx.color.colorPoints\r\n\r\n  // Processes updates to child colour and position elements\r\n  function handleColorPointChanges(e, idx) {\r\n    const newValue = e.target.value\r\n    const objAtIdx = colorPoints[idx]\r\n\r\n    const nextObj = (() => {\r\n      switch (e.target.name) {\r\n        case 'color':\r\n          return { ...objAtIdx, hex: newValue }\r\n        case 'position':\r\n          return { ...objAtIdx, position: newValue }\r\n        default:\r\n          return objAtIdx\r\n      }\r\n    }).call()\r\n\r\n    // When updating an array stored in state, a new array must be created for a change to be detected\r\n    // Otherwise, effects dependant on the state will not trigger on update\r\n    // See: https://stackoverflow.com/questions/54620928/useeffect-hook-not-firing-after-state-change/54621059#54621059\r\n    const nextColorPoints = [...colorPoints]\r\n    nextColorPoints[idx] = nextObj\r\n    setColorPoints(nextColorPoints)\r\n  }\r\n\r\n  return (\r\n    <Folder title='Colour Points'>\r\n      <ColorPointControls />\r\n      {colorPoints.map((item, idx) => (\r\n        <ColorPointItem item={item} key={idx} idx={idx} handleChange={handleColorPointChanges} />\r\n      ))}\r\n    </Folder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function Button({ text, onClick, className }) {\r\n  text = text || null\r\n  return (\r\n    <button className={`btn ${className}`} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n  className: PropTypes.string,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport Button from './../base_components/Button'\r\nimport Item from '../base_components/Item'\r\nimport { ShaderContext } from './../../ModelProvider'\r\n\r\nexport default function PauseButton() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [paused, setPaused] = ctx.time.paused\r\n  const text = paused ? 'Resume' : 'Pause'\r\n  const className = 'btn-full'\r\n\r\n  function toggle() {\r\n    if (paused) {\r\n      setPaused(false)\r\n    } else {\r\n      setPaused(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Item>\r\n      <Button text={text} onClick={toggle} className={className} />\r\n    </Item>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport InputField from '../base_components/InputField'\r\n\r\nexport default function PresetNameField({ value, onChange }) {\r\n  const id = 'presetname'\r\n  const label = 'Preset name'\r\n\r\n  return <InputField id={id} label={label} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\n\r\nexport default function PresetSelector({ options, value, onChange }) {\r\n  const id = 'presetselector'\r\n  const label = 'Presets'\r\n\r\n  return <OptionSelector id={id} label={label} options={options} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\nimport Item from '../base_components/Item'\r\n\r\nexport default function PresetErrorField({ text }) {\r\n  return text !== '' ? (\r\n    <Item>\r\n      <span className='error'>{text}</span>\r\n    </Item>\r\n  ) : null\r\n}\r\n","import React from 'react'\r\nimport Button from './../base_components/Button'\r\nimport Item from '../base_components/Item'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport function PresetButtonSave({ onClick }) {\r\n  const text = 'Save'\r\n  const className = 'btn-half'\r\n\r\n  return <Button text={text} onClick={onClick} className={className} />\r\n}\r\n\r\nexport function PresetButtonLoad({ onClick }) {\r\n  const text = 'Load'\r\n  const className = 'btn-half'\r\n\r\n  return <Button text={text} onClick={onClick} className={className} />\r\n}\r\n\r\nexport function PresetButtonImport({ onClick }) {\r\n  const text = 'Import'\r\n  const className = 'btn-half'\r\n\r\n  return <Button text={text} onClick={onClick} className={className} />\r\n}\r\n\r\nexport function PresetButtonExport({ onClick }) {\r\n  const text = 'Export'\r\n  const className = 'btn-half'\r\n\r\n  return <Button text={text} onClick={onClick} className={className} />\r\n}\r\n\r\nexport function SaveLoadButtons({ onClickSave, onClickLoad }) {\r\n  return (\r\n    <Item>\r\n      <PresetButtonSave onClick={onClickSave} />\r\n      <PresetButtonLoad onClick={onClickLoad} />\r\n    </Item>\r\n  )\r\n}\r\n\r\nSaveLoadButtons.propTypes = {\r\n  onClickSave: PropTypes.func.isRequired,\r\n  onClickLoad: PropTypes.func.isRequired,\r\n}\r\n\r\nexport function ImportExportButtons({ onClickImport, onClickExport }) {\r\n  return (\r\n    <Item>\r\n      <PresetButtonImport onClick={onClickImport} />\r\n      <PresetButtonExport onClick={onClickExport} />\r\n    </Item>\r\n  )\r\n}\r\n\r\nImportExportButtons.propTypes = {\r\n  onClickImport: PropTypes.func.isRequired,\r\n  onClickExport: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { contextToValueObject } from '../../ModelProvider'\r\nimport { loadObjectIntoContext, ShaderContext } from './../../ModelProvider'\r\nimport Folder from '../base_components/Folder'\r\nimport PresetNameField from './PresetNameField'\r\nimport PresetSelector from './PresetSelector'\r\nimport PresetErrorField from './PresetErrorField'\r\nimport { ImportExportButtons, SaveLoadButtons } from './PresetButtons'\r\n\r\nfunction makePresetObject(name, _ctx) {\r\n  const ctx = contextToValueObject(_ctx)\r\n  const { julia, viewport, color } = ctx\r\n  const { colorPoints, curve, colorModel } = color\r\n  return {\r\n    name,\r\n    julia,\r\n    viewport,\r\n    color: {\r\n      colorPoints,\r\n      curve,\r\n      colorModel,\r\n    },\r\n  }\r\n}\r\n\r\nfunction namedPresetExists(name) {\r\n  const nameMatch = getPresetArray().filter((preset) => preset.name === name)\r\n  return nameMatch.length > 0\r\n}\r\n\r\nfunction getPresetArray() {\r\n  const presetArray = localStorage.getItem('presets')\r\n  return presetArray ? JSON.parse(presetArray) : []\r\n}\r\n\r\nfunction addPresetToArray(preset) {\r\n  const array = getPresetArray()\r\n  array.push(preset)\r\n  localStorage.setItem('presets', JSON.stringify(array))\r\n}\r\n\r\nfunction removePresetFromArray(name) {\r\n  const presets = getPresetArray().filter((preset) => preset.name !== name)\r\n  localStorage.setItem('presets', JSON.stringify(presets))\r\n}\r\n\r\nexport default function PresetFolder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [selectedPresetName, setSelectedPresetName] = useState('')\r\n  const [presetName, setPresetName] = useState('')\r\n  const [presetsList, setPresetsList] = useState([])\r\n  const [promptedToOverwrite, setPromptedToOverwrite] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const presetsNames = presetsList.map((item) => item.name).filter((name) => name !== undefined)\r\n\r\n  const title = 'Presets'\r\n\r\n  function updatePresetsList() {\r\n    const presets = getPresetArray()\r\n    setPresetsList(presets)\r\n  }\r\n\r\n  function setInitialSelectedPreset() {\r\n    const initial = presetsList.length !== 0 ? presetsList[0].name : ''\r\n    setSelectedPresetName(initial)\r\n  }\r\n\r\n  function resetErrorState() {\r\n    setError('')\r\n    setPromptedToOverwrite(false)\r\n  }\r\n\r\n  function savePreset() {\r\n    // Deny empty name & warn\r\n    if (presetName === '') {\r\n      setError('Cannot save without entering a name')\r\n      return\r\n    }\r\n\r\n    // If preset with entered name already exists, ask to overwrite\r\n    if (namedPresetExists(presetName)) {\r\n      if (!promptedToOverwrite) {\r\n        setPromptedToOverwrite(true)\r\n        setError('Click save again to overwrite existing preset')\r\n        return\r\n      }\r\n      // Delete existing preset with matching name if attempting to save again\r\n      removePresetFromArray(presetName)\r\n    }\r\n    // Add and update list if all checks pass\r\n    const presetObject = makePresetObject(presetName, ctx)\r\n    addPresetToArray(presetObject)\r\n    updatePresetsList()\r\n    resetErrorState()\r\n  }\r\n\r\n  function loadPreset() {\r\n    const presetArray = getPresetArray()\r\n    const preset = presetArray.find((item) => item.name === selectedPresetName)\r\n\r\n    try {\r\n      delete preset.name // Name of the preset doesn't get loaded into state\r\n      loadObjectIntoContext(preset, ctx)\r\n      setPresetName(selectedPresetName)\r\n      resetErrorState()\r\n    } catch {\r\n      return\r\n    }\r\n  }\r\n\r\n  // function currentToBase64() {\r\n  //   const { julia, viewport, color } = contextToValueObject(ctx)\r\n  //   const { colorPoints, curve, model } = color\r\n  //   const color2 = { colorPoints, curve, model }\r\n  //   const obj = { julia, viewport, color: color2 }\r\n  //   const base64 = btoa(JSON.stringify(obj))\r\n  //   console.log(base64)\r\n  // }\r\n\r\n  // function importBase64() {\r\n\r\n  // }\r\n\r\n  function updateSelection(e) {\r\n    setSelectedPresetName(e.target.value)\r\n    resetErrorState()\r\n  }\r\n\r\n  function updatePresetName(e) {\r\n    setPresetName(e.target.value)\r\n    resetErrorState()\r\n  }\r\n\r\n  // Initial select element population\r\n  useEffect(() => {\r\n    updatePresetsList()\r\n  }, [])\r\n\r\n  // Initial selected option in select element\r\n  useEffect(() => {\r\n    setInitialSelectedPreset()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [presetsList])\r\n\r\n  return (\r\n    <Folder title={title}>\r\n      <PresetSelector options={presetsNames} value={selectedPresetName || ''} onChange={updateSelection} />\r\n      <PresetNameField value={presetName} onChange={updatePresetName} />\r\n      <SaveLoadButtons onClickSave={savePreset} onClickLoad={loadPreset} />\r\n      <PresetErrorField text={error} />\r\n      {/* <ImportExportButtons onClickImport={() => null} onClickExport={currentToBase64} /> */}\r\n    </Folder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Button from '../base_components/Button'\r\nimport Item from '../base_components/Item'\r\n\r\nexport default function ToggleMenuButton({ onClick }) {\r\n  const text = 'Toggle Menu'\r\n  const className = 'btn-full'\r\n  return (\r\n    <Item>\r\n      <Button text={text} onClick={onClick} className={className} />\r\n    </Item>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport GUI from './gui/GUI'\r\nimport Folder from './gui/base_components/Folder'\r\nimport Coefficients from './gui/julia/Coefficients'\r\nimport { ConstantPointY, ConstantPointX } from './gui/julia/ConstantPoint'\r\nimport MaxIterations from './gui/julia/MaxIterations'\r\nimport EscapeRadius from './gui/julia/EscapeRadius'\r\nimport SmoothingToggle from './gui/julia/SmoothingToggle'\r\nimport TimeScale from './gui/julia/TimeScale'\r\nimport DimensionsFolder from './gui/viewport/Dimensions'\r\nimport { TranslateX, TranslateY } from './gui/viewport/Translate'\r\nimport LockAspectRatio from './gui/viewport/LockAspectRatio'\r\nimport ColorCurveSelector from './gui/colourmapping/ColorCurveSelector'\r\nimport ColorModelSelector from './gui/colourmapping/ColorModelSelector'\r\nimport ColorMapFolder from './gui/colourmapping/ColorMapFolder'\r\nimport MSAA from './gui/julia/MSAA'\r\nimport PauseButton from './gui/other/PauseButton'\r\nimport PresetFolder from './gui/presets/PresetFolder'\r\nimport { useToggle } from './Hooks'\r\nimport ToggleMenuButton from './gui/other/ToggleMenuButton'\r\nimport ColorMapRender from './gui/colourmapping/ColorMapRender';\r\n\r\nexport default function MyGUI() {\r\n  const [hideMenu, toggleMenu] = useToggle(false)\r\n\r\n  return (\r\n    <GUI>\r\n      <PauseButton />\r\n      <ToggleMenuButton onClick={toggleMenu} />\r\n      <div style={{ display: hideMenu ? 'none' : 'inherit' }}>\r\n        <Folder title='Julia Variables'>\r\n          <Coefficients />\r\n          <Folder title='Constant Point'>\r\n            <ConstantPointX />\r\n            <ConstantPointY />\r\n          </Folder>\r\n          <MaxIterations />\r\n          <EscapeRadius />\r\n          <SmoothingToggle />\r\n          <MSAA />\r\n          <TimeScale />\r\n        </Folder>\r\n        <Folder title='Viewport' startClosed>\r\n          <DimensionsFolder />\r\n          <Folder title='Translate'>\r\n            <TranslateX />\r\n            <TranslateY />\r\n          </Folder>\r\n          <LockAspectRatio />\r\n        </Folder>\r\n        <Folder title='Colour Mapping' startClosed>\r\n          <ColorMapFolder />\r\n          <ColorCurveSelector />\r\n          <ColorModelSelector />\r\n          <ColorMapRender />\r\n        </Folder>\r\n        <PresetFolder />\r\n      </div>\r\n    </GUI>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\r\nimport './App.scss'\r\nimport './components/gui/gui.scss'\r\nimport ModelProvider from './components/ModelProvider'\r\nimport ShaderCanvas from './components/ShaderCanvas'\r\nimport MyGUI from './components/MyGUI'\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='App'>\r\n      <ModelProvider>\r\n        <ShaderCanvas />\r\n        <MyGUI />\r\n      </ModelProvider>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}