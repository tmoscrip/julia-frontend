{"version":3,"sources":["components/ModelProvider.js","webgl/math.js","webgl/color.js","components/gui/base_components/Item.js","components/gui/base_components/HelpTooltip.js","components/gui/base_components/Label.js","components/gui/base_components/InputField.js","helpers.js","components/gui/julia/EscapeRadius.js","webgl/julia.js","interp.js","colorspace.js","texture.js","webgl.js","components/gui/GUI.js","components/gui/base_components/Folder.js","components/gui/julia/Coefficients.js","components/gui/julia/ConstantPoint.js","components/gui/julia/MaxIterations.js","components/gui/julia/SmoothingToggle.js","components/gui/julia/TimeScale.js","components/gui/viewport/Dimensions.js","components/gui/viewport/Translate.js","components/gui/viewport/LockAspectRatio.js","components/gui/base_components/OptionSelector.js","components/gui/colourmapping/ColorCurveSelector.js","components/gui/colourmapping/ColorModelSelector.js","components/gui/colourmapping/ColorPointControls.js","components/gui/colourmapping/ColorPointItem.js","components/gui/colourmapping/ColorMapFolder.js","components/MyGUI.js","components/ShaderCanvas.js","App.js","serviceWorker.js","index.js"],"names":["ShaderContext","React","createContext","ShaderProvider","Provider","isUseState","Consumer","item","Array","isArray","length","name","startsWith","hasSetState","ModelProvider","children","initModelState","canvasRef","useState","gl","julia","c","x","y","coefficients","escapeRadius","maxIterations","useSmoothing","viewport","width","height","translate","lockAspectRatio","color","colorPoints","hex","position","curve","colorModel","textureData","time","startedAt","Date","now","paused","lastPausedAt","pauseDuration","timeScale","value","math","Item","className","HelpTooltip","text","dangerouslySetInnerHTML","__html","Label","htmlFor","tooltip","InputField","type","label","id","onChange","checked","findClosestPair","arr","num","i","cur","next","lowerTrim","str","trim","toLowerCase","EscapeRadius","ctx","useContext","setValue","e","newValue","target","fixWebGlInts","match","finalStr","anyNumberRegex","RegExp","matches","exec","push","filter","m","includes","insertedCount","insertAt","slice","cmplxExp","exp","coeff","parseFloat","coeffList","replace","split","polySource","nextTerm","concat","polyIterate","main","cValue","buildFragCode","val","degree","toString","smoothIterations","vertCode","doInterp","a","b","frac","fn","res","Interps","linear","quadratic","Math","pow","cubic","squareroot","cuberoot","cosine","cos","PI","logarithmic","log","exponential","ColorSpaces","channels","min","max","rgb2hsv","rgbColor","h","map","r","g","delta","TEX_WIDTH","TEX_CHANNELS","parseHexColor","colorString","cString","parseInt","generateTextureData","curveName","interp","sortedColorPoints","sort","sortedPositions","convertedColorPoints","texLerp","mapPct","closetPairIdxs","c1","c1pos","c2","c2pos","localMapPct","abs","tmp","tex2D","mapNDArray","hsvColor","f","p","q","t","s","v","floor","hsv2rgb","round","TEX_SIZE","Uint8Array","loc","chan","vertices","indices","setUniforms","shaderProgram","escapeRadiusUniform","getUniformLocation","uniform1f","maxIterationsUniform","uniform1i","resolutionUniform","uniform2fv","startedAtUniform","secondsSinceStart","widthUniform","heightUniform","xTranslateUniform","yTranslateUniform","colormapUniform","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","bindColorMap","glDrawFrame","fragCode","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","bindVertices","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","bindIndices","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getShaderParameter","COMPILE_STATUS","logOutput","getShaderInfoLog","idxList","lineNumber","substring","console","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","alert","GUI","Folder","title","closed","setClosed","onClick","Coefficients","ConstantPointX","ConstantPointY","MaxIterations","SmoothingToggle","TimeScale","ViewportWidth","ViewportHeight","TranslateX","TranslateY","LockAspectRatio","Option","key","OptionSelector","options","idx","ColorCurveSelector","Object","keys","selectedValue","interpKey","find","ColorModelSelector","obj","ColorPointControls","ColorPicker","handleChange","ColorPosition","ColorPointItem","ColorMapFolder","setColorPoints","handleColorPointChanges","objAtIdx","nextObj","call","nextColorPoints","MyGUI","scaleViewportByAspectRatio","canvasOrientation","canvas","document","getElementsByClassName","offsetWidth","offsetHeight","getOrientation","aspectRatio","orientation","canvasWidth","canvasHeight","getAspectRatio","useJuliaAnimation","animateRef","useRef","frameCount","setFrameCount","lastFrameTime","setLastFrameTime","useEffect","current","requestAnimationFrame","animate","contextToValueObject","valuesObj","cancelAnimationFrame","ShaderCanvas","dragStart","setDragStart","setRef","setGl","getContext","useGlCanvas","setTextureData","newTextureData","o","useTextureBuilder","setWidth","setHeight","vp","useAspectRatioScaling","onMouseDown","clientX","clientY","onMouseUp","setTranslateX","setTranslateY","setViewportWidth","setViewportHeight","dragEnd","dragBox","x1","x2","y1","y2","dragHasNoArea","dragCenterGrid","gridWidth","gridHeight","heightScale","canvasToGrid","viewportWidth","viewportHeight","dragViewport","newViewport","ref","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbdeb769.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const ShaderContext = React.createContext()\r\nexport const ShaderProvider = ShaderContext.Provider\r\nexport const ShaderConsumer = ShaderContext.Consumer\r\n\r\n/*\r\n  Take object from context and extract the values for each setState array\r\n  Recurse down if possilble and maintain k:v structure\r\n*/\r\n\r\n// Check to see if array has useState set function within\r\nconst hasSetState = item => {\r\n  return typeof item[1] === 'function' && item[1].name.startsWith('bound ')\r\n}\r\n\r\n// Is the item a useState array?\r\n// Perform checks on requirements for hasSetState beforehand\r\nconst isUseState = item => {\r\n  return Array.isArray(item) && item.length === 2 && hasSetState(item)\r\n}\r\n\r\n// Keeps object structure, but converts [state, setState]\r\n// Arrays to just the state value\r\nexport function contextToValueObject(obj) {\r\n  const valuesObj = {}\r\n  for (let item in obj) {\r\n    if (isUseState(obj[item])) {\r\n      valuesObj[item] = obj[item][0]\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      valuesObj[item] = contextToValueObject(obj[item])\r\n    }\r\n  }\r\n\r\n  return valuesObj\r\n}\r\n\r\n// Inverse of contextToValueObject\r\n// Takes an object and attempts to move values from\r\n// it into context's state through setState\r\nexport function loadObjectIntoContext(obj, ctx) {\r\n  for (const item in obj) {\r\n    if (isUseState(ctx[item])) {\r\n      // Call setState in ctx for each key in obj\r\n      const setState = ctx[item][1]\r\n      setState(obj[item])\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      loadObjectIntoContext(obj[item], ctx[item])\r\n    }\r\n  }\r\n}\r\n\r\nfunction ModelProvider({ children }) {\r\n  const initModelState = {\r\n    canvasRef: useState(null), // Canvas element used for rendering the fractal\r\n    gl: useState(null), // WebGL context of the canvas\r\n    julia: {\r\n      c: {\r\n        x: useState('-0.2'),\r\n        y: useState('0.4*cos(u_time) + sin(u_time)'),\r\n      },\r\n      coefficients: useState('1/2, 2/3, 0 , 0, 1'),\r\n      escapeRadius: useState('20'),\r\n      maxIterations: useState('50'),\r\n      useSmoothing: useState(true),\r\n    },\r\n    viewport: {\r\n      width: useState('7'),\r\n      height: useState('7'),\r\n      translate: {\r\n        x: useState('0'),\r\n        y: useState('0'),\r\n      },\r\n      lockAspectRatio: useState(true),\r\n    },\r\n    color: {\r\n      colorPoints: useState([\r\n        {\r\n          hex: '#000000',\r\n          position: '0',\r\n        },\r\n        {\r\n          hex: '#FF0000',\r\n          position: '1.0',\r\n        },\r\n      ]),\r\n      curve: useState('linear'),\r\n      colorModel: useState('RGB'),\r\n      textureData: useState([255, 255, 255]),\r\n    },\r\n    time: {\r\n      startedAt: useState(Date.now()),\r\n      paused: useState(false),\r\n      lastPausedAt: useState(0),\r\n      pauseDuration: useState(0),\r\n      timeScale: useState('0.5'),\r\n    },\r\n  }\r\n\r\n  return <ShaderProvider value={initModelState}>{children}</ShaderProvider>\r\n}\r\n\r\nModelProvider.propTypes = {}\r\n\r\nexport default ModelProvider\r\n","//\r\n// MATHEMATICAL CONSTANTS\r\n//\r\nconst mathConstants = `\r\n#define PI 3.14159265359\r\n#define TAU 6.28318530718\r\n`\r\n\r\n//\r\n// COMPLEX NUMBER OPERATIONS\r\n// Source: https://gist.github.com/NiklasRosenstein/ee1f1b5786f94e17995361c63dafeb3f\r\n//\r\nconst complexConjug = `\r\nvec2 complexConjug(in vec2 c) { \r\n  return vec2(c.x, -c.y); \r\n}\r\n`\r\n\r\nconst complexMult = `\r\nvec2 complexMult(in vec2 a, in vec2 b) {\r\n  return vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\r\n}\r\n`\r\n\r\nconst complexDiv = `\r\nvec2 complexDiv(in vec2 a, in vec2 b) {\r\n  return complexMult(a, complexConjug(b));\r\n}\r\n`\r\n\r\nconst complexMag = `\r\nfloat complexMag(in vec2 c) { \r\n  return sqrt(c.x * c.x + c.y * c.y); \r\n}\r\n`\r\n\r\nconst complexAdd = `\r\nvec2 complexAdd(vec2 z1, vec2 z2) { \r\n  return vec2(z1.x + z2.x, z1.y + z2.y); \r\n}\r\n`\r\n\r\n// See http://mathworld.wolfram.com/ComplexExponentiation.html\r\n// Raises a complex number to the power of a second complex number\r\n// Use vec2(x, 0) as second parameter to raise by only a real\r\nconst complexPower = `\r\nvec2 complexPower(vec2 z1, vec2 z2) {\r\n  float a2b2 = z1.x * z1.x + z1.y * z1.y;\r\n  float t1 = pow(a2b2, z2.x / 2.) * exp(-z2.y * atan(z1.y, z1.x));\r\n  float t2 = z2.x * atan(z1.y, z1.x) + .5 * z2.y * log(a2b2);\r\n  return vec2(t1 * cos(t2), t1 * sin(t2));\r\n}\r\n`\r\n\r\nexport const math = `\r\n${mathConstants}\r\n${complexConjug}\r\n${complexMult}\r\n${complexDiv}\r\n${complexMag}\r\n${complexPower}\r\n${complexAdd}\r\n`","//\r\n// color SPACE FUNCTIONS\r\n//\r\nconst hsv2rgb = `\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\r\n}\r\n`\r\n\r\n//\r\n// JULIA ITERATIONS HSV COLORING FUNCTIONS\r\n//\r\nconst huefn = `\r\nfloat huefn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .1 + .3*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst satfn = `\r\nfloat satfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + .5*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst valfn = `\r\nfloat valfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + 2.*(iterations / max_iter);\r\n}\r\n`\r\n\r\nexport const color = `\r\n${hsv2rgb}\r\n${huefn}\r\n${satfn}\r\n${valfn}\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Item({ children }) {\r\n  return <li className='item'>{children}</li>\r\n}\r\n\r\nItem.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function HelpTooltip({ text }) {\r\n  return (\r\n    <div className='tooltip'>\r\n      <span dangerouslySetInnerHTML={{ __html: text }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nHelpTooltip.propTypes = {\r\n  text: PropTypes.node.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport HelpTooltip from './HelpTooltip'\r\n\r\nexport default function Label({ htmlFor, text, tooltip }) {\r\n  tooltip = tooltip || null\r\n  return (\r\n    <>\r\n      <label htmlFor={htmlFor}>\r\n        {text} {tooltip ? <HelpTooltip text={tooltip} /> : null}\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n\r\nLabel.propTypes = {\r\n  htmlFor: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react'\r\nimport Item from './Item'\r\nimport Label from './Label'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function InputField({ type, label, name, tooltip, id, value, onChange }) {\r\n  type = type || 'text' // Default to textbox\r\n  name = name || id // Reuse id if name not provided\r\n  label = label || null\r\n  tooltip = tooltip || null\r\n\r\n  return (\r\n    <Item>\r\n      {label ? <Label htmlFor={id} text={label} tooltip={tooltip} /> : null}\r\n      <input type={type} name={name} id={id} value={value} checked={value} onChange={onChange} />\r\n    </Item>\r\n  )\r\n}\r\n\r\nInputField.propTypes = {\r\n  type: PropTypes.oneOf(['text', 'checkbox', 'color']),\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","export function mapNDArray(arr, fn) {\r\n  for (let i in arr) {\r\n    let e = arr[i]\r\n    if (e != null && Array.isArray(e)) {\r\n      arr[i] = mapNDArray(arr[i], fn)\r\n    } else {\r\n      arr[i] = fn(arr[i])\r\n    }\r\n  }\r\n  return arr\r\n}\r\n\r\nexport function findClosestPair(arr, num) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let cur = arr[i]\r\n    let next = arr[i + 1]\r\n    if (cur <= num && next > num) {\r\n      return [i, i + 1]\r\n    }\r\n  }\r\n}\r\n\r\nexport function lowerTrim(str) {\r\n  return str.trim().toLowerCase()\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers';\r\n\r\nexport default function EscapeRadius() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.escapeRadius\r\n\r\n  const label = 'Escape Radius'\r\n  const id = lowerTrim(label)\r\n  const tooltip =\r\n    \"When an iterates' magnitude is greater than the square root of this number, consider it as tending towards infinity\"\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import { math } from './math'\r\nimport { color } from './color'\r\nimport EscapeRadius from './../components/gui/julia/EscapeRadius'\r\n\r\n/*\r\n  Ints are not implictly cast to floats in WebGL, any value which is passed to\r\n  WebGL code for use as a float must contain a decimal point\r\n\r\n  This function appends a period to any int to avoid type errors once it's passed\r\n  into WebGL code\r\n*/\r\nfunction fixWebGlInts(str) {\r\n  let finalStr = str\r\n  // Capture: 1. floats, 2. floats (int w/ trailing period), 3. ints\r\n  const anyNumberRegex = new RegExp(/\\d+[.]\\d+|(\\d+[.])+|(\\d+)/g)\r\n\r\n  // Find all matches\r\n  let match\r\n  let matches = []\r\n  while ((match = anyNumberRegex.exec(str)) !== null) {\r\n    matches.push(match)\r\n  }\r\n\r\n  // Filter out floats\r\n  matches = matches.filter(m => !m[0].includes('.'))\r\n\r\n  // How many extra characters have been inserted\r\n  let insertedCount = 0\r\n  for (let i in matches) {\r\n    let m = matches[i]\r\n    let insertAt = m['index'] + m[0].length + insertedCount\r\n    finalStr = finalStr.slice(0, insertAt) + '.' + finalStr.slice(insertAt, finalStr.length)\r\n    insertedCount += 1\r\n  }\r\n\r\n  return finalStr\r\n}\r\n\r\n// GLSL 'for' loops can only be indexed up to a constant value\r\n// Passing in the max iteration count through a uniform encounters an error\r\n// Therefore this function constructs a constant value definition\r\nfunction maxIterations(val) {\r\n  return `#define maxIterations ${val}`\r\n}\r\n\r\nfunction cValue({ x, y }) {\r\n  return `vec2 c = vec2(${fixWebGlInts(x)}, ${fixWebGlInts(y)});`\r\n}\r\n\r\nfunction viewport({ width, height, translate }) {\r\n  return `\r\n  float XSIZE = ${fixWebGlInts(width)};\r\n  float YSIZE = ${fixWebGlInts(height)};\r\n  float XT = ${fixWebGlInts(translate.x)};\r\n  float YT = ${fixWebGlInts(translate.y)};\r\n  `\r\n}\r\n\r\nconst uniforms = `\r\nuniform float u_escapeRadius;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\nuniform float u_width;\r\nuniform float u_height;\r\nuniform float u_translatex;\r\nuniform float u_translatey;\r\n\r\nuniform sampler2D u_colormap;\r\n`\r\n\r\nconst headers = `\r\nprecision highp float;\r\n`\r\n\r\n//\r\n// JULIA ITERATION FUNCTIONS\r\n//\r\nconst polyIterate = coefficients => {\r\n  const cmplxExp = (exp, coeff) => {\r\n    // Skip all terms with coefficient of 0\r\n    if (parseFloat(coeff) !== 0) {\r\n      // When exp = 0, we are handling the C value\r\n      if (exp === 0) {\r\n        return `z = complexAdd(z, ${coeff}*c);`\r\n      }\r\n      // Use complexAdd instead of complexPower for exponent 1\r\n      if (exp === 1) {\r\n        return `z = complexAdd(z, ${coeff}*zPrev);`\r\n      }\r\n      return `z = complexAdd(z, complexPower(${coeff}*zPrev, vec2(${exp}, 0.)));`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  // Remove all whitespace, split into list delimitted by commas\r\n  const coeffList = coefficients.replace(/\\s/g, '').split(',')\r\n  let polySource = ''\r\n  for (let i = 0; i < coeffList.length; i++) {\r\n    const exp = coeffList.length - (i + 1)\r\n    const nextTerm = cmplxExp(exp, coeffList[i])\r\n    if (nextTerm !== '') {\r\n      polySource = polySource.concat(nextTerm, '\\n')\r\n    }\r\n  }\r\n  return polySource\r\n}\r\n\r\nconst julia = ctx => `\r\nvec4 julia(vec2 z, vec2 c) {\r\n  float result;\r\n  int iters = 0;\r\n  vec2 zPrev = z;\r\n  z = vec2(0.);\r\n\r\n  for (int i = 0; i <= maxIterations; i++) {\r\n    ${polyIterate(fixWebGlInts(ctx.julia.coefficients))}\r\n    iters = i;\r\n    zPrev = z;\r\n    if (complexMag(z) > u_escapeRadius) break;\r\n  }\r\n\r\n  if (iters == maxIterations) {\r\n    return vec4(0,0,0,1);\r\n  } else {\r\n    ${ctx.julia.useSmoothing ? 'result = smoothIterations(z, iters);' : 'result = float(iters);'}\r\n  }\r\n\r\n  float percent = result/float(maxIterations);\r\n\r\n  return texture2D(u_colormap, vec2(percent));\r\n\r\n  // float hue = huefn(result);\r\n  // float sat = satfn(result);\r\n  // float val = valfn(result);\r\n\r\n  // return hsv2rgb(vec3(hue, sat, val, 1.0));\r\n}\r\n`\r\n\r\n// Smooth coloring function\r\n// http://linas.org/art-gallery/escape/escape.html\r\n// https://en.wikipedia.org/wiki/Mandelbrot_set#Continuous_(smooth)_coloring\r\n// http://www.iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\r\nfunction smoothIterations(julia) {\r\n  const { coefficients, escapeRadius } = julia\r\n  const degree = (coefficients.match(/,/g) || []).length.toString()\r\n\r\n  return `\r\n  float smoothIterations(vec2 z, int iterations) {\r\n    float mag = complexMag(z);\r\n    float logmag = log(mag);\r\n    float logbound = log(${fixWebGlInts(escapeRadius)});\r\n    float top = log(logmag/logbound);\r\n    float f = top/log(${fixWebGlInts(degree)});\r\n\r\n    return float(iterations) - f;\r\n  }\r\n  `\r\n}\r\n\r\n//\r\n// JULIA MAIN FUNCTION\r\n//\r\nconst main = ctx => `\r\nvoid main(void) {\r\n  ${viewport(ctx.viewport)}\r\n\r\n  ${cValue(ctx.julia.c)}\r\n\r\n  // Normalized pixel coordinates (from 0 to 1)\r\n  vec2 uv = gl_FragCoord.xy / u_resolution.xy;\r\n\r\n  vec2 z;\r\n  z.x = (XSIZE * (uv.x - .5)) + XT;\r\n  z.y = (YSIZE * (uv.y - .5)) + YT;\r\n\r\n  vec4 col = julia(z, c);\r\n  gl_FragColor = col;\r\n}\r\n`\r\n\r\nexport const buildFragCode = ctx => `\r\n${headers}\r\n${maxIterations(ctx.julia.maxIterations)}\r\n${uniforms}\r\n${math}\r\n${color}\r\n${smoothIterations(ctx.julia)}\r\n${julia(ctx)}\r\n${main(ctx)}\r\n`\r\n\r\nexport const vertCode = `\r\nattribute vec3 coordinates;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4(coordinates, 1.0);\r\n}\r\n`\r\n","function doInterp(a, b, frac, fn) {\r\n  const res = fn(frac)\r\n  return a * (1 - res) + b * res\r\n}\r\n\r\nconst linear = {\r\n  name: 'Linear',\r\n  value: 'linear',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => frac\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst quadratic = {\r\n  name: 'Quadratic',\r\n  value: 'quadratic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 2)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst squareroot = {\r\n  name: 'Square root',\r\n  value: 'squareroot',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 1 / 2)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cubic = {\r\n  name: 'Cubic',\r\n  value: 'cubic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 3)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cuberoot = {\r\n  name: 'Cube root',\r\n  value: 'cuberoot',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 1 / 3)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cosine = {\r\n  name: 'Cosine',\r\n  value: 'cosine',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => -0.5 * Math.cos(Math.PI * frac) + 0.5\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst logarithmic = {\r\n  name: 'Logarithmic',\r\n  value: 'logarithmic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => (1 / Math.log(2)) * Math.log(frac + 1)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst exponential = {\r\n  name: 'Exponential',\r\n  value: 'exponential',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(2, frac) - 1\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nexport const Interps = { linear, quadratic, cubic, squareroot, cuberoot, cosine, logarithmic, exponential }\r\n","// Conversion functions adapted from https://www.cs.rit.edu/~ncs/color/t_convert.html\r\n\r\nexport const ColorSpaces = [\r\n  {\r\n    name: 'RGB',\r\n    channels: [\r\n      {\r\n        name: 'red',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n      {\r\n        name: 'green',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n      {\r\n        name: 'blue',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: 'HSV',\r\n    channels: [\r\n      {\r\n        name: 'hue',\r\n        min: 0,\r\n        max: 360,\r\n      },\r\n      {\r\n        name: 'saturation',\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n      {\r\n        name: 'value',\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n// Expects array of r,g,b values in range [0, 255]\r\n// Outputs array of h,s,v values: h [0, 360] s,v [0, 1]\r\n// TODO: convert white->white correctly\r\nexport function rgb2hsv(rgbColor) {\r\n  // Normalise colours to 0-1 range\r\n  const [r, g, b] = rgbColor.map(c => c / 255)\r\n  let h, s, v\r\n\r\n  // white\r\n  if (r + g + b === 3) {\r\n    return [-1, 0, 1]\r\n  }\r\n\r\n  // black\r\n  if (r + g + b === 0) {\r\n    return [-1, 0, 0]\r\n  }\r\n\r\n  // r,g,b values are from 0 to 1\r\n  // h = [0,360], s = [0,1], v = [0,1]\r\n  const min = Math.min(r, g, b)\r\n  const max = Math.max(r, g, b)\r\n  const delta = max - min\r\n\r\n  s = max !== 0 ? delta / max : 0\r\n  v = max\r\n\r\n  if (r === max) {\r\n    h = (g - b) / delta\r\n  } else if (g === max) {\r\n    h = 2 + (b - r) / delta\r\n  } else {\r\n    h = 4 + (r - g) / delta\r\n  }\r\n  h = h * 60\r\n  if (h < 0) h += 360\r\n\r\n  return [h, s, v]\r\n}\r\n// Expects array of h,s,v values: h [0, 360] s,v [0, 1]\r\n// Outputs array of rgb values in range [0, 255]\r\nexport function hsv2rgb(hsvColor) {\r\n  let [h, s, v] = hsvColor\r\n  let r, g, b\r\n  let i, f, p, q, t\r\n\r\n  if (s === 0) {\r\n    // achromatic (grey)\r\n    r = g = b = v\r\n    return [r * 255, g * 255, b * 255]\r\n  }\r\n  h /= 60 // sector 0 to 5\r\n  i = Math.floor(h)\r\n  f = h - i // factorial part of h\r\n  p = v * (1 - s)\r\n  q = v * (1 - s * f)\r\n  t = v * (1 - s * (1 - f))\r\n  switch (i) {\r\n    case 0:\r\n      r = v\r\n      g = t\r\n      b = p\r\n      break\r\n    case 1:\r\n      r = q\r\n      g = v\r\n      b = p\r\n      break\r\n    case 2:\r\n      r = p\r\n      g = v\r\n      b = t\r\n      break\r\n    case 3:\r\n      r = p\r\n      g = q\r\n      b = v\r\n      break\r\n    case 4:\r\n      r = t\r\n      g = p\r\n      b = v\r\n      break\r\n    default:\r\n      // case 5:\r\n      r = v\r\n      g = p\r\n      b = q\r\n      break\r\n  }\r\n  return [r * 255, g * 255, b * 255]\r\n}\r\n","import { mapNDArray, findClosestPair } from './helpers'\r\nimport { Interps } from './interp'\r\nimport { hsv2rgb, rgb2hsv } from './colorspace'\r\n\r\nexport const TEX_WIDTH = 2048\r\nexport const TEX_HEIGHT = 1\r\nexport const TEX_CHANNELS = 4\r\n\r\nexport function parseHexColor(colorString) {\r\n  let cString = colorString.trim()\r\n\r\n  if (cString.startsWith('#')) {\r\n    cString = cString.slice(1, cString.length)\r\n  }\r\n\r\n  const hexIdent = '0x'\r\n\r\n  if (parseInt(cString) != null) {\r\n    const colorAsArray = [\r\n      parseInt(hexIdent.concat(cString.slice(0, 2))),\r\n      parseInt(hexIdent.concat(cString.slice(2, 4))),\r\n      parseInt(hexIdent.concat(cString.slice(4, 6))),\r\n    ]\r\n    return colorAsArray\r\n  }\r\n\r\n  return [0, 0, 0]\r\n}\r\n\r\nexport function generateTextureData(colorPoints, curveName, colorModel) {\r\n  const inputColorSpace = 'RGB'\r\n  const interp = Interps[curveName].fn\r\n  const sortedColorPoints = colorPoints.sort((a, b) => parseFloat(a.position) - parseFloat(b.position))\r\n  const sortedPositions = sortedColorPoints.map(a => parseFloat(a.position))\r\n\r\n  // Convert all colorPoints to target color space\r\n  const convertedColorPoints =\r\n    colorModel !== inputColorSpace\r\n      ? sortedColorPoints.map(item => {\r\n          return { ...item, color: rgb2hsv(item.color) }\r\n        })\r\n      : sortedColorPoints\r\n\r\n  // Peform interpolation on each channel in each color\r\n  let texLerp = []\r\n  for (let i = 0; i < TEX_WIDTH; i++) {\r\n    const mapPct = i / TEX_WIDTH\r\n    const closetPairIdxs = findClosestPair(sortedPositions, mapPct)\r\n    const c1 = convertedColorPoints[closetPairIdxs[0]]\r\n    const c1pos = parseFloat(c1.position)\r\n    const c2 = convertedColorPoints[closetPairIdxs[1]]\r\n    const c2pos = parseFloat(c2.position)\r\n    const localMapPct = (mapPct - c1pos) / Math.abs(c1pos - c2pos)\r\n\r\n    // This check accounts for the 'undefined' hue values of black/white\r\n    // We carry the hue of the colour we interpolate from and interp on sat/value\r\n    if (c2.color[0] === -1) {\r\n      c2.color[0] = c1.color[0]\r\n    }\r\n\r\n    const tmp = []\r\n    for (let c = 0; c < c1.color.length; c++) {\r\n      tmp[c] = interp(c1.color[c], c2.color[c], localMapPct)\r\n    }\r\n    texLerp[i] = tmp\r\n  }\r\n\r\n  // Convert back into RGB\r\n  const texRGB = colorModel !== inputColorSpace ? texLerp.map(item => hsv2rgb(item)) : texLerp\r\n  // Append alpha channel\r\n  const withAlpha = texRGB.map(item => [...item, 255])\r\n\r\n  const tex2D = mapNDArray(withAlpha, i => Math.round(i))\r\n\r\n  const TEX_SIZE = TEX_WIDTH * TEX_CHANNELS\r\n  const textureData = new Uint8Array(TEX_SIZE)\r\n  for (let i = 0; i < TEX_SIZE; i++) {\r\n    let loc = Math.floor(i / TEX_CHANNELS)\r\n    let chan = i % TEX_CHANNELS\r\n    textureData[i] = tex2D[loc][chan]\r\n  }\r\n\r\n  return textureData\r\n}\r\n","import { buildFragCode, vertCode } from './webgl/julia'\r\nimport { TEX_WIDTH } from './texture'\r\nimport EscapeRadius from './components/gui/julia/EscapeRadius'\r\n\r\n//\r\n// WebGL initialisation and render loop\r\n// Code adapted from https://observablehq.com/@tomktjemsland/simple-webgl\r\n//\r\n\r\n// Define a square composed of two triangles\r\nconst vertices = [-1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0]\r\n// Index vertices in groups of 3\r\nconst indices = [3, 2, 1, 3, 1, 0]\r\n\r\nfunction bindVertices(gl) {\r\n  // Create an empty buffer object to store vertex buffer\r\n  const vertexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n\r\n  return vertexBuffer\r\n}\r\n\r\nfunction bindIndices(gl) {\r\n  // Create an empty buffer object to store Index buffer\r\n  const indexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\r\n\r\n  return indexBuffer\r\n}\r\n\r\nfunction createProgram(gl, fragCode) {\r\n  // Create a vertex shader object\r\n  const vertShader = gl.createShader(gl.VERTEX_SHADER)\r\n\r\n  // Attach vertex shader source code\r\n  gl.shaderSource(vertShader, vertCode)\r\n\r\n  // Compile the vertex shader\r\n  gl.compileShader(vertShader)\r\n\r\n  // Create fragment shader object\r\n  const fragShader = gl.createShader(gl.FRAGMENT_SHADER)\r\n\r\n  // Attach fragment shader source code\r\n  gl.shaderSource(fragShader, fragCode)\r\n\r\n  // Compile the fragmentt shader\r\n  gl.compileShader(fragShader)\r\n\r\n  // Create a shader program object to\r\n  // store the combined shader program\r\n  const shaderProgram = gl.createProgram()\r\n\r\n  // Attach a vertex shader\r\n  gl.attachShader(shaderProgram, vertShader)\r\n\r\n  // Attach a fragment shader\r\n  gl.attachShader(shaderProgram, fragShader)\r\n\r\n  // Link both the programs\r\n  gl.linkProgram(shaderProgram)\r\n\r\n  // Use the combined shader program object\r\n  gl.useProgram(shaderProgram)\r\n\r\n  if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n    const logOutput = gl.getShaderInfoLog(fragShader)\r\n\r\n    // Extract line of error from log and print that line of the frag shader code\r\n    let idxList = []\r\n    for (let i = 0; i < logOutput.length; i++) {\r\n      if (logOutput[i] === ':') {\r\n        idxList.push(i)\r\n      }\r\n    }\r\n\r\n    // Line number exists between second and third colons\r\n    const lineNumber = logOutput.substring(idxList[1] + 1, idxList[2])\r\n\r\n    console.log(fragCode.split('\\n')[lineNumber - 1])\r\n  }\r\n\r\n  if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(vertShader))\r\n  }\r\n\r\n  return shaderProgram\r\n}\r\n\r\nfunction bindColorMap(gl, textureData) {\r\n  const texture = gl.createTexture()\r\n  gl.bindTexture(gl.TEXTURE_2D, texture)\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, TEX_WIDTH, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, textureData)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n  return texture\r\n}\r\n\r\nfunction setUniforms(shaderProgram, ctx) {\r\n  const { canvasRef, gl, julia, time, viewport } = ctx\r\n  const { escapeRadius, maxIterations } = julia\r\n\r\n  const escapeRadiusUniform = gl.getUniformLocation(shaderProgram, 'u_escapeRadius')\r\n  gl.uniform1f(escapeRadiusUniform, escapeRadius)\r\n\r\n  const maxIterationsUniform = gl.getUniformLocation(shaderProgram, 'u_maxIterations')\r\n  gl.uniform1i(maxIterationsUniform, maxIterations)\r\n\r\n  const resolutionUniform = gl.getUniformLocation(shaderProgram, 'u_resolution')\r\n  gl.uniform2fv(resolutionUniform, [canvasRef.width, canvasRef.height])\r\n\r\n  const startedAtUniform = gl.getUniformLocation(shaderProgram, 'u_time')\r\n  const secondsSinceStart = (getMillisElapsed(time.startedAt, time.pauseDuration) / 1000) * time.timeScale\r\n  gl.uniform1f(startedAtUniform, secondsSinceStart)\r\n\r\n  const widthUniform = gl.getUniformLocation(shaderProgram, 'u_width')\r\n  gl.uniform1f(widthUniform, viewport.width)\r\n\r\n  const heightUniform = gl.getUniformLocation(shaderProgram, 'u_height')\r\n  gl.uniform1f(heightUniform, viewport.height)\r\n\r\n  const xTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatex')\r\n  gl.uniform1f(xTranslateUniform, viewport.translate.x)\r\n\r\n  const yTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatey')\r\n  gl.uniform1f(yTranslateUniform, viewport.translate.y)\r\n\r\n  const colormapUniform = gl.getUniformLocation(shaderProgram, 'u_colormap')\r\n  const texture = bindColorMap(gl, ctx.color.textureData)\r\n  gl.uniform1i(colormapUniform, texture)\r\n}\r\n\r\nfunction getMillisElapsed(startedAt, pauseDuration) {\r\n  return Date.now() - startedAt - pauseDuration\r\n}\r\n\r\nexport function glDrawFrame(ctx) {\r\n  const { canvasRef, gl } = ctx\r\n\r\n  // Only continue if WebGL is available and working\r\n  if (gl === null) {\r\n    alert('Unable to initialize WebGL. Your browser or machine may not support it.')\r\n    return\r\n  }\r\n\r\n  // Construct the final version of the fragment shader code\r\n  const fragCode = buildFragCode(ctx)\r\n\r\n  const vertexBuffer = bindVertices(gl)\r\n  const indexBuffer = bindIndices(gl)\r\n  const shaderProgram = createProgram(gl, fragCode)\r\n  setUniforms(shaderProgram, ctx)\r\n\r\n  /*======= Associating shaders to buffer objects =======*/\r\n  // Bind vertex buffer object\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n\r\n  // Bind index buffer object\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n\r\n  // Get the attribute location\r\n  const coord = gl.getAttribLocation(shaderProgram, 'coordinates')\r\n\r\n  // Point an attribute to the currently bound VBO\r\n  gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0)\r\n\r\n  // Enable the attribute\r\n  gl.enableVertexAttribArray(coord)\r\n\r\n  /*============= Drawing the Quad ================*/\r\n  // Clear the canvas\r\n  gl.clearColor(0, 0, 0, 1)\r\n\r\n  // Enable the depth test\r\n  gl.enable(gl.DEPTH_TEST)\r\n\r\n  // Clear the color buffer bit\r\n  gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n  // Set the view port\r\n  gl.viewport(0, 0, canvasRef.width, canvasRef.height)\r\n\r\n  // Draw the triangles\r\n  gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GUI({ children }) {\r\n  return <ul className='gui-container'>{children}</ul>\r\n}\r\n","import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function Folder({ title, children }) {\r\n  const [closed, setClosed] = useState(false)\r\n\r\n  function toggle(e) {\r\n    if (closed) {\r\n      setClosed(false)\r\n    } else {\r\n      setClosed(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className='folder'>\r\n      <div className='group'>\r\n        <ul className={closed ? 'closed' : ''}>\r\n          <li className='title' onClick={toggle}>\r\n            {title}\r\n          </li>\r\n          {children}\r\n        </ul>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nFolder.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function Coefficients() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.coefficients\r\n\r\n  const label = 'Coefficients'\r\n  const id = lowerTrim(label)\r\n  const tooltip = `Comma-seperated values for the coefficients of each polynomial term. \\n\r\n    N values applied in the order Z<sup>n-1</sup> + Z<sup>n-2</sup> + ... + Z, C`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport function ConstantPointX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.c.x\r\n\r\n  const label = 'Constant X'\r\n  const id = lowerTrim(label)\r\n  const tooltip = `X (real) component of the constant point of the Julia Set function`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function ConstantPointY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.c.y\r\n\r\n  const label = 'Constant Y'\r\n  const id = lowerTrim(label)\r\n  const tooltip = `Y (imaginary) component of the constant point of the Julia Set function`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function MaxIterations() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.maxIterations\r\n\r\n  const label = 'Max Iterations'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Maximum number of times to iterate a point before it is considered to be part of the bounded set'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport InputField from '../base_components/InputField'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function SmoothingToggle() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.useSmoothing\r\n\r\n  const label = 'Julia smoothing'\r\n  const id = lowerTrim(label)\r\n  const tooltip =\r\n    'Toggle Julia escape iteration renormalisation\\n\\nWhen on, produces smooth gradients between the boundry of n and n+1 iterations before escape. May behave unexpectedly for coefficents != 1, 0, 1'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.checked\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField type='checkbox' id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport default function TimeScale() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.time.timeScale\r\n\r\n  const label = 'Time Scale'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Scale the speed at which time passes for functions reliant on u_time'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport function ViewportWidth() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.width\r\n\r\n  const label = 'Viewport width'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Width of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function ViewportHeight() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.height\r\n\r\n  const label = 'Viewport height'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Height of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport function TranslateX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.translate.x\r\n\r\n  const label = 'Translate X'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Horizontal translation of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function TranslateY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.translate.y\r\n\r\n  const label = 'Translate Y'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Vertical translation of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from './../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function LockAspectRatio() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.lockAspectRatio\r\n\r\n  const label = 'Lock aspect ratio'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Lock the aspect ratio of the complex plane to match that of the canvas'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.checked\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField type='checkbox' id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Item from './Item'\r\nimport Label from './Label'\r\n\r\nfunction Option({ item }) {\r\n  return (\r\n    <option key={item} value={item}>\r\n      {item}\r\n    </option>\r\n  )\r\n}\r\n\r\nexport default function OptionSelector({ label, tooltip, id, options, value, onChange }) {\r\n  label = label || null\r\n  tooltip = tooltip || null\r\n\r\n  return (\r\n    <Item>\r\n      {label ? <Label htmlFor={id} text={label} tooltip={tooltip} /> : null}\r\n      <select id={id} name={id} value={value} onChange={onChange}>\r\n        {options.map((item, idx) => (\r\n          <Option key={idx} item={item} />\r\n        ))}\r\n      </select>\r\n    </Item>\r\n  )\r\n}\r\n\r\nOptionSelector.propTypes = {\r\n  label: PropTypes.string,\r\n  tooptip: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\nimport { useContext } from 'react'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { Interps } from '../../../interp'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function ColorCurveSelector() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.color.curve\r\n  const curveName = Interps[value].name\r\n  const options = Object.keys(Interps).map(key => Interps[key].name)\r\n\r\n  const label = 'Mapping curve'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Curve used to shape the colour mapping'\r\n\r\n  function onChange(e) {\r\n    const selectedValue = e.target.value\r\n    const interpKey = Object.keys(Interps).find(key => Interps[key].name === selectedValue)\r\n    setValue(interpKey)\r\n  }\r\n\r\n  return (\r\n    <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={curveName} onChange={onChange} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\nimport { useContext } from 'react'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { ColorSpaces } from '../../../colorspace'\r\nimport { lowerTrim } from './../../../helpers';\r\n\r\nexport default function ColorModelSelector() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.color.colorModel\r\n  const options = ColorSpaces.map(obj => obj.name)\r\n\r\n  const label = 'Colour model'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Colour model used for interpolation between each colour specified in the colour map'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ColorPointControls() {\r\n  return <div></div>\r\n}\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\nimport InputField from './../base_components/InputField'\r\nimport Folder from '../base_components/Folder'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nfunction ColorPicker({ item, idx, handleChange }) {\r\n  const value = item.hex\r\n  const label = 'Colour'\r\n  const name = 'color'\r\n  const id = `${lowerTrim(label)}${idx}`\r\n\r\n  function onChange(e) {\r\n    handleChange(e, idx)\r\n  }\r\n\r\n  return <InputField type='color' label={label} name={name} id={id} value={value} onChange={onChange} />\r\n}\r\n\r\nfunction ColorPosition({ item, idx, handleChange }) {\r\n  const value = item.position\r\n  const label = 'Position'\r\n  const name = 'position'\r\n  const id = `${lowerTrim(label)}${idx}`\r\n  const tooltip = \"Value in range [0, 1] representing the colour's position on the colour mapping\"\r\n\r\n  function onChange(e) {\r\n    handleChange(e, idx)\r\n  }\r\n\r\n  return (\r\n    <InputField type='text' label={label} name={name} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n  )\r\n}\r\n\r\nexport default function ColorPointItem({ item, idx, handleChange }) {\r\n  return (\r\n    <Folder title={`Colour ${idx + 1}`}>\r\n      <ColorPicker item={item} idx={idx} handleChange={handleChange} />\r\n      <ColorPosition item={item} idx={idx} handleChange={handleChange} />\r\n    </Folder>\r\n  )\r\n}\r\n\r\nconst propTypes = {\r\n  item: PropTypes.shape({\r\n    hex: PropTypes.string,\r\n    position: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  }),\r\n  idx: PropTypes.number,\r\n  handleChange: PropTypes.func.isRequired,\r\n}\r\n\r\nColorPicker.propTypes = propTypes\r\nColorPosition.propTypes = propTypes\r\nColorPointItem.propTypes = propTypes\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport Folder from '../base_components/Folder'\r\nimport ColorPointControls from './ColorPointControls'\r\nimport ColorPointItem from './ColorPointItem'\r\n\r\nexport default function ColorMapFolder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [colorPoints, setColorPoints] = ctx.color.colorPoints\r\n\r\n  // Processes updates to child colour and position elements\r\n  function handleColorPointChanges(e, idx) {\r\n    const newValue = e.target.value\r\n    const objAtIdx = colorPoints[idx]\r\n\r\n    const nextObj = (() => {\r\n      switch (e.target.name) {\r\n        case 'color':\r\n          return { ...objAtIdx, hex: newValue }\r\n        case 'position':\r\n          return { ...objAtIdx, position: newValue }\r\n        default:\r\n          return objAtIdx\r\n      }\r\n    }).call()\r\n\r\n    // When updating an array stored in state, a new array must be created for a change to be detected\r\n    // Otherwise, effects dependant on the state will not trigger on update\r\n    // See: https://stackoverflow.com/questions/54620928/useeffect-hook-not-firing-after-state-change/54621059#54621059\r\n    const nextColorPoints = [...colorPoints]\r\n    nextColorPoints[idx] = nextObj\r\n    setColorPoints(nextColorPoints)\r\n  }\r\n\r\n  return (\r\n    <Folder title='Colour Points'>\r\n      <ColorPointControls />\r\n      {colorPoints.map((item, idx) => (\r\n        <ColorPointItem item={item} key={idx} idx={idx} handleChange={handleColorPointChanges} />\r\n      ))}\r\n    </Folder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport GUI from './gui/GUI'\r\nimport Folder from './gui/base_components/Folder'\r\nimport Coefficients from './gui/julia/Coefficients'\r\nimport { ConstantPointY, ConstantPointX } from './gui/julia/ConstantPoint'\r\nimport MaxIterations from './gui/julia/MaxIterations'\r\nimport EscapeRadius from './gui/julia/EscapeRadius'\r\nimport SmoothingToggle from './gui/julia/SmoothingToggle'\r\nimport TimeScale from './gui/julia/TimeScale'\r\nimport { ViewportWidth, ViewportHeight } from './gui/viewport/Dimensions'\r\nimport { TranslateX, TranslateY } from './gui/viewport/Translate'\r\nimport LockAspectRatio from './gui/viewport/LockAspectRatio'\r\nimport ColorCurveSelector from './gui/colourmapping/ColorCurveSelector'\r\nimport ColorModelSelector from './gui/colourmapping/ColorModelSelector'\r\nimport ColorMapFolder from './gui/colourmapping/ColorMapFolder'\r\n\r\nexport default function MyGUI() {\r\n  return (\r\n    <GUI>\r\n      <Folder title='Julia Variables'>\r\n        <Coefficients />\r\n        <Folder title='Constant Point'>\r\n          <ConstantPointX />\r\n          <ConstantPointY />\r\n        </Folder>\r\n        <MaxIterations />\r\n        <EscapeRadius />\r\n        <SmoothingToggle />\r\n        <TimeScale />\r\n      </Folder>\r\n      <Folder title='Viewport'>\r\n        <Folder title='Dimensions'>\r\n          <ViewportWidth />\r\n          <ViewportHeight />\r\n        </Folder>\r\n        <Folder title='Translate'>\r\n          <TranslateX />\r\n          <TranslateY />\r\n        </Folder>\r\n        <LockAspectRatio />\r\n      </Folder>\r\n      <Folder title='Colour Mapping'>\r\n        <ColorMapFolder />\r\n        <ColorCurveSelector />\r\n        <ColorModelSelector />\r\n      </Folder>\r\n      <Folder title='Presets'></Folder>\r\n    </GUI>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useContext, useState } from 'react'\r\nimport { glDrawFrame } from '../webgl'\r\nimport { ShaderContext, contextToValueObject } from './ModelProvider'\r\nimport MyGUI from './MyGUI'\r\nimport { parseHexColor } from '../texture'\r\nimport { generateTextureData } from './../texture'\r\n\r\nfunction scaleViewportByAspectRatio({ width, height }) {\r\n  function getOrientation() {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    return canvasWidth > canvasHeight ? 'landscape' : 'portrait'\r\n  }\r\n\r\n  function getAspectRatio(orientation) {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    // return early if 0 to avoid div by 0 errors\r\n    if (canvasHeight === 0 || canvasWidth === 0) return 1\r\n    if (orientation === 'landscape') {\r\n      return canvasWidth / canvasHeight\r\n    } else if (orientation === 'portrait') {\r\n      return canvasHeight / canvasWidth\r\n    }\r\n    // Fallback if orientation does not match one of two expected values\r\n    return 1\r\n  }\r\n\r\n  const canvasOrientation = getOrientation()\r\n  const aspectRatio = getAspectRatio(canvasOrientation)\r\n  // For landscape, width should not change\r\n  // For portrait, height should not change\r\n  if (canvasOrientation === 'landscape') {\r\n    height *= 1 / aspectRatio\r\n  } else if (canvasOrientation === 'portrait') {\r\n    width *= 1 / aspectRatio\r\n  }\r\n  return { width, height }\r\n}\r\n\r\nfunction useGlCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const canvasRef = useRef()\r\n  const setRef = ctx.canvasRef[1]\r\n  const setGl = ctx.gl[1]\r\n\r\n  useEffect(() => {\r\n    setRef(canvasRef.current)\r\n    setGl(canvasRef.current.getContext('webgl'))\r\n  }, [setRef, setGl, canvasRef])\r\n\r\n  return canvasRef\r\n}\r\n\r\nfunction useJuliaAnimation() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const animateRef = useRef()\r\n  const [frameCount, setFrameCount] = useState(0)\r\n  const [lastFrameTime, setLastFrameTime] = useState(0)\r\n  const paused = ctx.time.paused[0]\r\n  const gl = ctx.gl[0]\r\n\r\n  useEffect(() => {\r\n    // Define function to be run on every frame render\r\n    const animate = () => {\r\n      if (paused === false && gl !== null) {\r\n        setLastFrameTime(Date.now())\r\n        const glObj = contextToValueObject(ctx)\r\n        glDrawFrame(glObj)\r\n        setFrameCount(frameCount => frameCount + 1)\r\n      }\r\n      // The frame request runs itself recursively\r\n      animateRef.current = requestAnimationFrame(animate)\r\n    }\r\n\r\n    // Start frame requests\r\n    animateRef.current = requestAnimationFrame(animate)\r\n\r\n    // Return cleanup as callback\r\n    return () => cancelAnimationFrame(animateRef.current)\r\n  }, [ctx, paused, gl])\r\n\r\n  return [frameCount, lastFrameTime]\r\n}\r\n\r\nfunction useAspectRatioScaling() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  useEffect(() => {\r\n    const vp = scaleViewportByAspectRatio({ width, height })\r\n    setWidth(vp.width)\r\n    setHeight(vp.height)\r\n    // Effect can't fire when width/height changes, results in loop\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n}\r\n\r\nfunction useTextureBuilder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [colorPoints] = ctx.color.colorPoints\r\n  const [curve] = ctx.color.curve\r\n  const [colorModel] = ctx.color.colorModel\r\n  const [, setTextureData] = ctx.color.textureData\r\n\r\n  useEffect(() => {\r\n    const cp = colorPoints.map(o => {\r\n      return {\r\n        color: parseHexColor(o.hex),\r\n        position: o.position,\r\n      }\r\n    })\r\n    const newTextureData = generateTextureData(cp, curve, colorModel)\r\n    setTextureData(newTextureData)\r\n  }, [colorPoints, curve, colorModel, setTextureData])\r\n}\r\n\r\nexport default function ShaderCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [lockAspectRatio] = ctx.viewport.lockAspectRatio\r\n  const [dragStart, setDragStart] = useState()\r\n\r\n  // Initialise canvas and webgl\r\n  const canvasRef = useGlCanvas()\r\n\r\n  // Build colour mapping texture\r\n  useTextureBuilder()\r\n\r\n  // Start rendering\r\n  const [frameCount, lastFrameTime] = useJuliaAnimation()\r\n\r\n  // Scale initial viewport size to respect aspect ratio\r\n  useAspectRatioScaling()\r\n\r\n  function startDrag(e) {\r\n    const loc = [e.clientX, e.clientY]\r\n    setDragStart(loc)\r\n  }\r\n\r\n  function endDrag(e) {\r\n    // Translate position values from the canvas to xy-coordinates on the grid\r\n    function canvasToGrid({ x, y }) {\r\n      const canvas = document.getElementsByClassName('glcanvas')[0]\r\n      const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n      const gridWidth = parseFloat(ctx.viewport.width[0])\r\n      const gridHeight = parseFloat(ctx.viewport.height[0])\r\n\r\n      const widthScale = gridWidth / canvasWidth\r\n      const heightScale = gridHeight / canvasHeight\r\n\r\n      const translateX = parseFloat(ctx.viewport.translate.x[0])\r\n      const translateY = parseFloat(ctx.viewport.translate.y[0])\r\n\r\n      const res = {\r\n        x: -gridWidth / 2 + x * widthScale + translateX,\r\n        y: -gridHeight / 2 + y * heightScale + translateY,\r\n      }\r\n\r\n      return res\r\n    }\r\n\r\n    function dragHasNoArea({ x1, x2, y1, y2 }) {\r\n      const width = Math.abs(x1 - x2)\r\n      const height = Math.abs(y1 - y2)\r\n\r\n      return width < 1 || height < 1\r\n    }\r\n\r\n    const setTranslateX = ctx.viewport.translate.x[1]\r\n    const setTranslateY = ctx.viewport.translate.y[1]\r\n    const setViewportWidth = ctx.viewport.width[1]\r\n    const setViewportHeight = ctx.viewport.height[1]\r\n\r\n    const dragEnd = [e.clientX, e.clientY]\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n    // y values subtracted from canvas height to get correct locations\r\n    // canvas dimensions are measured from top left, need to start from bottom left\r\n    // as that's what our grid starts from\r\n    const dragBox = {\r\n      x1: dragStart[0],\r\n      x2: dragEnd[0],\r\n      y1: canvas.offsetHeight - dragStart[1],\r\n      y2: canvas.offsetHeight - dragEnd[1],\r\n    }\r\n\r\n    if (dragHasNoArea(dragBox)) {\r\n      return\r\n    }\r\n\r\n    const dragCenterCanvas = { x: (dragBox.x1 + dragBox.x2) / 2, y: (dragBox.y1 + dragBox.y2) / 2 }\r\n    const dragCenterGrid = canvasToGrid(dragCenterCanvas)\r\n\r\n    setTranslateX(dragCenterGrid.x)\r\n    setTranslateY(dragCenterGrid.y)\r\n\r\n    // Scale current viewport size by ratio of drag box\r\n    const viewportWidth = parseFloat(ctx.viewport.width)\r\n    const viewportHeight = parseFloat(ctx.viewport.height)\r\n\r\n    const dragDimensions = { width: Math.abs(dragBox.x1 - dragBox.x2), height: Math.abs(dragBox.y1 - dragBox.y2) }\r\n    const dragViewport = {\r\n      width: viewportWidth * (dragDimensions.width / canvasWidth),\r\n      height: viewportHeight * (dragDimensions.height / canvasHeight),\r\n    }\r\n\r\n    if (lockAspectRatio === true) {\r\n      const newViewport = scaleViewportByAspectRatio(dragViewport)\r\n      setViewportWidth(newViewport.width)\r\n      setViewportHeight(newViewport.height)\r\n    } else {\r\n      setViewportWidth(dragViewport.width)\r\n      setViewportHeight(dragViewport.height)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        className='glcanvas'\r\n        width='1000'\r\n        height='1000'\r\n        onMouseDown={startDrag}\r\n        onMouseUp={endDrag}\r\n        ref={canvasRef}\r\n      />\r\n      <MyGUI />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport './components/gui/gui.scss'\r\nimport ModelProvider from './components/ModelProvider'\r\nimport ShaderCanvas from './components/ShaderCanvas'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <ModelProvider>\r\n        <ShaderCanvas />\r\n      </ModelProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}