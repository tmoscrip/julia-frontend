{"version":3,"sources":["components/ModelProvider.js","webgl/math.js","webgl/color.js","webgl/julia.js","webgl.js","components/DebugFrame.js","components/ControlPanel/HelpTooltip.js","components/ControlPanel/InputTypes.js","components/Icons.js","components/ControlPanel/CollapsibleGroup.js","components/ControlPanel/Viewport.js","components/ControlPanel/CollapsiblePanel.js","components/ControlPanel/PauseButton.js","components/ControlPanel/PresetSaver.js","components/ControlPanel/Julia.js","components/ControlPanel/ControlPanel.js","components/ShaderCanvas.js","App.js","serviceWorker.js","index.js"],"names":["ShaderContext","React","createContext","ShaderProvider","Provider","isUseState","Consumer","item","Array","isArray","length","name","startsWith","hasSetState","contextToValueObject","obj","valuesObj","loadObjectIntoContext","ctx","setState","ModelProvider","children","initModelState","canvasRef","useState","gl","julia","c","x","y","coefficients","escapeRadius","maxIterations","useSmoothing","viewport","width","height","translate","lockAspectRatio","time","startedAt","Date","now","paused","lastPausedAt","pauseDuration","timeScale","value","math","color","fixWebGlInts","str","match","finalStr","anyNumberRegex","RegExp","matches","exec","push","filter","m","includes","insertedCount","i","insertAt","slice","cmplxExp","exp","coeff","parseFloat","coeffList","replace","split","polySource","nextTerm","concat","console","log","polyIterate","main","cValue","buildFragCode","val","vertCode","vertices","indices","setUniforms","shaderProgram","escapeRadiusUniform","getUniformLocation","uniform1f","maxIterationsUniform","uniform1i","resolutionUniform","uniform2fv","startedAtUniform","secondsSinceStart","widthUniform","heightUniform","xTranslateUniform","yTranslateUniform","glDrawFrame","fragCode","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","bindVertices","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","bindIndices","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getShaderParameter","COMPILE_STATUS","logOutput","getShaderInfoLog","idxList","lineNumber","substring","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","alert","DebugFrame","frameCount","frameTime","className","HelpTooltip","hoverText","CheckboxField","label","helpText","inputValue","setInputValue","type","checked","onChange","LabelledField","event","target","DoubleArrow","onClick","xmlns","enable-background","viewBox","fill","points","GroupToggleButton","open","setOpen","facing","CollapsibleGroup","title","contentClasses","containerClasses","Width","useContext","setWidth","Height","setHeight","TranslateX","translateX","setTranslateX","TranslateY","translateY","setTranslateY","AspectRatioLock","setValue","Viewport","PanelToggleButton","CollapsiblePanel","styleClass","PauseButton","setPaused","setLastPausedAt","setPauseDuration","getPresetArray","presetArray","localStorage","getItem","JSON","parse","PresetSaver","selectedPreset","setSelectedPreset","presetName","setPresetName","presetsList","setPresetsList","updatePresetsList","presets","useEffect","e","map","key","presetObject","makePresetObject","array","preset","namedPresetExists","setItem","stringify","addPresetToArray","CValueX","CValueY","PolyCoefficients","HumanReadableFormula","termList","ctxCoefficients","getTermList","PolynomialTerm","term","isFirst","coeffSign","renderTerm","abs","Math","t","MaxIterations","EscapeRadius","SmoothingToggle","TimeScale","JuliaVariables","ControlPanel","Spacer","size","style","marginBottom","scaleViewportByAspectRatio","canvasOrientation","canvas","document","getElementsByClassName","offsetWidth","offsetHeight","getOrientation","aspectRatio","orientation","canvasWidth","canvasHeight","getAspectRatio","ShaderCanvas","dragStart","setDragStart","useRef","setRef","setGl","current","getContext","useGlCanvas","animateRef","setFrameCount","lastFrameTime","setLastFrameTime","requestAnimationFrame","animate","cancelAnimationFrame","useJuliaAnimation","vp","useAspectRatioScaling","onMouseDown","loc","clientX","clientY","onMouseUp","setViewportWidth","setViewportHeight","dragEnd","dragBox","x1","x2","y1","y2","dragHasNoArea","dragCenterGrid","gridWidth","gridHeight","heightScale","canvasToGrid","viewportWidth","viewportHeight","dragViewport","newViewport","ref","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.542a7d25.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const ShaderContext = React.createContext()\r\nexport const ShaderProvider = ShaderContext.Provider\r\nexport const ShaderConsumer = ShaderContext.Consumer\r\n\r\n/*\r\n  Take object from context and extract the values for each setState array\r\n  Recurse down if possilble and maintain k:v structure\r\n*/\r\n\r\n// Check to see if array has useState set function within\r\nconst hasSetState = item => {\r\n  return typeof item[1] === 'function' && item[1].name.startsWith('bound ')\r\n}\r\n\r\n// Is the item a useState array?\r\n// Perform checks on requirements for hasSetState beforehand\r\nconst isUseState = item => {\r\n  return Array.isArray(item) && item.length === 2 && hasSetState(item)\r\n}\r\n\r\n// Keeps object structure, but converts [state, setState]\r\n// Arrays to just the state value\r\nexport function contextToValueObject(obj) {\r\n  const valuesObj = {}\r\n  for (let item in obj) {\r\n    if (isUseState(obj[item])) {\r\n      valuesObj[item] = obj[item][0]\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      valuesObj[item] = contextToValueObject(obj[item])\r\n    }\r\n  }\r\n\r\n  return valuesObj\r\n}\r\n\r\n// Inverse of contextToValueObject\r\n// Takes an object and attempts to move values from\r\n// it into context's state through setState\r\nexport function loadObjectIntoContext(obj, ctx) {\r\n  for (const item in obj) {\r\n    if (isUseState(ctx[item])) {\r\n      // Call setState in ctx for each key in obj\r\n      const setState = ctx[item][1]\r\n      setState(obj[item])\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      loadObjectIntoContext(obj[item], ctx[item])\r\n    }\r\n  }\r\n}\r\n\r\nfunction ModelProvider({ children }) {\r\n  const initModelState = {\r\n    canvasRef: useState(null), // Canvas element used for rendering the fractal\r\n    gl: useState(null), // WebGL context of the canvas\r\n    julia: {\r\n      c: {\r\n        x: useState('0.2'),\r\n        y: useState('sin(u_time)'),\r\n      },\r\n      coefficients: useState('1, 0, 1'),\r\n      escapeRadius: useState('100'),\r\n      maxIterations: useState('100'),\r\n      useSmoothing: useState(true),\r\n    },\r\n    viewport: {\r\n      width: useState('5'),\r\n      height: useState('5'),\r\n      translate: {\r\n        x: useState('0'),\r\n        y: useState('0'),\r\n      },\r\n      lockAspectRatio: useState(true),\r\n    },\r\n    time: {\r\n      startedAt: useState(Date.now()),\r\n      paused: useState(false),\r\n      lastPausedAt: useState(0),\r\n      pauseDuration: useState(0),\r\n      timeScale: useState('0.5'),\r\n    },\r\n  }\r\n\r\n  return <ShaderProvider value={initModelState}>{children}</ShaderProvider>\r\n}\r\n\r\nModelProvider.propTypes = {}\r\n\r\nexport default ModelProvider\r\n","//\r\n// MATHEMATICAL CONSTANTS\r\n//\r\nconst mathConstants = `\r\n#define PI 3.14159265359\r\n#define TAU 6.28318530718\r\n`\r\n\r\n//\r\n// COMPLEX NUMBER OPERATIONS\r\n// Source: https://gist.github.com/NiklasRosenstein/ee1f1b5786f94e17995361c63dafeb3f\r\n//\r\nconst complexConjug = `\r\nvec2 complexConjug(in vec2 c) { \r\n  return vec2(c.x, -c.y); \r\n}\r\n`\r\n\r\nconst complexMult = `\r\nvec2 complexMult(in vec2 a, in vec2 b) {\r\n  return vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\r\n}\r\n`\r\n\r\nconst complexDiv = `\r\nvec2 complexDiv(in vec2 a, in vec2 b) {\r\n  return complexMult(a, complexConjug(b));\r\n}\r\n`\r\n\r\nconst complexMag = `\r\nfloat complexMag(in vec2 c) { \r\n  return sqrt(c.x * c.x + c.y * c.y); \r\n}\r\n`\r\n\r\nconst complexAdd = `\r\nvec2 complexAdd(vec2 z1, vec2 z2) { \r\n  return vec2(z1.x + z2.x, z1.y + z2.y); \r\n}\r\n`\r\n\r\n// See http://mathworld.wolfram.com/ComplexExponentiation.html\r\n// Raises a complex number to the power of a second complex number\r\n// Use vec2(x, 0) as second parameter to raise by only a real\r\nconst complexPower = `\r\nvec2 complexPower(vec2 z1, vec2 z2) {\r\n  float a2b2 = z1.x * z1.x + z1.y * z1.y;\r\n  float t1 = pow(a2b2, z2.x / 2.) * exp(-z2.y * atan(z1.y, z1.x));\r\n  float t2 = z2.x * atan(z1.y, z1.x) + .5 * z2.y * log(a2b2);\r\n  return vec2(t1 * cos(t2), t1 * sin(t2));\r\n}\r\n`\r\n\r\nexport const math = `\r\n${mathConstants}\r\n${complexConjug}\r\n${complexMult}\r\n${complexDiv}\r\n${complexMag}\r\n${complexPower}\r\n${complexAdd}\r\n`","//\r\n// color SPACE FUNCTIONS\r\n//\r\nconst hsv2rgb = `\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\r\n}\r\n`\r\n\r\nfunction parseHexColour(colourString, colourSpace) {\r\n  const cSpace = colourSpace.lower()\r\n  // Return solid green if colourspace cannot be understood\r\n  if (!(cSpace in ['rgb', 'hsv', 'hsl'])) {\r\n    return 'vec3(0, 1, 0)'\r\n  }\r\n\r\n  let cString = colourString\r\n  cString = cString.trim()\r\n\r\n  if (cString.startsWith('#')) {\r\n    cString = cString.slice(1, cString.length)\r\n  }\r\n}\r\n\r\n//\r\n// JULIA ITERATIONS HSV COLORING FUNCTIONS\r\n//\r\nconst huefn = `\r\nfloat huefn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .1 + .3*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst satfn = `\r\nfloat satfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + .5*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst valfn = `\r\nfloat valfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + 2.*(iterations / max_iter);\r\n}\r\n`\r\n\r\nexport const color = `\r\n${hsv2rgb}\r\n${huefn}\r\n${satfn}\r\n${valfn}\r\n`\r\n","import { math } from './math'\r\nimport { color } from './color'\r\n\r\n/*\r\n  Ints are not implictly cast to floats in WebGL, any value which is passed to\r\n  WebGL code for use as a float must contain a decimal point\r\n\r\n  This function appends a period to any int to avoid type errors once it's passed\r\n  into WebGL code\r\n*/\r\nfunction fixWebGlInts(str) {\r\n  let finalStr = str\r\n  // Capture: 1. floats, 2. floats (int w/ trailing period), 3. ints\r\n  const anyNumberRegex = new RegExp(/\\d+[.]\\d+|(\\d+[.])+|(\\d+)/g)\r\n\r\n  // Find all matches\r\n  let match\r\n  let matches = []\r\n  while ((match = anyNumberRegex.exec(str)) !== null) {\r\n    matches.push(match)\r\n  }\r\n\r\n  // Filter out floats\r\n  matches = matches.filter(m => !m[0].includes('.'))\r\n\r\n  // How many extra characters have been inserted\r\n  let insertedCount = 0\r\n  for (let i in matches) {\r\n    let m = matches[i]\r\n    let insertAt = m['index'] + m[0].length + insertedCount\r\n    finalStr = finalStr.slice(0, insertAt) + '.' + finalStr.slice(insertAt, finalStr.length)\r\n    insertedCount += 1\r\n  }\r\n\r\n  return finalStr\r\n}\r\n\r\n// GLSL 'for' loops can only be indexed up to a constant value\r\n// Passing in the max iteration count through a uniform encounters an error\r\n// Therefore this function constructs a constant value definition\r\nfunction maxIterations(val) {\r\n  return `#define maxIterations ${val}`\r\n}\r\n\r\nfunction cValue({ x, y }) {\r\n  return `vec2 c = vec2(${fixWebGlInts(x)}, ${fixWebGlInts(y)});`\r\n}\r\n\r\nfunction viewport({ width, height, translate }) {\r\n  return `\r\n  float XSIZE = ${fixWebGlInts(width)};\r\n  float YSIZE = ${fixWebGlInts(height)};\r\n  float XT = ${fixWebGlInts(translate.x)};\r\n  float YT = ${fixWebGlInts(translate.y)};\r\n  `\r\n}\r\n\r\nconst uniforms = `\r\nuniform float u_escapeRadius;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\nuniform float u_width;\r\nuniform float u_height;\r\nuniform float u_translatex;\r\nuniform float u_translatey;\r\n`\r\n\r\nconst headers = `\r\nprecision highp float;\r\n`\r\n\r\n//\r\n// JULIA ITERATION FUNCTIONS\r\n//\r\nconst polyIterate = coefficients => {\r\n  const cmplxExp = (exp, coeff) => {\r\n    // Skip all terms with coefficient of 0\r\n    if (parseFloat(coeff) !== 0) {\r\n      // When exp = 0, we are handling the C value\r\n      if (exp === 0) {\r\n        return `z = complexAdd(z, ${coeff}*c);`\r\n      }\r\n      // Use complexAdd instead of complexPower for exponent 1\r\n      if (exp === 1) {\r\n        return `z = complexAdd(z, ${coeff}*zPrev);`\r\n      }\r\n      return `z = complexAdd(z, complexPower(${coeff}*zPrev, vec2(${exp}, 0.)));`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  // Remove all whitespace, split into list delimitted by commas\r\n  const coeffList = coefficients.replace(/\\s/g, '').split(',')\r\n  let polySource = ''\r\n  for (let i = 0; i < coeffList.length; i++) {\r\n    const exp = coeffList.length - (i + 1)\r\n    const nextTerm = cmplxExp(exp, coeffList[i])\r\n    if (nextTerm !== '') {\r\n      polySource = polySource.concat(nextTerm, '\\n')\r\n    }\r\n  }\r\n\r\n  console.log(polySource)\r\n  return polySource\r\n}\r\n\r\nconst julia = ctx => `\r\nvec3 julia(vec2 z, vec2 c) {\r\n  float result;\r\n  int iters = 0;\r\n  vec2 zPrev = z;\r\n  z = vec2(0.);\r\n\r\n  for (int i = 0; i <= maxIterations; i++) {\r\n    ${polyIterate(fixWebGlInts(ctx.julia.coefficients))}\r\n    iters = i;\r\n    zPrev = z;\r\n    if (complexMag(z) > u_escapeRadius) break;\r\n  }\r\n\r\n  if (iters == maxIterations) {\r\n    return vec3(0, 0, 0);\r\n  } else {\r\n    ${ctx.julia.useSmoothing ? 'result = smoothIterations(z, iters);' : 'result = float(iters);'}\r\n  }\r\n\r\n  float percent = result/float(maxIterations);\r\n\r\n  float hue = huefn(result);\r\n  float sat = satfn(result);\r\n  float val = valfn(result);\r\n\r\n  return hsv2rgb(vec3(hue, sat, val));\r\n}\r\n`\r\n\r\n// Smooth coloring function\r\n// http://linas.org/art-gallery/escape/escape.html\r\n// https://en.wikipedia.org/wiki/Mandelbrot_set#Continuous_(smooth)_coloring\r\nconst smoothIterations = `\r\nfloat smoothIterations(vec2 z, int iterations) {\r\n  // sqrt of inner term removed using log simplification rules.\r\n  // sqrt is equivilent to raising to power 0.5 therefore dividing\r\n  // by 2 or multiplying by 0.5 avoids an inefficient sqrt calculation\r\n  float log_zn = log(z.x * z.x + z.y * z.y) / 2.;\r\n  float nu = log(log_zn / log(2.)) / log(2.);\r\n  // Rearranging the potential function.\r\n  // Dividing log_zn by log(2) instead of log(N = 1<<8)\r\n  // because we want the entire palette to range from the\r\n  // center to radius 2, NOT our bailout radius.\r\n  return float(iterations) + 1. - nu;\r\n}\r\n`\r\n\r\n//\r\n// JULIA MAIN FUNCTION\r\n//\r\nconst main = ctx => `\r\nvoid main(void) {\r\n  ${viewport(ctx.viewport)}\r\n\r\n  ${cValue(ctx.julia.c)}\r\n\r\n  // Normalized pixel coordinates (from 0 to 1)\r\n  vec2 uv = gl_FragCoord.xy / u_resolution.xy;\r\n\r\n  vec2 z;\r\n  z.x = (XSIZE * (uv.x - .5)) + XT;\r\n  z.y = (YSIZE * (uv.y - .5)) + YT;\r\n\r\n  vec3 col = julia(z, c);\r\n  gl_FragColor = vec4(col, 1.);\r\n}\r\n`\r\n\r\nexport const buildFragCode = ctx => `\r\n${headers}\r\n${maxIterations(ctx.julia.maxIterations)}\r\n${uniforms}\r\n${math}\r\n${color}\r\n${smoothIterations}\r\n${julia(ctx)}\r\n${main(ctx)}\r\n`\r\n\r\nexport const vertCode = `\r\nattribute vec3 coordinates;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4(coordinates, 1.0);\r\n}\r\n`\r\n","import { buildFragCode, vertCode } from './webgl/julia'\r\n\r\n//\r\n// WebGL initialisation and render loop\r\n// Code adapted from https://observablehq.com/@tomktjemsland/simple-webgl\r\n//\r\n\r\n// Define a square composed of two triangles\r\nconst vertices = [-1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0]\r\n// Index vertices in groups of 3\r\nconst indices = [3, 2, 1, 3, 1, 0]\r\n\r\nfunction bindVertices(gl) {\r\n  // Create an empty buffer object to store vertex buffer\r\n  const vertexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n\r\n  return vertexBuffer\r\n}\r\n\r\nfunction bindIndices(gl) {\r\n  // Create an empty buffer object to store Index buffer\r\n  const indexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\r\n\r\n  return indexBuffer\r\n}\r\n\r\nfunction createProgram(gl, fragCode) {\r\n  // Create a vertex shader object\r\n  const vertShader = gl.createShader(gl.VERTEX_SHADER)\r\n\r\n  // Attach vertex shader source code\r\n  gl.shaderSource(vertShader, vertCode)\r\n\r\n  // Compile the vertex shader\r\n  gl.compileShader(vertShader)\r\n\r\n  // Create fragment shader object\r\n  const fragShader = gl.createShader(gl.FRAGMENT_SHADER)\r\n\r\n  // Attach fragment shader source code\r\n  gl.shaderSource(fragShader, fragCode)\r\n\r\n  // Compile the fragmentt shader\r\n  gl.compileShader(fragShader)\r\n\r\n  // Create a shader program object to\r\n  // store the combined shader program\r\n  const shaderProgram = gl.createProgram()\r\n\r\n  // Attach a vertex shader\r\n  gl.attachShader(shaderProgram, vertShader)\r\n\r\n  // Attach a fragment shader\r\n  gl.attachShader(shaderProgram, fragShader)\r\n\r\n  // Link both the programs\r\n  gl.linkProgram(shaderProgram)\r\n\r\n  // Use the combined shader program object\r\n  gl.useProgram(shaderProgram)\r\n\r\n  if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n    const logOutput = gl.getShaderInfoLog(fragShader)\r\n\r\n    // Extract line of error from log and print that line of the frag shader code\r\n    let idxList = []\r\n    for (let i = 0; i < logOutput.length; i++) {\r\n      if (logOutput[i] === ':') {\r\n        idxList.push(i)\r\n      }\r\n    }\r\n\r\n    // Line number exists between second and third colons\r\n    const lineNumber = logOutput.substring(idxList[1] + 1, idxList[2])\r\n\r\n    console.log(fragCode.split('\\n')[lineNumber - 1])\r\n  }\r\n\r\n  if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(vertShader))\r\n  }\r\n\r\n  return shaderProgram\r\n}\r\n\r\nfunction setUniforms(shaderProgram, ctx) {\r\n  const { canvasRef, gl, julia, time, viewport } = ctx\r\n  const { escapeRadius, maxIterations } = julia\r\n\r\n  const escapeRadiusUniform = gl.getUniformLocation(shaderProgram, 'u_escapeRadius')\r\n  gl.uniform1f(escapeRadiusUniform, escapeRadius)\r\n\r\n  const maxIterationsUniform = gl.getUniformLocation(shaderProgram, 'u_maxIterations')\r\n  gl.uniform1i(maxIterationsUniform, maxIterations)\r\n\r\n  const resolutionUniform = gl.getUniformLocation(shaderProgram, 'u_resolution')\r\n  gl.uniform2fv(resolutionUniform, [canvasRef.width, canvasRef.height])\r\n\r\n  const startedAtUniform = gl.getUniformLocation(shaderProgram, 'u_time')\r\n  const secondsSinceStart = (getMillisElapsed(time.startedAt, time.pauseDuration) / 1000) * time.timeScale\r\n  gl.uniform1f(startedAtUniform, secondsSinceStart)\r\n\r\n  const widthUniform = gl.getUniformLocation(shaderProgram, 'u_width')\r\n  gl.uniform1f(widthUniform, viewport.width)\r\n\r\n  const heightUniform = gl.getUniformLocation(shaderProgram, 'u_height')\r\n  gl.uniform1f(heightUniform, viewport.height)\r\n\r\n  const xTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatex')\r\n  gl.uniform1f(xTranslateUniform, viewport.translate.x)\r\n\r\n  const yTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatey')\r\n  gl.uniform1f(yTranslateUniform, viewport.translate.y)\r\n}\r\n\r\nfunction getMillisElapsed(startedAt, pauseDuration) {\r\n  return Date.now() - startedAt - pauseDuration\r\n}\r\n\r\nexport function glDrawFrame(ctx) {\r\n  const { canvasRef, gl } = ctx\r\n\r\n  // Only continue if WebGL is available and working\r\n  if (gl === null) {\r\n    alert('Unable to initialize WebGL. Your browser or machine may not support it.')\r\n    return\r\n  }\r\n\r\n  // Construct the final version of the fragment shader code\r\n  const fragCode = buildFragCode(ctx)\r\n\r\n  const vertexBuffer = bindVertices(gl)\r\n  const indexBuffer = bindIndices(gl)\r\n  const shaderProgram = createProgram(gl, fragCode)\r\n  setUniforms(shaderProgram, ctx)\r\n\r\n  /*======= Associating shaders to buffer objects =======*/\r\n  // Bind vertex buffer object\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n\r\n  // Bind index buffer object\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n\r\n  // Get the attribute location\r\n  const coord = gl.getAttribLocation(shaderProgram, 'coordinates')\r\n\r\n  // Point an attribute to the currently bound VBO\r\n  gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0)\r\n\r\n  // Enable the attribute\r\n  gl.enableVertexAttribArray(coord)\r\n\r\n  /*============= Drawing the Quad ================*/\r\n  // Clear the canvas\r\n  gl.clearColor(0, 0, 0, 1)\r\n\r\n  // Enable the depth test\r\n  gl.enable(gl.DEPTH_TEST)\r\n\r\n  // Clear the color buffer bit\r\n  gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n  // Set the view port\r\n  gl.viewport(0, 0, canvasRef.width, canvasRef.height)\r\n\r\n  // Draw the triangles\r\n  gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DebugFrame({frameCount, frameTime}) {\r\n\r\n  return (\r\n    <div className='frametime'>\r\n      <p>Frames: {frameCount}</p>\r\n      <p>Frametime: {frameTime}ms</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HelpTooltip({hoverText}) {\r\n  return (\r\n    <div className='tooltip'>\r\n      <span className='tooltip-text'>{hoverText}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport HelpTooltip from './HelpTooltip'\r\n\r\nexport function CheckboxField({ label, helpText, inputValue, setInputValue }) {\r\n  function toggle() {\r\n    if (inputValue === false) {\r\n      setInputValue(true)\r\n    } else {\r\n      setInputValue(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='field-container'>\r\n      <span className='panel-label'>{label}</span>\r\n      {helpText ? <HelpTooltip hoverText={helpText} /> : null}\r\n      <input className='panel-input' type='checkbox' name={label} checked={inputValue} onChange={toggle} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function LabelledField({ label, helpText, inputValue, setInputValue }) {\r\n  function handleChange(event) {\r\n    setInputValue(event.target.value)\r\n    inputValue = event.target.value\r\n  }\r\n\r\n  return (\r\n    <div className='field-container'>\r\n      <span className='panel-label'>{label}</span>\r\n      {helpText ? <HelpTooltip hoverText={helpText} /> : null}\r\n      <input className='panel-input' name={label} value={inputValue} onChange={handleChange} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function DoubleArrow({ onClick, className }) {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      enable-background='new 0 0 24 24'\r\n      height='24'\r\n      viewBox='0 0 24 24'\r\n      width='24'\r\n      onClick={onClick}\r\n      className={className}>\r\n      <g>\r\n        <rect fill='none' height='24' width='24' />\r\n      </g>\r\n      <g>\r\n        <g>\r\n          <polygon points='15.5,5 11,5 16,12 11,19 15.5,19 20.5,12' />\r\n          <polygon points='8.5,5 4,5 9,12 4,19 8.5,19 13.5,12' />\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { DoubleArrow } from './../Icons'\r\n\r\nfunction GroupToggleButton({ open, setOpen }) {\r\n  function toggle() {\r\n    if (open === true) {\r\n      setOpen(false)\r\n    } else if (open === false) {\r\n      setOpen(true)\r\n    }\r\n  }\r\n\r\n  return <DoubleArrow onClick={toggle} facing={open ? 'up' : 'down'} className='group-button' />\r\n}\r\n\r\nexport default function CollapsibleGroup({ title, children }) {\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const contentClasses = 'group-content '.concat(open ? 'open' : '')\r\n  const containerClasses = 'group-container '.concat(open ? 'open' : '')\r\n\r\n  return (\r\n    <div className={containerClasses}>\r\n      <div className='group-heading'>\r\n        <span className='group-title'>{title}</span>\r\n        <GroupToggleButton open={open} setOpen={setOpen} />\r\n      </div>\r\n      <div className={contentClasses}> {children}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from '../ModelProvider'\r\nimport { LabelledField, CheckboxField } from './InputTypes'\r\nimport CollapsibleGroup from './CollapsibleGroup'\r\n\r\nfunction Width() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n\r\n  const helpText = 'Viewport width'\r\n\r\n  return <LabelledField label='Viewport Width' helpText={helpText} inputValue={width} setInputValue={setWidth} />\r\n}\r\n\r\nfunction Height() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  const helpText = 'Viewport height'\r\n\r\n  return <LabelledField label='Viewport Height' helpText={helpText} inputValue={height} setInputValue={setHeight} />\r\n}\r\n\r\nfunction TranslateX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [translateX, setTranslateX] = ctx.viewport.translate.x\r\n\r\n  const helpText = 'Translate x'\r\n\r\n  return <LabelledField label='Translate X' helpText={helpText} inputValue={translateX} setInputValue={setTranslateX} />\r\n}\r\n\r\nfunction TranslateY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [translateY, setTranslateY] = ctx.viewport.translate.y\r\n\r\n  const helpText = 'Translate y'\r\n\r\n  return <LabelledField label='Translate Y' helpText={helpText} inputValue={translateY} setInputValue={setTranslateY} />\r\n}\r\n\r\nfunction AspectRatioLock() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.lockAspectRatio\r\n\r\n  const label = 'Lock aspect ratio'\r\n  const helpText = 'Toggle viewport aspect ratio locking'\r\n\r\n  return <CheckboxField label={label} helpText={helpText} inputValue={value} setInputValue={setValue} />\r\n}\r\n\r\nexport default function Viewport() {\r\n  const title = 'Viewport'\r\n\r\n  return (\r\n    <CollapsibleGroup title={title}>\r\n      <Width />\r\n      <Height />\r\n      <TranslateX />\r\n      <TranslateY />\r\n      <AspectRatioLock />\r\n    </CollapsibleGroup>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nfunction PanelToggleButton({open, setOpen}) {\r\n  function togglePanel(event) {\r\n    if (open === true) {\r\n      setOpen(false)\r\n    } else if (open === false) {\r\n      setOpen(true)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <button onClick={togglePanel} className='panel-toggle'>{open ? '<<<' : '>>>'}</button>\r\n  )\r\n}\r\n\r\nexport default function CollapsiblePanel({children, styleClass}) {\r\n  const [open, setOpen] = useState(true)\r\n\r\n\r\n  return (\r\n    <div className={`${styleClass} panel ${open ? 'panel-open' : 'panel-closed'}`} >\r\n      <PanelToggleButton open={open} setOpen={setOpen}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from '../ModelProvider'\r\n\r\nexport default function PauseButton() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [paused, setPaused] = ctx.time.paused\r\n  const [lastPausedAt, setLastPausedAt] = ctx.time.lastPausedAt\r\n  const [, setPauseDuration] = ctx.time.pauseDuration\r\n\r\n  function pause() {\r\n    setPaused(true)\r\n    setLastPausedAt(Date.now())\r\n  }\r\n\r\n  function resume() {\r\n    setPaused(false)\r\n    setPauseDuration(pauseDuration => pauseDuration + (Date.now() - lastPausedAt))\r\n  }\r\n\r\n  function togglePause() {\r\n    if (paused === true) {\r\n      resume()\r\n    } else if (paused === false) {\r\n      pause()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button onClick={togglePause} className='pause-button'>\r\n      {paused ? 'Resume' : 'Pause'}\r\n    </button>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { contextToValueObject, ShaderContext, loadObjectIntoContext } from '../ModelProvider'\r\nimport { LabelledField } from './InputTypes'\r\nimport CollapsibleGroup from './CollapsibleGroup'\r\n\r\nfunction makePresetObject(name, ctx) {\r\n  const julia = contextToValueObject(ctx.julia)\r\n  const viewport = contextToValueObject(ctx.viewport)\r\n  return {\r\n    name,\r\n    julia,\r\n    viewport,\r\n  }\r\n}\r\n\r\nfunction namedPresetExists(name) {\r\n  const array = getPresetArray()\r\n  for (const preset in array) {\r\n    if (preset.name === name) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction getPresetArray() {\r\n  const presetArray = localStorage.getItem('presets')\r\n  return presetArray ? JSON.parse(presetArray) : []\r\n}\r\n\r\nfunction addPresetToArray(preset) {\r\n  const array = getPresetArray()\r\n  array.push(preset)\r\n  localStorage.setItem('presets', JSON.stringify(array))\r\n}\r\n\r\nexport default function PresetSaver() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [selectedPreset, setSelectedPreset] = useState('')\r\n  const [presetName, setPresetName] = useState('')\r\n  const [presetsList, setPresetsList] = useState([])\r\n\r\n  const title = 'Presets'\r\n\r\n  const updatePresetsList = () => {\r\n    const presets = getPresetArray()\r\n    setPresetsList(presets)\r\n  }\r\n\r\n  function savePreset() {\r\n    const presetObject = makePresetObject(presetName, ctx)\r\n    if (namedPresetExists(presetObject)) {\r\n      // TODO: ask to overwrite\r\n    }\r\n    addPresetToArray(presetObject)\r\n    updatePresetsList()\r\n  }\r\n\r\n  function loadPreset() {\r\n    const presetArray = getPresetArray()\r\n    // TODO: access presetArray by key identifier\r\n    for (const i in presetArray) {\r\n      const preset = presetArray[i]\r\n      if (preset.name === selectedPreset) {\r\n        loadObjectIntoContext(preset.julia, ctx.julia)\r\n        loadObjectIntoContext(preset.viewport, ctx.viewport)\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateSelection(e) {\r\n    setSelectedPreset(e.target.value)\r\n  }\r\n\r\n  // Initial select element population\r\n  useEffect(() => {\r\n    updatePresetsList()\r\n  }, [])\r\n\r\n  return (\r\n    <CollapsibleGroup title={title}>\r\n      <LabelledField label='Preset name' inputValue={presetName} setInputValue={setPresetName} />\r\n      <select value={selectedPreset} onChange={updateSelection} className='panel-input preset-selector'>\r\n        {presetsList.length === 0 ? <option>No presets saved</option> : null}\r\n        {presetsList.map(item => {\r\n          return (\r\n            <option key={item.name} value={item.name}>\r\n              {item.name}\r\n            </option>\r\n          )\r\n        })}\r\n      </select>\r\n      <button className='panel-input' onClick={savePreset}>\r\n        Save\r\n      </button>\r\n      <button className='panel-input' onClick={loadPreset}>\r\n        Load\r\n      </button>\r\n    </CollapsibleGroup>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../ModelProvider'\r\nimport { LabelledField, CheckboxField } from './InputTypes'\r\n\r\nimport CollapsibleGroup from './CollapsibleGroup'\r\n\r\nfunction CValueX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.c.x\r\n\r\n  const helpText = 'C value x'\r\n\r\n  return <LabelledField label='C Y' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n}\r\n\r\nfunction CValueY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.c.y\r\n\r\n  const helpText = 'C value y'\r\n\r\n  return <LabelledField label='C X' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n}\r\n\r\nfunction PolyCoefficients() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.coefficients\r\n\r\n  const helpText =\r\n    'Comma-seperated values for the coefficients of each polynomial term. N values applied in the order Z^^n-1 ... Z^^1, C'\r\n\r\n  return (\r\n    <LabelledField label='Coefficients' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n  )\r\n}\r\n\r\nfunction HumanReadableFormula() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [coefficients] = ctx.julia.coefficients\r\n  const termList = getTermList(coefficients)\r\n\r\n  // TODO: handle coefficients that are an expression rather than a number\r\n  function PolynomialTerm({ term, isFirst }) {\r\n    const { exp, coeff } = term\r\n\r\n    // Don't render anything for zero-terms\r\n    if (coeff === 0) {\r\n      return null\r\n    }\r\n\r\n    const coeffSign = (coeff, isFirst) => {\r\n      if (coeff < 0) {\r\n        return `\\u{2212}`\r\n      } else {\r\n        return isFirst ? null : `\\u{002B}`\r\n      }\r\n    }\r\n\r\n    const renderTerm = coeff => {\r\n      const abs = Math.abs(coeff)\r\n      if (abs !== 1) {\r\n        if (coeff < 0) {\r\n          return `${abs}\\u{00B7}`\r\n        } else {\r\n          return `${coeff}\\u{00B7}`\r\n        }\r\n      }\r\n      return null\r\n    }\r\n\r\n    switch (exp) {\r\n      // C\r\n      case 0:\r\n        return (\r\n          <span className='poly-term'>\r\n            {coeffSign(coeff, isFirst)}\r\n            {renderTerm(coeff)}C\r\n          </span>\r\n        )\r\n      // Z no exponent\r\n      case 1:\r\n        return (\r\n          <span className='poly-term'>\r\n            {coeffSign(coeff, isFirst)}\r\n            {renderTerm(coeff)}Z\r\n          </span>\r\n        )\r\n      default:\r\n        return (\r\n          <span className='poly-term'>\r\n            {coeffSign(coeff, isFirst)}\r\n            {renderTerm(coeff)}Z<sup>{exp}</sup>\r\n          </span>\r\n        )\r\n    }\r\n  }\r\n\r\n  function getTermList(ctxCoefficients) {\r\n    const coeffList = ctxCoefficients.replace(/\\s/g, '').split(',')\r\n    let termList = []\r\n    for (let i = 0; i < coeffList.length; i++) {\r\n      const exp = coeffList.length - (i + 1)\r\n      const coeff = parseFloat(coeffList[i])\r\n      termList.push({ exp, coeff })\r\n    }\r\n    return termList\r\n  }\r\n\r\n  return (\r\n    <span className='poly-container'>\r\n      {termList.map((t, i) => (\r\n        <PolynomialTerm term={t} isFirst={i === 0} />\r\n      ))}\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction MaxIterations() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.maxIterations\r\n\r\n  const helpText = 'Max iterations'\r\n\r\n  return (\r\n    <LabelledField label='Max Iterations' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n  )\r\n}\r\n\r\nfunction EscapeRadius() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.escapeRadius\r\n\r\n  const helpText = 'Escape radius'\r\n\r\n  return (\r\n    <LabelledField label='Escape radius' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n  )\r\n}\r\n\r\nfunction SmoothingToggle() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.useSmoothing\r\n\r\n  const label = 'Julia smoothing'\r\n  const helpText = 'Toggle Julia iteration smoothing'\r\n\r\n  return <CheckboxField label={label} helpText={helpText} inputValue={value} setInputValue={setValue} />\r\n}\r\n\r\nfunction TimeScale() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.time.timeScale\r\n\r\n  const helpText = 'Time scale'\r\n\r\n  return <LabelledField label='Time scale' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n}\r\n\r\nexport default function JuliaVariables() {\r\n  const title = 'Julia Variables'\r\n\r\n  return (\r\n    <CollapsibleGroup title={title}>\r\n      <CValueX />\r\n      <CValueY />\r\n      <PolyCoefficients />\r\n      <HumanReadableFormula />\r\n      <MaxIterations />\r\n      <EscapeRadius />\r\n      <SmoothingToggle />\r\n      <TimeScale />\r\n    </CollapsibleGroup>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Viewport from './Viewport'\r\nimport CollapsiblePanel from './CollapsiblePanel'\r\nimport PauseButton from './PauseButton'\r\nimport PresetSaver from './PresetSaver'\r\nimport JuliaVariables from './Julia'\r\n\r\nfunction ControlPanel({ children }) {\r\n  function Spacer({ size }) {\r\n    return <div style={{ marginBottom: size }} />\r\n  }\r\n  // TODO: Convert integer field values to glsl floats\r\n\r\n  return (\r\n    <CollapsiblePanel styleClass='control-panel'>\r\n      <PauseButton />\r\n      <Spacer size='3em' />\r\n      <p className='field-container'>Drag a box on the canvas to zoom to that area</p>\r\n      <Spacer size='3em' />\r\n      <JuliaVariables />\r\n      <Spacer size='3em' />\r\n      <Viewport />\r\n      <Spacer size='3em' />\r\n      <PresetSaver />\r\n      <Spacer size='3em' />\r\n      {children}\r\n    </CollapsiblePanel>\r\n  )\r\n}\r\n\r\nexport default ControlPanel\r\n","import React, { useRef, useEffect, useContext, useState } from 'react'\r\nimport { glDrawFrame } from '../webgl'\r\nimport { ShaderContext, contextToValueObject } from './ModelProvider'\r\nimport DebugFrame from './DebugFrame'\r\nimport ControlPanel from './ControlPanel/ControlPanel'\r\n\r\nfunction scaleViewportByAspectRatio({ width, height }) {\r\n  function getOrientation() {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    return canvasWidth > canvasHeight ? 'landscape' : 'portrait'\r\n  }\r\n\r\n  function getAspectRatio(orientation) {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    // return early if 0 to avoid div by 0 errors\r\n    if (canvasHeight === 0 || canvasWidth === 0) return 1\r\n    if (orientation === 'landscape') {\r\n      return canvasWidth / canvasHeight\r\n    } else if (orientation === 'portrait') {\r\n      return canvasHeight / canvasWidth\r\n    }\r\n    // Fallback if orientation does not match one of two expected values\r\n    return 1\r\n  }\r\n\r\n  const canvasOrientation = getOrientation()\r\n  const aspectRatio = getAspectRatio(canvasOrientation)\r\n  // For landscape, width should not change\r\n  // For portrait, height should not change\r\n  if (canvasOrientation === 'landscape') {\r\n    height *= 1 / aspectRatio\r\n  } else if (canvasOrientation === 'portrait') {\r\n    width *= 1 / aspectRatio\r\n  }\r\n  return { width, height }\r\n}\r\n\r\nfunction useGlCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const canvasRef = useRef()\r\n  const setRef = ctx.canvasRef[1]\r\n  const setGl = ctx.gl[1]\r\n\r\n  useEffect(() => {\r\n    setRef(canvasRef.current)\r\n    setGl(canvasRef.current.getContext('webgl'))\r\n  }, [setRef, setGl, canvasRef])\r\n\r\n  return canvasRef\r\n}\r\n\r\nfunction useJuliaAnimation() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const animateRef = useRef()\r\n  const [frameCount, setFrameCount] = useState(0)\r\n  const [lastFrameTime, setLastFrameTime] = useState(0)\r\n  const paused = ctx.time.paused[0]\r\n  const gl = ctx.gl[0]\r\n\r\n  useEffect(() => {\r\n    // Define function to be run on every frame render\r\n    const animate = () => {\r\n      if (paused === false && gl !== null) {\r\n        setLastFrameTime(Date.now())\r\n        const glObj = contextToValueObject(ctx)\r\n        glDrawFrame(glObj)\r\n        setFrameCount(frameCount => frameCount + 1)\r\n      }\r\n      // The frame request runs itself recursively\r\n      animateRef.current = requestAnimationFrame(animate)\r\n    }\r\n\r\n    // Start frame requests\r\n    animateRef.current = requestAnimationFrame(animate)\r\n\r\n    // Return cleanup as callback\r\n    return () => cancelAnimationFrame(animateRef.current)\r\n  }, [ctx, paused, gl])\r\n\r\n  return [frameCount, lastFrameTime]\r\n}\r\n\r\nfunction useAspectRatioScaling() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  useEffect(() => {\r\n    const vp = scaleViewportByAspectRatio({ width, height })\r\n    setWidth(vp.width)\r\n    setHeight(vp.height)\r\n    // Effect can't fire when width/height changes, results in loop\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n}\r\n\r\nexport default function ShaderCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [lockAspectRatio] = ctx.viewport.lockAspectRatio\r\n  const [dragStart, setDragStart] = useState()\r\n\r\n  // Initialise canvas and webgl\r\n  const canvasRef = useGlCanvas()\r\n\r\n  // Start rendering\r\n  const [frameCount, lastFrameTime] = useJuliaAnimation()\r\n\r\n  // Scale initial viewport size to respect aspect ratio\r\n  useAspectRatioScaling()\r\n\r\n  function startDrag(e) {\r\n    const loc = [e.clientX, e.clientY]\r\n    console.log('drag start: ' + loc)\r\n    setDragStart(loc)\r\n  }\r\n\r\n  function endDrag(e) {\r\n    // Translate position values from the canvas to xy-coordinates on the grid\r\n    function canvasToGrid({ x, y }) {\r\n      const canvas = document.getElementsByClassName('glcanvas')[0]\r\n      const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n      const gridWidth = parseFloat(ctx.viewport.width[0])\r\n      const gridHeight = parseFloat(ctx.viewport.height[0])\r\n\r\n      const widthScale = gridWidth / canvasWidth\r\n      const heightScale = gridHeight / canvasHeight\r\n\r\n      const translateX = parseFloat(ctx.viewport.translate.x[0])\r\n      const translateY = parseFloat(ctx.viewport.translate.y[0])\r\n\r\n      const res = {\r\n        x: -gridWidth / 2 + x * widthScale + translateX,\r\n        y: -gridHeight / 2 + y * heightScale + translateY,\r\n      }\r\n\r\n      return res\r\n    }\r\n\r\n    function dragHasNoArea({ x1, x2, y1, y2 }) {\r\n      const width = Math.abs(x1 - x2)\r\n      const height = Math.abs(y1 - y2)\r\n\r\n      return width < 1 || height < 1\r\n    }\r\n\r\n    const setTranslateX = ctx.viewport.translate.x[1]\r\n    const setTranslateY = ctx.viewport.translate.y[1]\r\n    const setViewportWidth = ctx.viewport.width[1]\r\n    const setViewportHeight = ctx.viewport.height[1]\r\n\r\n    const dragEnd = [e.clientX, e.clientY]\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n    // y values subtracted from canvas height to get correct locations\r\n    // canvas dimensions are measured from top left, need to start from bottom left\r\n    // as that's what our grid starts from\r\n    const dragBox = {\r\n      x1: dragStart[0],\r\n      x2: dragEnd[0],\r\n      y1: canvas.offsetHeight - dragStart[1],\r\n      y2: canvas.offsetHeight - dragEnd[1],\r\n    }\r\n\r\n    if (dragHasNoArea(dragBox)) {\r\n      return\r\n    }\r\n\r\n    const dragCenterCanvas = { x: (dragBox.x1 + dragBox.x2) / 2, y: (dragBox.y1 + dragBox.y2) / 2 }\r\n    const dragCenterGrid = canvasToGrid(dragCenterCanvas)\r\n\r\n    setTranslateX(dragCenterGrid.x)\r\n    setTranslateY(dragCenterGrid.y)\r\n\r\n    // Scale current viewport size by ratio of drag box\r\n    const viewportWidth = parseFloat(ctx.viewport.width)\r\n    const viewportHeight = parseFloat(ctx.viewport.height)\r\n\r\n    const dragDimensions = { width: Math.abs(dragBox.x1 - dragBox.x2), height: Math.abs(dragBox.y1 - dragBox.y2) }\r\n    const dragViewport = {\r\n      width: viewportWidth * (dragDimensions.width / canvasWidth),\r\n      height: viewportHeight * (dragDimensions.height / canvasHeight),\r\n    }\r\n\r\n    if (lockAspectRatio === true) {\r\n      console.log('scaling with lock')\r\n      const newViewport = scaleViewportByAspectRatio(dragViewport)\r\n      setViewportWidth(newViewport.width)\r\n      setViewportHeight(newViewport.height)\r\n    } else {\r\n      console.log('scaling without lock')\r\n      setViewportWidth(dragViewport.width)\r\n      setViewportHeight(dragViewport.height)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        className='glcanvas'\r\n        width='1000'\r\n        height='1000'\r\n        onMouseDown={startDrag}\r\n        onMouseUp={endDrag}\r\n        ref={canvasRef}\r\n      />\r\n      <ControlPanel>\r\n        <DebugFrame frameCount={frameCount} frameTime={Date.now() - lastFrameTime} />\r\n      </ControlPanel>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport ModelProvider from './components/ModelProvider'\r\nimport ShaderCanvas from './components/ShaderCanvas';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <ModelProvider>\r\n        <ShaderCanvas />\r\n      </ModelProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}