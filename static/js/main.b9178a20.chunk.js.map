{"version":3,"sources":["components/ModelProvider.js","webgl/math.js","webgl/color.js","helpers.js","components/gui/base_components/Item.js","components/gui/base_components/HelpTooltip.js","components/gui/base_components/Label.js","components/gui/base_components/OptionSelector.js","components/gui/julia/MSAA.js","webgl/julia.js","interp.js","colorspace.js","texture.js","components/gui/base_components/InputField.js","components/gui/julia/EscapeRadius.js","webgl.js","components/gui/GUI.js","components/gui/base_components/Folder.js","components/gui/julia/Coefficients.js","components/gui/julia/ConstantPoint.js","components/gui/julia/MaxIterations.js","components/gui/julia/SmoothingToggle.js","components/gui/julia/TimeScale.js","components/gui/viewport/Dimensions.js","components/gui/viewport/Translate.js","components/gui/viewport/LockAspectRatio.js","components/gui/colourmapping/ColorCurveSelector.js","components/gui/colourmapping/ColorModelSelector.js","components/gui/colourmapping/ColorPointControls.js","components/gui/colourmapping/ColorPointItem.js","components/gui/colourmapping/ColorMapFolder.js","components/MyGUI.js","components/ShaderCanvas.js","App.js","serviceWorker.js","index.js"],"names":["ShaderContext","React","createContext","ShaderProvider","Provider","isUseState","Consumer","item","Array","isArray","length","name","startsWith","hasSetState","ModelProvider","children","initModelState","canvasRef","useState","gl","julia","coefficients","c","x","y","maxIterations","escapeRadius","useSmoothing","msaa","viewport","width","height","translate","lockAspectRatio","color","colorPoints","hex","position","curve","colorModel","textureData","time","startedAt","Date","now","paused","lastPausedAt","pauseDuration","timeScale","value","math","findClosestPair","arr","num","i","cur","next","lowerTrim","str","replace","toLowerCase","fixWebGlInts","match","finalStr","anyNumberRegex","RegExp","matches","exec","push","filter","m","includes","insertedCount","insertAt","slice","Item","className","HelpTooltip","text","dangerouslySetInnerHTML","__html","Label","htmlFor","tooltip","Option","key","OptionSelector","label","id","options","onChange","map","idx","msaaOptions","aaFrac","MSAA","ctx","useContext","setValue","e","newValue","target","cValue","cmplxExp","exp","coeff","parseFloat","coeffList","split","polySource","nextTerm","concat","polyIterate","buildFragCode","msaaStateValue","find","antialiasing","val","degree","toString","smoothIterations","vertCode","doInterp","a","b","frac","fn","res","Interps","linear","quadratic","Math","pow","cubic","squareroot","cuberoot","cosine","cos","PI","logarithmic","log","exponential","ColorSpaces","channels","min","max","rgb2hsv","rgbColor","h","r","g","delta","TEX_WIDTH","TEX_CHANNELS","parseHexColor","colorString","cString","trim","parseInt","generateTextureData","curveName","interp","sortedColorPoints","sort","sortedPositions","convertedColorPoints","texLerp","mapPct","closetPairIdxs","c1","c1pos","c2","c2pos","localMapPct","abs","tmp","tex2D","mapNDArray","hsvColor","f","p","q","t","s","v","floor","hsv2rgb","round","TEX_SIZE","Uint8Array","loc","chan","InputField","type","checked","onClick","stopPropagation","EscapeRadius","vertices","indices","setUniforms","shaderProgram","escapeRadiusUniform","getUniformLocation","uniform1f","maxIterationsUniform","uniform1i","resolutionUniform","uniform2fv","startedAtUniform","secondsSinceStart","widthUniform","heightUniform","xTranslateUniform","yTranslateUniform","colormapUniform","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","bindColorMap","glDrawFrame","fragCode","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","bindVertices","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","bindIndices","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getShaderParameter","COMPILE_STATUS","logOutput","getShaderInfoLog","console","idxList","lineNumber","substring","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","alert","GUI","Folder","title","closed","setClosed","Coefficients","ConstantPointX","ConstantPointY","MaxIterations","SmoothingToggle","TimeScale","ViewportWidth","ViewportHeight","TranslateX","TranslateY","LockAspectRatio","ColorCurveSelector","Object","keys","selectedValue","interpKey","ColorModelSelector","obj","ColorPointControls","ColorPicker","handleChange","ColorPosition","ColorPointItem","ColorMapFolder","setColorPoints","handleColorPointChanges","objAtIdx","nextObj","call","nextColorPoints","MyGUI","scaleViewportByAspectRatio","canvasOrientation","canvas","document","getElementsByClassName","offsetWidth","offsetHeight","getOrientation","aspectRatio","orientation","canvasWidth","canvasHeight","getAspectRatio","useJuliaAnimation","animateRef","useRef","frameCount","setFrameCount","lastFrameTime","setLastFrameTime","useEffect","current","requestAnimationFrame","animate","contextToValueObject","valuesObj","cancelAnimationFrame","ShaderCanvas","dragStart","setDragStart","setRef","setGl","getContext","useGlCanvas","setTextureData","newTextureData","o","useTextureBuilder","setWidth","setHeight","vp","useAspectRatioScaling","window","innerWidth","innerHeight","onMouseDown","clientX","clientY","onMouseUp","setTranslateX","setTranslateY","setViewportWidth","setViewportHeight","dragEnd","undefined","dragBox","x1","x2","y1","y2","dragHasNoArea","dragCenterGrid","gridWidth","gridHeight","heightScale","canvasToGrid","viewportWidth","viewportHeight","dragViewport","newViewport","ref","App","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9178a20.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const ShaderContext = React.createContext()\r\nexport const ShaderProvider = ShaderContext.Provider\r\nexport const ShaderConsumer = ShaderContext.Consumer\r\n\r\n/*\r\n  Take object from context and extract the values for each setState array\r\n  Recurse down if possilble and maintain k:v structure\r\n*/\r\n\r\n// Check to see if array has useState set function within\r\nconst hasSetState = item => {\r\n  return typeof item[1] === 'function' && item[1].name.startsWith('bound ')\r\n}\r\n\r\n// Is the item a useState array?\r\n// Perform checks on requirements for hasSetState beforehand\r\nconst isUseState = item => {\r\n  return Array.isArray(item) && item.length === 2 && hasSetState(item)\r\n}\r\n\r\n// Keeps object structure, but converts [state, setState]\r\n// Arrays to just the state value\r\nexport function contextToValueObject(obj) {\r\n  const valuesObj = {}\r\n  for (let item in obj) {\r\n    if (isUseState(obj[item])) {\r\n      valuesObj[item] = obj[item][0]\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      valuesObj[item] = contextToValueObject(obj[item])\r\n    }\r\n  }\r\n\r\n  return valuesObj\r\n}\r\n\r\n// Inverse of contextToValueObject\r\n// Takes an object and attempts to move values from\r\n// it into context's state through setState\r\nexport function loadObjectIntoContext(obj, ctx) {\r\n  for (const item in obj) {\r\n    if (isUseState(ctx[item])) {\r\n      // Call setState in ctx for each key in obj\r\n      const setState = ctx[item][1]\r\n      setState(obj[item])\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      loadObjectIntoContext(obj[item], ctx[item])\r\n    }\r\n  }\r\n}\r\n\r\nfunction ModelProvider({ children }) {\r\n  const initModelState = {\r\n    canvasRef: useState(null), // Canvas element used for rendering the fractal\r\n    gl: useState(null), // WebGL context of the canvas\r\n    julia: {\r\n      coefficients: useState('c, 2/3, -4*c/3, 0 , 0, 1'),\r\n      c: {\r\n        x: useState('0.3+0.2*cos(u_time)'),\r\n        y: useState('0.4-sin(u_time/2)'),\r\n      },\r\n      maxIterations: useState('20'),\r\n      escapeRadius: useState('200'),\r\n      useSmoothing: useState(true),\r\n      msaa: useState('2x'),\r\n    },\r\n    viewport: {\r\n      width: useState('7'),\r\n      height: useState('7'),\r\n      translate: {\r\n        x: useState('0'),\r\n        y: useState('0'),\r\n      },\r\n      lockAspectRatio: useState(true),\r\n    },\r\n    color: {\r\n      colorPoints: useState([\r\n        {\r\n          hex: '#000000',\r\n          position: '0',\r\n        },\r\n        {\r\n          hex: '#FF0000',\r\n          position: '0.5',\r\n        },\r\n        {\r\n          hex: '#00FF00',\r\n          position: '1.0',\r\n        },\r\n      ]),\r\n      curve: useState('linear'),\r\n      colorModel: useState('RGB'),\r\n      textureData: useState([255, 255, 255]),\r\n    },\r\n    time: {\r\n      startedAt: useState(Date.now()),\r\n      paused: useState(false),\r\n      lastPausedAt: useState(0),\r\n      pauseDuration: useState(0),\r\n      timeScale: useState('0.5'),\r\n    },\r\n  }\r\n\r\n  return <ShaderProvider value={initModelState}>{children}</ShaderProvider>\r\n}\r\n\r\nModelProvider.propTypes = {}\r\n\r\nexport default ModelProvider\r\n","//\r\n// MATHEMATICAL CONSTANTS\r\n//\r\nconst mathConstants = `\r\n#define PI 3.14159265359\r\n#define TAU 6.28318530718\r\n`\r\n\r\n//\r\n// COMPLEX NUMBER OPERATIONS\r\n// Source: https://gist.github.com/NiklasRosenstein/ee1f1b5786f94e17995361c63dafeb3f\r\n//\r\nconst complexConjug = `\r\nvec2 complexConjug(in vec2 c) { \r\n  return vec2(c.x, -c.y); \r\n}\r\n`\r\n\r\nconst complexMult = `\r\nvec2 complexMult(in vec2 a, in vec2 b) {\r\n  return vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\r\n}\r\n`\r\n\r\nconst complexDiv = `\r\nvec2 complexDiv(in vec2 a, in vec2 b) {\r\n  return complexMult(a, complexConjug(b));\r\n}\r\n`\r\n\r\nconst complexMag = `\r\nfloat complexMag(in vec2 c) { \r\n  return sqrt(c.x * c.x + c.y * c.y); \r\n}\r\n`\r\n\r\nconst complexAdd = `\r\nvec2 complexAdd(vec2 z1, vec2 z2) { \r\n  return vec2(z1.x + z2.x, z1.y + z2.y); \r\n}\r\n`\r\n\r\n// See http://mathworld.wolfram.com/ComplexExponentiation.html\r\n// Raises a complex number to the power of a second complex number\r\n// Use vec2(x, 0) as second parameter to raise by only a real\r\nconst complexPower = `\r\nvec2 complexPower(vec2 z1, vec2 z2) {\r\n  float a2b2 = z1.x * z1.x + z1.y * z1.y;\r\n  float t1 = pow(a2b2, z2.x / 2.) * exp(-z2.y * atan(z1.y, z1.x));\r\n  float t2 = z2.x * atan(z1.y, z1.x) + .5 * z2.y * log(a2b2);\r\n  return vec2(t1 * cos(t2), t1 * sin(t2));\r\n}\r\n`\r\n\r\nexport const math = `\r\n${mathConstants}\r\n${complexConjug}\r\n${complexMult}\r\n${complexDiv}\r\n${complexMag}\r\n${complexPower}\r\n${complexAdd}\r\n`","//\r\n// color SPACE FUNCTIONS\r\n//\r\nconst hsv2rgb = `\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\r\n}\r\n`\r\n\r\n//\r\n// JULIA ITERATIONS HSV COLORING FUNCTIONS\r\n//\r\nconst huefn = `\r\nfloat huefn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .1 + .3*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst satfn = `\r\nfloat satfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + .5*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst valfn = `\r\nfloat valfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .5 + 2.*(iterations / max_iter);\r\n}\r\n`\r\n\r\nexport const color = `\r\n${hsv2rgb}\r\n${huefn}\r\n${satfn}\r\n${valfn}\r\n`\r\n","// Map function which recurses into elements of initial array which are also arrays\r\nexport function mapNDArray(arr, fn) {\r\n  for (let i in arr) {\r\n    let e = arr[i]\r\n    if (e != null && Array.isArray(e)) {\r\n      arr[i] = mapNDArray(arr[i], fn)\r\n    } else {\r\n      arr[i] = fn(arr[i])\r\n    }\r\n  }\r\n  return arr\r\n}\r\n\r\n// Find the indexes of the two closest numbers to the provided parameter in a sorted array\r\nexport function findClosestPair(arr, num) {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let cur = arr[i]\r\n    let next = arr[i + 1]\r\n    if (cur <= num && next > num) {\r\n      return [i, i + 1]\r\n    }\r\n  }\r\n}\r\n\r\n// Trims spaces from string and converts to lowercase\r\nexport function lowerTrim(str) {\r\n  return str.replace(/ /g, '').toLowerCase()\r\n}\r\n\r\n/*\r\n  Ints are not implictly cast to floats in WebGL, any value which is passed to\r\n  WebGL code for use as a float must contain a decimal point\r\n\r\n  This function appends a period to any int to avoid type errors once it's passed\r\n  into WebGL code\r\n*/\r\nexport function fixWebGlInts(str) {\r\n  let finalStr = str\r\n  // Capture: 1. floats, 2. floats (int w/ trailing period), 3. ints\r\n  const anyNumberRegex = new RegExp(/\\d+[.]\\d+|(\\d+[.])+|(\\d+)/g)\r\n\r\n  // Find all matches\r\n  let match\r\n  let matches = []\r\n  while ((match = anyNumberRegex.exec(str)) !== null) {\r\n    matches.push(match)\r\n  }\r\n\r\n  // Filter out floats\r\n  matches = matches.filter(m => !m[0].includes('.'))\r\n\r\n  // How many extra characters have been inserted\r\n  let insertedCount = 0\r\n  for (let i in matches) {\r\n    let m = matches[i]\r\n    let insertAt = m['index'] + m[0].length + insertedCount\r\n    finalStr = finalStr.slice(0, insertAt) + '.' + finalStr.slice(insertAt, finalStr.length)\r\n    insertedCount += 1\r\n  }\r\n\r\n  return finalStr\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Item({ children }) {\r\n  return <li className='item'>{children}</li>\r\n}\r\n\r\nItem.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function HelpTooltip({ text }) {\r\n  return (\r\n    <div className='tooltip'>\r\n      <span dangerouslySetInnerHTML={{ __html: text }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nHelpTooltip.propTypes = {\r\n  text: PropTypes.node.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport HelpTooltip from './HelpTooltip'\r\n\r\nexport default function Label({ htmlFor, text, tooltip }) {\r\n  tooltip = tooltip || null\r\n  return (\r\n    <>\r\n      <label htmlFor={htmlFor}>\r\n        {text} {tooltip ? <HelpTooltip text={tooltip} /> : null}\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n\r\nLabel.propTypes = {\r\n  htmlFor: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Item from './Item'\r\nimport Label from './Label'\r\n\r\nfunction Option({ item }) {\r\n  return (\r\n    <option key={item} value={item}>\r\n      {item}\r\n    </option>\r\n  )\r\n}\r\n\r\nexport default function OptionSelector({ label, tooltip, id, options, value, onChange }) {\r\n  label = label || null\r\n  tooltip = tooltip || null\r\n\r\n  return (\r\n    <Item>\r\n      {label ? <Label htmlFor={id} text={label} tooltip={tooltip} /> : null}\r\n      <select id={id} name={id} value={value} onChange={onChange}>\r\n        {options.map((item, idx) => (\r\n          <Option key={idx} item={item} />\r\n        ))}\r\n      </select>\r\n    </Item>\r\n  )\r\n}\r\n\r\nOptionSelector.propTypes = {\r\n  label: PropTypes.string,\r\n  tooptip: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport OptionSelector from './../base_components/OptionSelector'\r\nimport { ShaderContext } from './../../ModelProvider'\r\n\r\nexport const msaaOptions = [\r\n  { name: '1x', aaFrac: 1 },\r\n  { name: '2x', aaFrac: 1 / 2 },\r\n  { name: '4x', aaFrac: 1 / 4 },\r\n  { name: '8x', aaFrac: 1 / 8 },\r\n  { name: '16x', aaFrac: 1 / 16 },\r\n]\r\n\r\nexport default function MSAA() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.msaa\r\n\r\n  const options = msaaOptions.map(item => item.name)\r\n\r\n  const label = 'Anti-aliasing'\r\n  const id = 'msaa'\r\n  const tooltip =\r\n    'Level of multisample anti-aliasing applied to render. High levels may result in considerable slowdown'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={value} onChange={onChange} />\r\n}\r\n","import { math } from './math'\r\nimport { color } from './color'\r\nimport { fixWebGlInts } from './../helpers'\r\nimport { msaaOptions } from '../components/gui/julia/MSAA'\r\n// GLSL 'for' loops can only be indexed up to a constant value\r\n// Passing in the max iteration count through a uniform encounters an error\r\n// Therefore this function constructs a constant value definition\r\nfunction maxIterations(val) {\r\n  return `#define maxIterations ${val}`\r\n}\r\n\r\nfunction cValue({ x, y }) {\r\n  return `vec2 c = vec2(${fixWebGlInts(x)}, ${fixWebGlInts(y)});`\r\n}\r\n\r\nfunction viewport({ width, height, translate }) {\r\n  return `\r\n  vec2 size = vec2(${fixWebGlInts(width)}, ${fixWebGlInts(height)});\r\n  vec2 translate = vec2(${fixWebGlInts(translate.x)}, ${fixWebGlInts(translate.y)});\r\n  `\r\n}\r\n\r\nconst antialiasing = msaaStateValue => {\r\n  const { aaFrac } = msaaOptions.find(item => item.name === msaaStateValue)\r\n\r\n  if (aaFrac !== 1) {\r\n    return `#define AA ${aaFrac}`\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst uniforms = `\r\n\r\nuniform float u_escapeRadius;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\nuniform float u_width;\r\nuniform float u_height;\r\nuniform float u_translatex;\r\nuniform float u_translatey;\r\n\r\nuniform sampler2D u_colormap;\r\n`\r\n\r\nconst headers = `\r\nprecision highp float;\r\n`\r\n\r\n//\r\n// JULIA ITERATION FUNCTIONS\r\n//\r\nconst polyIterate = coefficients => {\r\n  const cmplxExp = (exp, coeff) => {\r\n    // Skip all terms with coefficient of 0\r\n    if (parseFloat(coeff) !== 0) {\r\n      // When exp = 0, we are handling the C value\r\n      if (exp === 0) {\r\n        return `z = complexAdd(z, ${coeff}*c);`\r\n      }\r\n      // Use complexAdd instead of complexPower for exponent 1\r\n      if (exp === 1) {\r\n        return `z = complexAdd(z, ${coeff}*zPrev);`\r\n      }\r\n      return `z = complexAdd(z, complexPower(${coeff}*zPrev, vec2(${exp}, 0.)));`\r\n    }\r\n    return ''\r\n  }\r\n\r\n  // Remove all whitespace, split into list delimitted by commas\r\n  const coeffList = coefficients.replace(/\\s/g, '').split(',')\r\n  let polySource = ''\r\n  for (let i = 0; i < coeffList.length; i++) {\r\n    const exp = coeffList.length - (i + 1)\r\n    const nextTerm = cmplxExp(exp, coeffList[i])\r\n    if (nextTerm !== '') {\r\n      polySource = polySource.concat(nextTerm, '\\n')\r\n    }\r\n  }\r\n  return polySource\r\n}\r\n\r\nconst julia = ctx => `\r\nvec4 julia(vec2 pixel) {\r\n  ${viewport(ctx.viewport)}\r\n  ${cValue(ctx.julia.c)}\r\n\r\n  // Map pixel value [0, canvasWidth], [0, canvasHeight] into ranges [0, 1]\r\n  vec2 uv = pixel / u_resolution;\r\n\r\n  vec2 z = (size * (uv - 0.5)) + translate;\r\n\r\n  float result;\r\n  int iters = 0;\r\n  vec2 zPrev = z;\r\n  z = vec2(0.);\r\n\r\n  for (int i = 0; i <= maxIterations; i++) {\r\n    ${polyIterate(fixWebGlInts(ctx.julia.coefficients))}\r\n    iters = i;\r\n    zPrev = z;\r\n    if (complexMag(z) > u_escapeRadius) break;\r\n  }\r\n\r\n  if (iters == maxIterations) {\r\n    return vec4(0,0,0,1);\r\n  } else {\r\n    ${ctx.julia.useSmoothing ? 'result = smoothIterations(z, iters);' : 'result = float(iters);'}\r\n  }\r\n\r\n  float percent = result/float(maxIterations);\r\n\r\n  return texture2D(u_colormap, vec2(percent));\r\n\r\n  // float hue = huefn(result);\r\n  // float sat = satfn(result);\r\n  // float val = valfn(result);\r\n\r\n  // return hsv2rgb(vec3(hue, sat, val, 1.0));\r\n}\r\n`\r\n\r\n// Smooth coloring function\r\n// http://linas.org/art-gallery/escape/escape.html\r\n// https://en.wikipedia.org/wiki/Mandelbrot_set#Continuous_(smooth)_coloring\r\n// http://www.iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\r\nfunction smoothIterations(julia) {\r\n  const { coefficients, escapeRadius } = julia\r\n  const degree = (coefficients.match(/,/g) || []).length.toString()\r\n\r\n  return `\r\n  float smoothIterations(vec2 z, int iterations) {\r\n    float mag = complexMag(z);\r\n    float logmag = log(mag);\r\n    float logbound = log(${fixWebGlInts(escapeRadius)});\r\n    float top = log(logmag/logbound);\r\n    float f = top/log(${fixWebGlInts(degree)});\r\n\r\n    return float(iterations) - f;\r\n  }\r\n  `\r\n}\r\n\r\n//\r\n// JULIA MAIN FUNCTION\r\n//\r\nconst main = ctx => `\r\nvoid main(void) {\r\n  vec4 color;\r\n\r\n  #ifdef AA\r\n    float n; // Number of loops\r\n    // Offset from center of pixel\r\n    for (float x = -0.5; x < 0.5; x += AA) {\r\n        for (float y = -0.5; y < 0.5; y += AA) {\r\n            color += julia(gl_FragCoord.xy + vec2(x, y));\r\n            n += 1.0;\r\n        }\r\n    }\r\n    color /= n; // Normalise colour\r\n  #else\r\n    color = julia(gl_FragCoord.xy);\r\n  #endif\r\n\r\n  gl_FragColor = color;\r\n}\r\n`\r\n\r\nexport const buildFragCode = ctx => `\r\n${headers}\r\n${antialiasing(ctx.julia.msaa)}\r\n${maxIterations(ctx.julia.maxIterations)}\r\n${uniforms}\r\n${math}\r\n${color}\r\n${smoothIterations(ctx.julia)}\r\n${julia(ctx)}\r\n${main(ctx)}\r\n`\r\n\r\nexport const vertCode = `\r\nattribute vec3 coordinates;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4(coordinates, 1.0);\r\n}\r\n`\r\n","function doInterp(a, b, frac, fn) {\r\n  const res = fn(frac)\r\n  return a * (1 - res) + b * res\r\n}\r\n\r\nconst linear = {\r\n  name: 'Linear',\r\n  value: 'linear',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => frac\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst quadratic = {\r\n  name: 'Quadratic',\r\n  value: 'quadratic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 2)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst squareroot = {\r\n  name: 'Square root',\r\n  value: 'squareroot',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 1 / 2)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cubic = {\r\n  name: 'Cubic',\r\n  value: 'cubic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 3)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cuberoot = {\r\n  name: 'Cube root',\r\n  value: 'cuberoot',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(frac, 1 / 3)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst cosine = {\r\n  name: 'Cosine',\r\n  value: 'cosine',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => -0.5 * Math.cos(Math.PI * frac) + 0.5\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst logarithmic = {\r\n  name: 'Logarithmic',\r\n  value: 'logarithmic',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => (1 / Math.log(2)) * Math.log(frac + 1)\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nconst exponential = {\r\n  name: 'Exponential',\r\n  value: 'exponential',\r\n  fn: (a, b, frac) => {\r\n    const fn = frac => Math.pow(2, frac) - 1\r\n    return doInterp(a, b, frac, fn)\r\n  },\r\n}\r\n\r\nexport const Interps = { linear, quadratic, cubic, squareroot, cuberoot, cosine, logarithmic, exponential }\r\n","// Conversion functions adapted from https://www.cs.rit.edu/~ncs/color/t_convert.html\r\n\r\nexport const ColorSpaces = [\r\n  {\r\n    name: 'RGB',\r\n    channels: [\r\n      {\r\n        name: 'red',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n      {\r\n        name: 'green',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n      {\r\n        name: 'blue',\r\n        min: 0,\r\n        max: 255,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: 'HSV',\r\n    channels: [\r\n      {\r\n        name: 'hue',\r\n        min: 0,\r\n        max: 360,\r\n      },\r\n      {\r\n        name: 'saturation',\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n      {\r\n        name: 'value',\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\n// Expects array of r,g,b values in range [0, 255]\r\n// Outputs array of h,s,v values: h [0, 360] s,v [0, 1]\r\n// TODO: convert white->white correctly\r\nexport function rgb2hsv(rgbColor) {\r\n  // Normalise colours to 0-1 range\r\n  const [r, g, b] = rgbColor.map(c => c / 255)\r\n  let h, s, v\r\n\r\n  // white\r\n  if (r + g + b === 3) {\r\n    return [-1, 0, 1]\r\n  }\r\n\r\n  // black\r\n  if (r + g + b === 0) {\r\n    return [-1, 0, 0]\r\n  }\r\n\r\n  // r,g,b values are from 0 to 1\r\n  // h = [0,360], s = [0,1], v = [0,1]\r\n  const min = Math.min(r, g, b)\r\n  const max = Math.max(r, g, b)\r\n  const delta = max - min\r\n\r\n  s = max !== 0 ? delta / max : 0\r\n  v = max\r\n\r\n  if (r === max) {\r\n    h = (g - b) / delta\r\n  } else if (g === max) {\r\n    h = 2 + (b - r) / delta\r\n  } else {\r\n    h = 4 + (r - g) / delta\r\n  }\r\n  h = h * 60\r\n  if (h < 0) h += 360\r\n\r\n  return [h, s, v]\r\n}\r\n// Expects array of h,s,v values: h [0, 360] s,v [0, 1]\r\n// Outputs array of rgb values in range [0, 255]\r\nexport function hsv2rgb(hsvColor) {\r\n  let [h, s, v] = hsvColor\r\n  let r, g, b\r\n  let i, f, p, q, t\r\n\r\n  if (s === 0) {\r\n    // achromatic (grey)\r\n    r = g = b = v\r\n    return [r * 255, g * 255, b * 255]\r\n  }\r\n  h /= 60 // sector 0 to 5\r\n  i = Math.floor(h)\r\n  f = h - i // factorial part of h\r\n  p = v * (1 - s)\r\n  q = v * (1 - s * f)\r\n  t = v * (1 - s * (1 - f))\r\n  switch (i) {\r\n    case 0:\r\n      r = v\r\n      g = t\r\n      b = p\r\n      break\r\n    case 1:\r\n      r = q\r\n      g = v\r\n      b = p\r\n      break\r\n    case 2:\r\n      r = p\r\n      g = v\r\n      b = t\r\n      break\r\n    case 3:\r\n      r = p\r\n      g = q\r\n      b = v\r\n      break\r\n    case 4:\r\n      r = t\r\n      g = p\r\n      b = v\r\n      break\r\n    default:\r\n      // case 5:\r\n      r = v\r\n      g = p\r\n      b = q\r\n      break\r\n  }\r\n  return [r * 255, g * 255, b * 255]\r\n}\r\n","import { mapNDArray, findClosestPair } from './helpers'\r\nimport { Interps } from './interp'\r\nimport { hsv2rgb, rgb2hsv } from './colorspace'\r\n\r\nexport const TEX_WIDTH = 2048\r\nexport const TEX_HEIGHT = 1\r\nexport const TEX_CHANNELS = 4\r\n\r\nexport function parseHexColor(colorString) {\r\n  let cString = colorString.trim()\r\n\r\n  if (cString.startsWith('#')) {\r\n    cString = cString.slice(1, cString.length)\r\n  }\r\n\r\n  const hexIdent = '0x'\r\n\r\n  if (parseInt(cString) != null) {\r\n    const colorAsArray = [\r\n      parseInt(hexIdent.concat(cString.slice(0, 2))),\r\n      parseInt(hexIdent.concat(cString.slice(2, 4))),\r\n      parseInt(hexIdent.concat(cString.slice(4, 6))),\r\n    ]\r\n    return colorAsArray\r\n  }\r\n\r\n  return [0, 0, 0]\r\n}\r\n\r\nexport function generateTextureData(colorPoints, curveName, colorModel) {\r\n  const inputColorSpace = 'RGB'\r\n  const interp = Interps[curveName].fn\r\n  const sortedColorPoints = colorPoints.sort((a, b) => parseFloat(a.position) - parseFloat(b.position))\r\n  const sortedPositions = sortedColorPoints.map(a => parseFloat(a.position))\r\n\r\n  // Convert all colorPoints to target color space\r\n  const convertedColorPoints =\r\n    colorModel !== inputColorSpace\r\n      ? sortedColorPoints.map(item => {\r\n          return { ...item, color: rgb2hsv(item.color) }\r\n        })\r\n      : sortedColorPoints\r\n\r\n  // Peform interpolation on each channel in each color\r\n  let texLerp = []\r\n  for (let i = 0; i < TEX_WIDTH; i++) {\r\n    const mapPct = i / TEX_WIDTH\r\n    const closetPairIdxs = findClosestPair(sortedPositions, mapPct)\r\n    const c1 = convertedColorPoints[closetPairIdxs[0]]\r\n    const c1pos = parseFloat(c1.position)\r\n    const c2 = convertedColorPoints[closetPairIdxs[1]]\r\n    const c2pos = parseFloat(c2.position)\r\n    const localMapPct = (mapPct - c1pos) / Math.abs(c1pos - c2pos)\r\n\r\n    // This check accounts for the 'undefined' hue values of black/white\r\n    // We carry the hue of the colour we interpolate from and interp on sat/value\r\n    if (c2.color[0] === -1) {\r\n      c2.color[0] = c1.color[0]\r\n    }\r\n\r\n    const tmp = []\r\n    for (let c = 0; c < c1.color.length; c++) {\r\n      tmp[c] = interp(c1.color[c], c2.color[c], localMapPct)\r\n    }\r\n    texLerp[i] = tmp\r\n  }\r\n\r\n  // Convert back into RGB\r\n  const texRGB = colorModel !== inputColorSpace ? texLerp.map(item => hsv2rgb(item)) : texLerp\r\n  // Append alpha channel\r\n  const withAlpha = texRGB.map(item => [...item, 255])\r\n\r\n  const tex2D = mapNDArray(withAlpha, i => Math.round(i))\r\n\r\n  const TEX_SIZE = TEX_WIDTH * TEX_CHANNELS\r\n  const textureData = new Uint8Array(TEX_SIZE)\r\n  for (let i = 0; i < TEX_SIZE; i++) {\r\n    let loc = Math.floor(i / TEX_CHANNELS)\r\n    let chan = i % TEX_CHANNELS\r\n    textureData[i] = tex2D[loc][chan]\r\n  }\r\n\r\n  return textureData\r\n}\r\n","import React from 'react'\r\nimport Item from './Item'\r\nimport Label from './Label'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function InputField({ type, label, name, tooltip, id, value, onChange }) {\r\n  type = type || 'text' // Default to textbox\r\n  name = name || id // Reuse id if name not provided\r\n  label = label || null\r\n  tooltip = tooltip || null\r\n\r\n  function def(e) {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Item>\r\n      {label ? <Label htmlFor={id} text={label} tooltip={tooltip} /> : null}\r\n      <input type={type} name={name} id={id} value={value} checked={value} onChange={onChange} onClick={def} />\r\n    </Item>\r\n  )\r\n}\r\n\r\nInputField.propTypes = {\r\n  type: PropTypes.oneOf(['text', 'checkbox', 'color']),\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers';\r\n\r\nexport default function EscapeRadius() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.escapeRadius\r\n\r\n  const label = 'Escape Radius'\r\n  const id = lowerTrim(label)\r\n  const tooltip =\r\n    \"When an iterates' magnitude is greater than the square root of this number, consider it as tending towards infinity\"\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import { buildFragCode, vertCode } from './webgl/julia'\r\nimport { TEX_WIDTH } from './texture'\r\nimport EscapeRadius from './components/gui/julia/EscapeRadius'\r\n\r\n//\r\n// WebGL initialisation and render loop\r\n// Code adapted from https://observablehq.com/@tomktjemsland/simple-webgl\r\n//\r\n\r\n// Define a square composed of two triangles\r\nconst vertices = [-1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0]\r\n// Index vertices in groups of 3\r\nconst indices = [3, 2, 1, 3, 1, 0]\r\n\r\nfunction bindVertices(gl) {\r\n  // Create an empty buffer object to store vertex buffer\r\n  const vertexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n\r\n  return vertexBuffer\r\n}\r\n\r\nfunction bindIndices(gl) {\r\n  // Create an empty buffer object to store Index buffer\r\n  const indexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\r\n\r\n  return indexBuffer\r\n}\r\n\r\nfunction createProgram(gl, fragCode) {\r\n  // Create a vertex shader object\r\n  const vertShader = gl.createShader(gl.VERTEX_SHADER)\r\n\r\n  // Attach vertex shader source code\r\n  gl.shaderSource(vertShader, vertCode)\r\n\r\n  // Compile the vertex shader\r\n  gl.compileShader(vertShader)\r\n\r\n  // Create fragment shader object\r\n  const fragShader = gl.createShader(gl.FRAGMENT_SHADER)\r\n\r\n  // Attach fragment shader source code\r\n  gl.shaderSource(fragShader, fragCode)\r\n\r\n  // Compile the fragmentt shader\r\n  gl.compileShader(fragShader)\r\n\r\n  // Create a shader program object to\r\n  // store the combined shader program\r\n  const shaderProgram = gl.createProgram()\r\n\r\n  // Attach a vertex shader\r\n  gl.attachShader(shaderProgram, vertShader)\r\n\r\n  // Attach a fragment shader\r\n  gl.attachShader(shaderProgram, fragShader)\r\n\r\n  // Link both the programs\r\n  gl.linkProgram(shaderProgram)\r\n\r\n  // Use the combined shader program object\r\n  gl.useProgram(shaderProgram)\r\n\r\n  if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n    const logOutput = gl.getShaderInfoLog(fragShader)\r\n    console.log(logOutput)\r\n\r\n    // Extract line of error from log and print that line of the frag shader code\r\n    let idxList = []\r\n    for (let i = 0; i < logOutput.length; i++) {\r\n      if (logOutput[i] === ':') {\r\n        idxList.push(i)\r\n      }\r\n    }\r\n\r\n    // Line number exists between second and third colons\r\n    const lineNumber = logOutput.substring(idxList[1] + 1, idxList[2])\r\n\r\n    console.log(fragCode.split('\\n')[lineNumber - 1])\r\n  }\r\n\r\n  if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(vertShader))\r\n  }\r\n\r\n  return shaderProgram\r\n}\r\n\r\nfunction bindColorMap(gl, textureData) {\r\n  const texture = gl.createTexture()\r\n  gl.bindTexture(gl.TEXTURE_2D, texture)\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, TEX_WIDTH, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, textureData)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n  return texture\r\n}\r\n\r\nfunction setUniforms(shaderProgram, ctx) {\r\n  const { canvasRef, gl, julia, time, viewport } = ctx\r\n  const { escapeRadius, maxIterations } = julia\r\n\r\n  const escapeRadiusUniform = gl.getUniformLocation(shaderProgram, 'u_escapeRadius')\r\n  gl.uniform1f(escapeRadiusUniform, escapeRadius)\r\n\r\n  const maxIterationsUniform = gl.getUniformLocation(shaderProgram, 'u_maxIterations')\r\n  gl.uniform1i(maxIterationsUniform, maxIterations)\r\n\r\n  const resolutionUniform = gl.getUniformLocation(shaderProgram, 'u_resolution')\r\n  gl.uniform2fv(resolutionUniform, [canvasRef.width, canvasRef.height])\r\n\r\n  const startedAtUniform = gl.getUniformLocation(shaderProgram, 'u_time')\r\n  const secondsSinceStart = (getMillisElapsed(time.startedAt, time.pauseDuration) / 1000) * time.timeScale\r\n  gl.uniform1f(startedAtUniform, secondsSinceStart)\r\n\r\n  const widthUniform = gl.getUniformLocation(shaderProgram, 'u_width')\r\n  gl.uniform1f(widthUniform, viewport.width)\r\n\r\n  const heightUniform = gl.getUniformLocation(shaderProgram, 'u_height')\r\n  gl.uniform1f(heightUniform, viewport.height)\r\n\r\n  const xTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatex')\r\n  gl.uniform1f(xTranslateUniform, viewport.translate.x)\r\n\r\n  const yTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatey')\r\n  gl.uniform1f(yTranslateUniform, viewport.translate.y)\r\n\r\n  const colormapUniform = gl.getUniformLocation(shaderProgram, 'u_colormap')\r\n  const texture = bindColorMap(gl, ctx.color.textureData)\r\n  gl.uniform1i(colormapUniform, texture)\r\n}\r\n\r\nfunction getMillisElapsed(startedAt, pauseDuration) {\r\n  return Date.now() - startedAt - pauseDuration\r\n}\r\n\r\nexport function glDrawFrame(ctx) {\r\n  const { canvasRef, gl } = ctx\r\n\r\n  // Only continue if WebGL is available and working\r\n  if (gl === null) {\r\n    alert('Unable to initialize WebGL. Your browser or machine may not support it.')\r\n    return\r\n  }\r\n\r\n  // Construct the final version of the fragment shader code\r\n  const fragCode = buildFragCode(ctx)\r\n\r\n  const vertexBuffer = bindVertices(gl)\r\n  const indexBuffer = bindIndices(gl)\r\n  const shaderProgram = createProgram(gl, fragCode)\r\n  setUniforms(shaderProgram, ctx)\r\n\r\n  /*======= Associating shaders to buffer objects =======*/\r\n  // Bind vertex buffer object\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n\r\n  // Bind index buffer object\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n\r\n  // Get the attribute location\r\n  const coord = gl.getAttribLocation(shaderProgram, 'coordinates')\r\n\r\n  // Point an attribute to the currently bound VBO\r\n  gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0)\r\n\r\n  // Enable the attribute\r\n  gl.enableVertexAttribArray(coord)\r\n\r\n  /*============= Drawing the Quad ================*/\r\n  // Clear the canvas\r\n  gl.clearColor(0, 0, 0, 1)\r\n\r\n  // Enable the depth test\r\n  gl.enable(gl.DEPTH_TEST)\r\n\r\n  // Clear the color buffer bit\r\n  gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n  // Set the view port\r\n  gl.viewport(0, 0, canvasRef.width, canvasRef.height)\r\n\r\n  // Draw the triangles\r\n  gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function GUI({ children }) {\r\n  return <ul className='gui-container'>{children}</ul>\r\n}\r\n","import React, { useState } from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\nexport default function Folder({ title, children }) {\r\n  const [closed, setClosed] = useState(false)\r\n\r\n  function toggle(e) {\r\n    if (closed) {\r\n      setClosed(false)\r\n    } else {\r\n      setClosed(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className='folder'>\r\n      <div className='group'>\r\n        <ul className={closed ? 'closed' : ''}>\r\n          <li className='title' onClick={toggle}>\r\n            {title}\r\n          </li>\r\n          {children}\r\n        </ul>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nFolder.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function Coefficients() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.coefficients\r\n\r\n  const label = 'Coefficients'\r\n  const id = lowerTrim(label)\r\n  const tooltip = `Comma-seperated values for the coefficients of each polynomial term. <br><br>\r\n    N values applied in the order Z<sup>n-1</sup> + Z<sup>n-2</sup> + ... + Z, C <br><br>\r\n    It is recommended to keep the coefficient of the highest term ≤1`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport function ConstantPointX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.c.x\r\n\r\n  const label = 'X'\r\n  const id = 'constantx'\r\n  const tooltip = `X (real) component of the constant point C`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function ConstantPointY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.c.y\r\n\r\n  const label = 'Y'\r\n  const id = 'constanty'\r\n  const tooltip = `Y (imaginary) component of the constant point C`\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from '../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function MaxIterations() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.maxIterations\r\n\r\n  const label = 'Max Iterations'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Maximum number of times to iterate a point before it is considered to be part of the bounded set'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport InputField from '../base_components/InputField'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function SmoothingToggle() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.useSmoothing\r\n\r\n  const label = 'Julia smoothing'\r\n  const id = lowerTrim(label)\r\n  const tooltip =\r\n    'Toggle Julia escape iteration renormalisation. Produces smooth gradients between the boundries of n and n+1 iterations before escape'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.checked\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField type='checkbox' id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport default function TimeScale() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.time.timeScale\r\n\r\n  const label = 'Time Scale'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Scale the speed at which time passes for functions reliant on u_time'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport function ViewportWidth() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.width\r\n\r\n  const label = 'Width'\r\n  const id = 'viewportwidth'\r\n  const tooltip = 'Width of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function ViewportHeight() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.height\r\n\r\n  const label = 'Height'\r\n  const id = 'viewportheight'\r\n  const tooltip = 'Height of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport { lowerTrim } from './../../../helpers'\r\nimport InputField from './../base_components/InputField'\r\n\r\nexport function TranslateX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.translate.x\r\n\r\n  const label = 'X'\r\n  const id = 'translatex'\r\n  const tooltip = 'Horizontal translation of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n\r\nexport function TranslateY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.translate.y\r\n\r\n  const label = 'Y'\r\n  const id = 'translatey'\r\n  const tooltip = 'Vertical translation of the complex plane'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField label={label} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport InputField from './../base_components/InputField'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function LockAspectRatio() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.lockAspectRatio\r\n\r\n  const label = 'Lock aspect ratio'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Lock the aspect ratio of the complex plane to match that of the canvas'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.checked\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <InputField type='checkbox' id={id} label={label} tooltip={tooltip} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\nimport { useContext } from 'react'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { Interps } from '../../../interp'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nexport default function ColorCurveSelector() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.color.curve\r\n  const curveName = Interps[value].name\r\n  const options = Object.keys(Interps).map(key => Interps[key].name)\r\n\r\n  const label = 'Mapping curve'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Curve used to shape the colour mapping'\r\n\r\n  function onChange(e) {\r\n    const selectedValue = e.target.value\r\n    const interpKey = Object.keys(Interps).find(key => Interps[key].name === selectedValue)\r\n    setValue(interpKey)\r\n  }\r\n\r\n  return (\r\n    <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={curveName} onChange={onChange} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport OptionSelector from '../base_components/OptionSelector'\r\nimport { useContext } from 'react'\r\nimport { ShaderContext } from '../../ModelProvider'\r\nimport { ColorSpaces } from '../../../colorspace'\r\nimport { lowerTrim } from './../../../helpers';\r\n\r\nexport default function ColorModelSelector() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.color.colorModel\r\n  const options = ColorSpaces.map(obj => obj.name)\r\n\r\n  const label = 'Colour model'\r\n  const id = lowerTrim(label)\r\n  const tooltip = 'Colour model used for interpolation between each colour specified in the colour map'\r\n\r\n  function onChange(e) {\r\n    const newValue = e.target.value\r\n    setValue(newValue)\r\n  }\r\n\r\n  return <OptionSelector label={label} id={id} tooltip={tooltip} options={options} value={value} onChange={onChange} />\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ColorPointControls() {\r\n  return <div></div>\r\n}\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\nimport InputField from './../base_components/InputField'\r\nimport Folder from '../base_components/Folder'\r\nimport { lowerTrim } from './../../../helpers'\r\n\r\nfunction ColorPicker({ item, idx, handleChange }) {\r\n  const value = item.hex\r\n  const label = 'Colour'\r\n  const name = 'color'\r\n  const id = `${lowerTrim(label)}${idx}`\r\n\r\n  function onChange(e) {\r\n    handleChange(e, idx)\r\n  }\r\n\r\n  return <InputField type='color' label={label} name={name} id={id} value={value} onChange={onChange} />\r\n}\r\n\r\nfunction ColorPosition({ item, idx, handleChange }) {\r\n  const value = item.position\r\n  const label = 'Position'\r\n  const name = 'position'\r\n  const id = `${lowerTrim(label)}${idx}`\r\n  const tooltip = \"Value in range [0, 1] representing the colour's position on the colour mapping\"\r\n\r\n  function onChange(e) {\r\n    handleChange(e, idx)\r\n  }\r\n\r\n  return (\r\n    <InputField type='text' label={label} name={name} id={id} tooltip={tooltip} value={value} onChange={onChange} />\r\n  )\r\n}\r\n\r\nexport default function ColorPointItem({ item, idx, handleChange }) {\r\n  return (\r\n    <Folder title={`Colour ${idx + 1}`}>\r\n      <ColorPicker item={item} idx={idx} handleChange={handleChange} />\r\n      <ColorPosition item={item} idx={idx} handleChange={handleChange} />\r\n    </Folder>\r\n  )\r\n}\r\n\r\nconst propTypes = {\r\n  item: PropTypes.shape({\r\n    hex: PropTypes.string,\r\n    position: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  }),\r\n  idx: PropTypes.number,\r\n  handleChange: PropTypes.func.isRequired,\r\n}\r\n\r\nColorPicker.propTypes = propTypes\r\nColorPosition.propTypes = propTypes\r\nColorPointItem.propTypes = propTypes\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../../ModelProvider'\r\nimport Folder from '../base_components/Folder'\r\nimport ColorPointControls from './ColorPointControls'\r\nimport ColorPointItem from './ColorPointItem'\r\n\r\nexport default function ColorMapFolder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [colorPoints, setColorPoints] = ctx.color.colorPoints\r\n\r\n  // Processes updates to child colour and position elements\r\n  function handleColorPointChanges(e, idx) {\r\n    const newValue = e.target.value\r\n    const objAtIdx = colorPoints[idx]\r\n\r\n    const nextObj = (() => {\r\n      switch (e.target.name) {\r\n        case 'color':\r\n          return { ...objAtIdx, hex: newValue }\r\n        case 'position':\r\n          return { ...objAtIdx, position: newValue }\r\n        default:\r\n          return objAtIdx\r\n      }\r\n    }).call()\r\n\r\n    // When updating an array stored in state, a new array must be created for a change to be detected\r\n    // Otherwise, effects dependant on the state will not trigger on update\r\n    // See: https://stackoverflow.com/questions/54620928/useeffect-hook-not-firing-after-state-change/54621059#54621059\r\n    const nextColorPoints = [...colorPoints]\r\n    nextColorPoints[idx] = nextObj\r\n    setColorPoints(nextColorPoints)\r\n  }\r\n\r\n  return (\r\n    <Folder title='Colour Points'>\r\n      <ColorPointControls />\r\n      {colorPoints.map((item, idx) => (\r\n        <ColorPointItem item={item} key={idx} idx={idx} handleChange={handleColorPointChanges} />\r\n      ))}\r\n    </Folder>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport GUI from './gui/GUI'\r\nimport Folder from './gui/base_components/Folder'\r\nimport Coefficients from './gui/julia/Coefficients'\r\nimport { ConstantPointY, ConstantPointX } from './gui/julia/ConstantPoint'\r\nimport MaxIterations from './gui/julia/MaxIterations'\r\nimport EscapeRadius from './gui/julia/EscapeRadius'\r\nimport SmoothingToggle from './gui/julia/SmoothingToggle'\r\nimport TimeScale from './gui/julia/TimeScale'\r\nimport { ViewportWidth, ViewportHeight } from './gui/viewport/Dimensions'\r\nimport { TranslateX, TranslateY } from './gui/viewport/Translate'\r\nimport LockAspectRatio from './gui/viewport/LockAspectRatio'\r\nimport ColorCurveSelector from './gui/colourmapping/ColorCurveSelector'\r\nimport ColorModelSelector from './gui/colourmapping/ColorModelSelector'\r\nimport ColorMapFolder from './gui/colourmapping/ColorMapFolder'\r\nimport MSAA from './gui/julia/MSAA'\r\n\r\nexport default function MyGUI() {\r\n  return (\r\n    <GUI>\r\n      <Folder title='Julia Variables'>\r\n        <Coefficients />\r\n        <Folder title='Constant Point'>\r\n          <ConstantPointX />\r\n          <ConstantPointY />\r\n        </Folder>\r\n        <MaxIterations />\r\n        <EscapeRadius />\r\n        <SmoothingToggle />\r\n        <MSAA />\r\n        <TimeScale />\r\n      </Folder>\r\n      <Folder title='Viewport'>\r\n        <Folder title='Dimensions'>\r\n          <ViewportWidth />\r\n          <ViewportHeight />\r\n        </Folder>\r\n        <Folder title='Translate'>\r\n          <TranslateX />\r\n          <TranslateY />\r\n        </Folder>\r\n        <LockAspectRatio />\r\n      </Folder>\r\n      <Folder title='Colour Mapping'>\r\n        <ColorMapFolder />\r\n        <ColorCurveSelector />\r\n        <ColorModelSelector />\r\n      </Folder>\r\n      <Folder title='Presets'></Folder>\r\n    </GUI>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useContext, useState } from 'react'\r\nimport { glDrawFrame } from '../webgl'\r\nimport { ShaderContext, contextToValueObject } from './ModelProvider'\r\nimport MyGUI from './MyGUI'\r\nimport { parseHexColor } from '../texture'\r\nimport { generateTextureData } from './../texture'\r\nimport { useWindowSize } from './Hooks'\r\n\r\nfunction scaleViewportByAspectRatio({ width, height }) {\r\n  function getOrientation() {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    return canvasWidth > canvasHeight ? 'landscape' : 'portrait'\r\n  }\r\n\r\n  function getAspectRatio(orientation) {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    // return early if 0 to avoid div by 0 errors\r\n    if (canvasHeight === 0 || canvasWidth === 0) return 1\r\n    if (orientation === 'landscape') {\r\n      return canvasWidth / canvasHeight\r\n    } else if (orientation === 'portrait') {\r\n      return canvasHeight / canvasWidth\r\n    }\r\n    // Fallback if orientation does not match one of two expected values\r\n    return 1\r\n  }\r\n\r\n  const canvasOrientation = getOrientation()\r\n  const aspectRatio = getAspectRatio(canvasOrientation)\r\n  // For landscape, width should not change\r\n  // For portrait, height should not change\r\n  if (canvasOrientation === 'landscape') {\r\n    height *= 1 / aspectRatio\r\n  } else if (canvasOrientation === 'portrait') {\r\n    width *= 1 / aspectRatio\r\n  }\r\n  return { width, height }\r\n}\r\n\r\nfunction useGlCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const canvasRef = useRef()\r\n  const setRef = ctx.canvasRef[1]\r\n  const setGl = ctx.gl[1]\r\n\r\n  useEffect(() => {\r\n    setRef(canvasRef.current)\r\n    setGl(canvasRef.current.getContext('webgl'))\r\n  }, [setRef, setGl, canvasRef])\r\n\r\n  return canvasRef\r\n}\r\n\r\nfunction useJuliaAnimation() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const animateRef = useRef()\r\n  const [frameCount, setFrameCount] = useState(0)\r\n  const [lastFrameTime, setLastFrameTime] = useState(0)\r\n  const paused = ctx.time.paused[0]\r\n  const gl = ctx.gl[0]\r\n\r\n  useEffect(() => {\r\n    // Define function to be run on every frame render\r\n    const animate = () => {\r\n      if (paused === false && gl !== null) {\r\n        setLastFrameTime(Date.now())\r\n        const glObj = contextToValueObject(ctx)\r\n        glDrawFrame(glObj)\r\n        setFrameCount(frameCount => frameCount + 1)\r\n      }\r\n      // The frame request runs itself recursively\r\n      animateRef.current = requestAnimationFrame(animate)\r\n    }\r\n\r\n    // Start frame requests\r\n    animateRef.current = requestAnimationFrame(animate)\r\n\r\n    // Return cleanup as callback\r\n    return () => cancelAnimationFrame(animateRef.current)\r\n  }, [ctx, paused, gl])\r\n\r\n  return [frameCount, lastFrameTime]\r\n}\r\n\r\nfunction useAspectRatioScaling() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  useEffect(() => {\r\n    const vp = scaleViewportByAspectRatio({ width, height })\r\n    setWidth(vp.width)\r\n    setHeight(vp.height)\r\n    // Effect can't fire when width/height changes, results in loop\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n}\r\n\r\nfunction useTextureBuilder() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [colorPoints] = ctx.color.colorPoints\r\n  const [curve] = ctx.color.curve\r\n  const [colorModel] = ctx.color.colorModel\r\n  const [, setTextureData] = ctx.color.textureData\r\n\r\n  useEffect(() => {\r\n    const cp = colorPoints.map(o => {\r\n      return {\r\n        color: parseHexColor(o.hex),\r\n        position: o.position,\r\n      }\r\n    })\r\n    const newTextureData = generateTextureData(cp, curve, colorModel)\r\n    setTextureData(newTextureData)\r\n  }, [colorPoints, curve, colorModel, setTextureData])\r\n}\r\n\r\nexport default function ShaderCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [lockAspectRatio] = ctx.viewport.lockAspectRatio\r\n  const [dragStart, setDragStart] = useState()\r\n\r\n  // Initialise canvas and webgl\r\n  const canvasRef = useGlCanvas()\r\n\r\n  // Build colour mapping texture\r\n  useTextureBuilder()\r\n\r\n  // Start rendering\r\n  const [frameCount, lastFrameTime] = useJuliaAnimation()\r\n\r\n  // Scale initial viewport size to respect aspect ratio\r\n  useAspectRatioScaling()\r\n\r\n  function startDrag(e) {\r\n    const loc = [e.clientX, e.clientY]\r\n    setDragStart(loc)\r\n  }\r\n\r\n  function endDrag(e) {\r\n    // Translate position values from the canvas to xy-coordinates on the grid\r\n    function canvasToGrid({ x, y }) {\r\n      const canvas = document.getElementsByClassName('glcanvas')[0]\r\n      const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n      const gridWidth = parseFloat(ctx.viewport.width[0])\r\n      const gridHeight = parseFloat(ctx.viewport.height[0])\r\n\r\n      const widthScale = gridWidth / canvasWidth\r\n      const heightScale = gridHeight / canvasHeight\r\n\r\n      const translateX = parseFloat(ctx.viewport.translate.x[0])\r\n      const translateY = parseFloat(ctx.viewport.translate.y[0])\r\n\r\n      const res = {\r\n        x: -gridWidth / 2 + x * widthScale + translateX,\r\n        y: -gridHeight / 2 + y * heightScale + translateY,\r\n      }\r\n\r\n      return res\r\n    }\r\n\r\n    function dragHasNoArea({ x1, x2, y1, y2 }) {\r\n      const width = Math.abs(x1 - x2)\r\n      const height = Math.abs(y1 - y2)\r\n\r\n      return width < 1 || height < 1\r\n    }\r\n\r\n    const setTranslateX = ctx.viewport.translate.x[1]\r\n    const setTranslateY = ctx.viewport.translate.y[1]\r\n    const setViewportWidth = ctx.viewport.width[1]\r\n    const setViewportHeight = ctx.viewport.height[1]\r\n\r\n    const dragEnd = [e.clientX, e.clientY]\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n    // Handle error where drags ended on an element other than the canvas\r\n    if (dragStart === undefined || dragEnd === undefined) {\r\n      return\r\n    }\r\n\r\n    // y values subtracted from canvas height to get correct locations\r\n    // canvas dimensions are measured from top left, need to start from bottom left\r\n    // as that's what our grid starts from\r\n    const dragBox = {\r\n      x1: dragStart[0],\r\n      x2: dragEnd[0],\r\n      y1: canvas.offsetHeight - dragStart[1],\r\n      y2: canvas.offsetHeight - dragEnd[1],\r\n    }\r\n\r\n    // Prevent clicks on one point zooming into an infinitely small area\r\n    if (dragHasNoArea(dragBox)) {\r\n      return\r\n    }\r\n\r\n    const dragCenterCanvas = { x: (dragBox.x1 + dragBox.x2) / 2, y: (dragBox.y1 + dragBox.y2) / 2 }\r\n    const dragCenterGrid = canvasToGrid(dragCenterCanvas)\r\n\r\n    setTranslateX(dragCenterGrid.x)\r\n    setTranslateY(dragCenterGrid.y)\r\n\r\n    // Scale current viewport size by ratio of drag box\r\n    const viewportWidth = parseFloat(ctx.viewport.width)\r\n    const viewportHeight = parseFloat(ctx.viewport.height)\r\n\r\n    const dragDimensions = { width: Math.abs(dragBox.x1 - dragBox.x2), height: Math.abs(dragBox.y1 - dragBox.y2) }\r\n    const dragViewport = {\r\n      width: viewportWidth * (dragDimensions.width / canvasWidth),\r\n      height: viewportHeight * (dragDimensions.height / canvasHeight),\r\n    }\r\n\r\n    if (lockAspectRatio === true) {\r\n      const newViewport = scaleViewportByAspectRatio(dragViewport)\r\n      setViewportWidth(newViewport.width)\r\n      setViewportHeight(newViewport.height)\r\n    } else {\r\n      setViewportWidth(dragViewport.width)\r\n      setViewportHeight(dragViewport.height)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        className='glcanvas'\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={startDrag}\r\n        onMouseUp={endDrag}\r\n        ref={canvasRef}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport './components/gui/gui.scss'\r\nimport ModelProvider from './components/ModelProvider'\r\nimport ShaderCanvas from './components/ShaderCanvas'\r\nimport MyGUI from './components/MyGUI';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <ModelProvider>\r\n        <ShaderCanvas />\r\n        <MyGUI />\r\n      </ModelProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}