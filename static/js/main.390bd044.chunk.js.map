{"version":3,"sources":["components/ModelProvider.js","webgl/math.js","webgl/color.js","webgl/julia.js","webgl.js","components/DebugFrame.js","components/ControlPanel/HelpTooltip.js","components/ControlPanel/LabelledField.js","components/ControlPanel/MaxIterations.js","components/ControlPanel/Translate.js","components/ControlPanel/CheckboxField.js","components/ControlPanel/Viewport.js","components/CollapsiblePanel.js","components/PauseButton.js","components/ControlPanel/CValue.js","components/PresetSaver.js","components/ControlPanel/JuliaSmoothing.js","components/ControlPanel/ControlPanel.js","components/ShaderCanvas.js","App.js","serviceWorker.js","index.js"],"names":["ShaderContext","React","createContext","ShaderProvider","Provider","isUseState","Consumer","item","Array","isArray","length","name","startsWith","hasSetState","contextToValueObject","obj","valuesObj","loadObjectIntoContext","ctx","setState","ModelProvider","children","initModelState","canvasRef","useState","gl","julia","c","x","y","complexPoly","escapeRadius","maxIterations","useSmoothing","viewport","width","height","translate","lockAspectRatio","colorMap","color","position","time","startedAt","Date","now","paused","lastPausedAt","pauseDuration","timeScale","value","math","buildFragCode","val","c1","c2","rgb","cValue","main","vertCode","vertices","indices","setUniforms","shaderProgram","escapeRadiusUniform","getUniformLocation","uniform1f","maxIterationsUniform","uniform1i","resolutionUniform","uniform2fv","startedAtUniform","secondsSinceStart","widthUniform","heightUniform","xTranslateUniform","yTranslateUniform","glDrawFrame","fragCode","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","bindVertices","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","bindIndices","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","useProgram","getShaderParameter","COMPILE_STATUS","logOutput","getShaderInfoLog","idxList","i","push","lineNumber","substring","console","log","split","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","drawElements","TRIANGLES","UNSIGNED_SHORT","alert","DebugFrame","frameCount","frameTime","className","HelpTooltip","hoverText","LabelledField","label","helpText","inputValue","setInputValue","onChange","event","target","MaxIterations","useContext","TranslateX","translateX","setTranslateX","TranslateY","translateY","setTranslateY","Translate","AspectRatioLock","type","checked","Width","setWidth","Height","setHeight","setValue","Viewport","PanelToggleButton","open","setOpen","onClick","CollapsiblePanel","styleClass","PauseButton","setPaused","setLastPausedAt","setPauseDuration","CValueX","CValueY","CValue","getPresetArray","presetArray","localStorage","getItem","JSON","parse","PresetSaver","selectedPreset","setSelectedPreset","presetName","setPresetName","presetsList","setPresetsList","updatePresetsList","presets","useEffect","e","map","key","presetObject","makePresetObject","array","preset","namedPresetExists","setItem","stringify","addPresetToArray","JuliaSmoothing","ControlPanel","Spacer","size","style","marginBottom","scaleViewportByAspectRatio","canvasOrientation","canvas","document","getElementsByClassName","offsetWidth","offsetHeight","getOrientation","aspectRatio","orientation","canvasWidth","canvasHeight","getAspectRatio","ShaderCanvas","dragStart","setDragStart","useRef","setRef","setGl","current","getContext","useGlCanvas","animateRef","setFrameCount","lastFrameTime","setLastFrameTime","requestAnimationFrame","animate","cancelAnimationFrame","useJuliaAnimation","vp","useAspectRatioScaling","onMouseDown","loc","clientX","clientY","onMouseUp","setViewportWidth","setViewportHeight","dragEnd","dragBox","x1","x2","y1","y2","dragCenterCanvas","dragCenterGrid","gridWidth","parseFloat","gridHeight","heightScale","canvasToGrid","viewportWidth","viewportHeight","dragViewport","Math","abs","newViewport","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.390bd044.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const ShaderContext = React.createContext()\r\nexport const ShaderProvider = ShaderContext.Provider\r\nexport const ShaderConsumer = ShaderContext.Consumer\r\n\r\n/*\r\n  Take object from context and extract the values for each setState array\r\n  Recurse down if possilble and maintain k:v structure\r\n*/\r\n\r\n// Check to see if array has useState set function within\r\nconst hasSetState = item => {\r\n  return typeof item[1] === 'function' && item[1].name.startsWith('bound ')\r\n}\r\n\r\n// Is the item a useState array?\r\n// Perform checks on requirements for hasSetState beforehand\r\nconst isUseState = item => {\r\n  return Array.isArray(item) && item.length === 2 && hasSetState(item)\r\n}\r\n\r\n// Keeps object structure, but converts [state, setState]\r\n// Arrays to just the state value\r\nexport function contextToValueObject(obj) {\r\n  const valuesObj = {}\r\n  for (let item in obj) {\r\n    if (isUseState(obj[item])) {\r\n      valuesObj[item] = obj[item][0]\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      valuesObj[item] = contextToValueObject(obj[item])\r\n    }\r\n  }\r\n\r\n  return valuesObj\r\n}\r\n\r\n// Inverse of contextToValueObject\r\n// Takes an object and attempts to move values from\r\n// it into context's state through setState\r\nexport function loadObjectIntoContext(obj, ctx) {\r\n  for (const item in obj) {\r\n    if (isUseState(ctx[item])) {\r\n      // Call setState in ctx for each key in obj\r\n      const setState = ctx[item][1]\r\n      setState(obj[item])\r\n    } else {\r\n      // TODO: Add check on recursion case\r\n      // Function seems to be recursing into DOM refs\r\n      // leading to stack overflows (only when deployed)\r\n      loadObjectIntoContext(obj[item], ctx[item])\r\n    }\r\n  }\r\n}\r\n\r\nfunction ModelProvider({ children }) {\r\n  /*\r\n  Ints are not implictly cast to floats in WebGL, any value which is passed to\r\n  WebGL code for use as a float must contain a decimal point\r\n\r\n  This function appends a period to any int to avoid type errors once it's passed\r\n  into WebGL code\r\n*/\r\n  function useWebGlState(initValue) {\r\n    const [value, setValue] = useState(initValue)\r\n\r\n    // Returns the state value with problematic ints converted to floats\r\n    function fixedFloats() {\r\n      const intRegex = new RegExp('^(\\\\+|-)?\\\\d+$')\r\n\r\n      const trimmed = value.trim()\r\n\r\n      // Case 1: plain int\r\n      if (intRegex.test(trimmed)) {\r\n        return trimmed.concat('.')\r\n      }\r\n\r\n      // TODO: Case 2: equation string\r\n\r\n      return trimmed\r\n    }\r\n\r\n    return [value, setValue, fixedFloats]\r\n  }\r\n\r\n  const initModelState = {\r\n    canvasRef: useState(null), // Canvas element used for rendering the fractal\r\n    gl: useState(null), // WebGL context of the canvas\r\n    julia: {\r\n      c: {\r\n        x: useState('0.2'),\r\n        y: useState('sin(u_time)'),\r\n      },\r\n      complexPoly: useState('z^2 + c'), // Complex Quadratic Polynomial\r\n      escapeRadius: useState('4.0'), // TODO: Does this stay constant for every polynomial?\r\n      maxIterations: useState('100'),\r\n      useSmoothing: useState(true),\r\n    },\r\n    viewport: {\r\n      width: useState('4.5'),\r\n      height: useState('4.5'),\r\n      translate: {\r\n        x: useState('0.'),\r\n        y: useState('0.'),\r\n      },\r\n      lockAspectRatio: useState(true),\r\n    },\r\n    colorMap: [\r\n      { color: useState([6, 0.1, 0.7]), position: useState(0) },\r\n      { color: useState([1, 0.9, 0]), position: useState(1) },\r\n    ],\r\n    time: {\r\n      startedAt: useState(Date.now()),\r\n      paused: useState(false),\r\n      lastPausedAt: useState(0),\r\n      pauseDuration: useState(0),\r\n      timeScale: useState('0.3'),\r\n    },\r\n  }\r\n\r\n  return <ShaderProvider value={initModelState}>{children}</ShaderProvider>\r\n}\r\n\r\nModelProvider.propTypes = {}\r\n\r\nexport default ModelProvider\r\n","//\r\n// MATHEMATICAL CONSTANTS\r\n//\r\nconst mathConstants = `\r\n#define PI 3.14159265359\r\n#define TAU 6.28318530718\r\n`\r\n\r\n//\r\n// COMPLEX NUMBER OPERATIONS\r\n// Source: https://gist.github.com/NiklasRosenstein/ee1f1b5786f94e17995361c63dafeb3f\r\n//\r\nconst complexConjug = `\r\nvec2 complexConjug(in vec2 c) { \r\n  return vec2(c.x, -c.y); \r\n}\r\n`\r\n\r\nconst complexMult = `\r\nvec2 complexMult(in vec2 a, in vec2 b) {\r\n  return vec2(a.x * b.x - a.y * b.y, a.y * b.x + a.x * b.y);\r\n}\r\n`\r\n\r\nconst complexDiv = `\r\nvec2 complexDiv(in vec2 a, in vec2 b) {\r\n  return complexMult(a, complexConjug(b));\r\n}\r\n`\r\n\r\nconst complexMag = `\r\nfloat complexMag(in vec2 c) { \r\n  return sqrt(c.x * c.x + c.y * c.y); \r\n}\r\n`\r\n\r\nconst complexAdd = `\r\nvec2 complexAdd(vec2 z1, vec2 z2) { \r\n  return vec2(z1.x + z2.x, z1.y + z2.y); \r\n}\r\n`\r\n\r\n// See http://mathworld.wolfram.com/ComplexExponentiation.html\r\n// Raises a complex number to the power of a second complex number\r\n// Use vec2(x, 0) as second parameter to raise by only a real\r\nconst complexPower = `\r\nvec2 complexPower(vec2 z1, vec2 z2) {\r\n  float a2b2 = z1.x * z1.x + z1.y * z1.y;\r\n  float t1 = pow(a2b2, z2.x / 2.) * exp(-z2.y * atan(z1.y, z1.x));\r\n  float t2 = z2.x * atan(z1.y, z1.x) + .5 * z2.y * log(a2b2);\r\n  return vec2(t1 * cos(t2), t1 * sin(t2));\r\n}\r\n`\r\n\r\nexport const math = `\r\n${mathConstants}\r\n${complexConjug}\r\n${complexMult}\r\n${complexDiv}\r\n${complexMag}\r\n${complexPower}\r\n${complexAdd}\r\n`","//\r\n// color SPACE FUNCTIONS\r\n//\r\nconst hsv2rgb = `\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec4 K = vec4(1., 2. / 3., 1. / 3., 3.);\r\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6. - K.www);\r\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0., 1.), c.y);\r\n}\r\n`\r\n\r\n//\r\n// JULIA ITERATIONS HSV colorING FUNCTIONS\r\n//\r\nconst huefn = `\r\nfloat huefn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .1 + 5.6*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst satfn = `\r\nfloat satfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .7 + 1.*(iterations / max_iter);\r\n}\r\n`\r\n\r\nconst valfn = `\r\nfloat valfn(float iterations) {\r\n  float max_iter = float(maxIterations);\r\n  return .7 + 1.*(iterations / max_iter);\r\n}\r\n`\r\n\r\nexport const color = `\r\n${hsv2rgb}\r\n${huefn}\r\n${satfn}\r\n${valfn}\r\n`\r\n","import { math } from './math'\r\nimport { color } from './color'\r\n\r\n// GLSL 'for' loops can only be indexed up to a constant value\r\n// Passing in the max iteration count through a uniform encounters an error\r\n// Therefore this function constructs a constant value definition\r\nfunction maxIterations(val) {\r\n  return `#define maxIterations ${val}`\r\n}\r\n\r\nfunction cValue({ x, y }) {\r\n  return `vec2 c = vec2(${x}, ${y});`\r\n}\r\n\r\nfunction viewport({ width, height, translate }) {\r\n  return `\r\n  float XSIZE = ${width};\r\n  float YSIZE = ${height};\r\n  float XT = ${translate.x};\r\n  float YT = ${translate.y};\r\n  `\r\n}\r\n\r\nfunction colorMap(c1, c2) {\r\n  const rgb = c => `vec3(${c[0]}, ${c[1]}, ${c[2]})`\r\n  return `\r\n  float mapCurve(float percent) {\r\n    float x = abs(cos(20.*3.14*percent));\r\n    return x;\r\n  }\r\n\r\n  vec3 colorMap(float percent) {\r\n    vec3 c1 = ${rgb(c1)};\r\n    vec3 c2 = ${rgb(c2)};\r\n    float curve = mapCurve(percent);\r\n    return c1 * (1. - curve) + c2 * curve;\r\n  }\r\n  `\r\n}\r\n\r\nconst uniforms = `\r\nuniform float u_escapeRadius;\r\n\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\nuniform float u_width;\r\nuniform float u_height;\r\nuniform float u_translatex;\r\nuniform float u_translatey;\r\n`\r\n\r\nconst headers = `\r\nprecision highp float;\r\n`\r\n\r\n//\r\n// JULIA ITERATION FUNCTIONS\r\n//\r\nconst julia = ctx => `\r\nvec3 julia(vec2 z, vec2 c) {\r\n  float result;\r\n  int iters = 0;\r\n\r\n  for (int i = 0; i <= maxIterations; i++) {\r\n    z = complexPower(z, vec2(2, 0));\r\n    z = complexAdd(z, c);\r\n    iters = i;\r\n    if (complexMag(z) > u_escapeRadius) break;\r\n  }\r\n\r\n  if (iters == maxIterations) {\r\n    return vec3(0, 0, 0);\r\n  } else {\r\n    ${ctx.julia.useSmoothing ? 'result = smoothIterations(z, iters);' : 'result = float(iters);'}\r\n  }\r\n\r\n  float percent = result/float(maxIterations);\r\n\r\n  float hue = huefn(result);\r\n  float sat = satfn(result);\r\n  float val = valfn(result);\r\n\r\n  //return colorMap(percent);\r\n\r\n  return hsv2rgb(vec3(hue, sat, val));\r\n}\r\n`\r\n\r\n// Smooth coloring function\r\n// http://linas.org/art-gallery/escape/escape.html\r\n// https://en.wikipedia.org/wiki/Mandelbrot_set#Continuous_(smooth)_coloring\r\nconst smoothIterations = `\r\nfloat smoothIterations(vec2 z, int iterations) {\r\n  // sqrt of inner term removed using log simplification rules.\r\n  // sqrt is equivilent to raising to power 0.5 therefore dividing\r\n  // by 2 or multiplying by 0.5 avoids an inefficient sqrt calculation\r\n  float log_zn = log(z.x * z.x + z.y * z.y) / 2.;\r\n  float nu = log(log_zn / log(2.)) / log(2.);\r\n  // Rearranging the potential function.\r\n  // Dividing log_zn by log(2) instead of log(N = 1<<8)\r\n  // because we want the entire palette to range from the\r\n  // center to radius 2, NOT our bailout radius.\r\n  return float(iterations) + 1. - nu;\r\n}\r\n`\r\n\r\n//\r\n// JULIA MAIN FUNCTION\r\n//\r\nconst main = ctx => `\r\nvoid main(void) {\r\n  ${viewport(ctx.viewport)}\r\n\r\n  ${cValue(ctx.julia.c)}\r\n\r\n  // Normalized pixel coordinates (from 0 to 1)\r\n  vec2 uv = gl_FragCoord.xy / u_resolution.xy;\r\n\r\n  vec2 z;\r\n  z.x = (XSIZE * (uv.x - .5)) + XT;\r\n  z.y = (YSIZE * (uv.y - .5)) + YT;\r\n\r\n  vec3 col = julia(z, c);\r\n  gl_FragColor = vec4(col, 1.);\r\n}\r\n`\r\n\r\nexport const buildFragCode = ctx => `\r\n${headers}\r\n${maxIterations(ctx.julia.maxIterations)}\r\n${uniforms}\r\n${colorMap(ctx.colorMap[0].color, ctx.colorMap[1].color)}\r\n${math}\r\n${color}\r\n${smoothIterations}\r\n${julia(ctx)}\r\n${main(ctx)}\r\n`\r\n\r\nexport const vertCode = `\r\nattribute vec3 coordinates;\r\n\r\nvoid main(void) {\r\n  gl_Position = vec4(coordinates, 1.0);\r\n}\r\n`\r\n","import { buildFragCode, vertCode } from './webgl/julia'\r\n\r\n//\r\n// WebGL initialisation and render loop\r\n// Code adapted from https://observablehq.com/@tomktjemsland/simple-webgl\r\n//\r\n\r\n// Define a square composed of two triangles\r\nconst vertices = [-1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 1.0, -1.0, 0.0, 1.0, 1.0, 0.0]\r\n// Index vertices in groups of 3\r\nconst indices = [3, 2, 1, 3, 1, 0]\r\n\r\nfunction bindVertices(gl) {\r\n  // Create an empty buffer object to store vertex buffer\r\n  const vertexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n\r\n  return vertexBuffer\r\n}\r\n\r\nfunction bindIndices(gl) {\r\n  // Create an empty buffer object to store Index buffer\r\n  const indexBuffer = gl.createBuffer()\r\n  // Bind appropriate array buffer to it\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n  // Pass the vertex data to the buffer\r\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\r\n  // Unbind the buffer\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\r\n\r\n  return indexBuffer\r\n}\r\n\r\nfunction createProgram(gl, fragCode) {\r\n  // Create a vertex shader object\r\n  const vertShader = gl.createShader(gl.VERTEX_SHADER)\r\n\r\n  // Attach vertex shader source code\r\n  gl.shaderSource(vertShader, vertCode)\r\n\r\n  // Compile the vertex shader\r\n  gl.compileShader(vertShader)\r\n\r\n  // Create fragment shader object\r\n  const fragShader = gl.createShader(gl.FRAGMENT_SHADER)\r\n\r\n  // Attach fragment shader source code\r\n  gl.shaderSource(fragShader, fragCode)\r\n\r\n  // Compile the fragmentt shader\r\n  gl.compileShader(fragShader)\r\n\r\n  // Create a shader program object to\r\n  // store the combined shader program\r\n  const shaderProgram = gl.createProgram()\r\n\r\n  // Attach a vertex shader\r\n  gl.attachShader(shaderProgram, vertShader)\r\n\r\n  // Attach a fragment shader\r\n  gl.attachShader(shaderProgram, fragShader)\r\n\r\n  // Link both the programs\r\n  gl.linkProgram(shaderProgram)\r\n\r\n  // Use the combined shader program object\r\n  gl.useProgram(shaderProgram)\r\n\r\n  if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\r\n    const logOutput = gl.getShaderInfoLog(fragShader)\r\n\r\n    // Extract line of error from log and print that line of the frag shader code\r\n    let idxList = []\r\n    for (let i = 0; i < logOutput.length; i++) {\r\n      if (logOutput[i] === ':') {\r\n        idxList.push(i)\r\n      }\r\n    }\r\n\r\n    // Line number exists between second and third colons\r\n    const lineNumber = logOutput.substring(idxList[1] + 1, idxList[2])\r\n\r\n    console.log(fragCode.split('\\n')[lineNumber - 1])\r\n  }\r\n\r\n  if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\r\n    console.log(gl.getShaderInfoLog(vertShader))\r\n  }\r\n\r\n  return shaderProgram\r\n}\r\n\r\nfunction setUniforms(shaderProgram, ctx) {\r\n  const { canvasRef, gl, julia, time, viewport } = ctx\r\n  const { escapeRadius, maxIterations } = julia\r\n\r\n  const escapeRadiusUniform = gl.getUniformLocation(shaderProgram, 'u_escapeRadius')\r\n  gl.uniform1f(escapeRadiusUniform, escapeRadius)\r\n\r\n  const maxIterationsUniform = gl.getUniformLocation(shaderProgram, 'u_maxIterations')\r\n  gl.uniform1i(maxIterationsUniform, maxIterations)\r\n\r\n  const resolutionUniform = gl.getUniformLocation(shaderProgram, 'u_resolution')\r\n  gl.uniform2fv(resolutionUniform, [canvasRef.width, canvasRef.height])\r\n\r\n  const startedAtUniform = gl.getUniformLocation(shaderProgram, 'u_time')\r\n  const secondsSinceStart = (getMillisElapsed(time.startedAt, time.pauseDuration) / 1000) * time.timeScale\r\n  gl.uniform1f(startedAtUniform, secondsSinceStart)\r\n\r\n  const widthUniform = gl.getUniformLocation(shaderProgram, 'u_width')\r\n  gl.uniform1f(widthUniform, viewport.width)\r\n\r\n  const heightUniform = gl.getUniformLocation(shaderProgram, 'u_height')\r\n  gl.uniform1f(heightUniform, viewport.height)\r\n\r\n  const xTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatex')\r\n  gl.uniform1f(xTranslateUniform, viewport.translate.x)\r\n\r\n  const yTranslateUniform = gl.getUniformLocation(shaderProgram, 'u_translatey')\r\n  gl.uniform1f(yTranslateUniform, viewport.translate.y)\r\n}\r\n\r\nfunction getMillisElapsed(startedAt, pauseDuration) {\r\n  return Date.now() - startedAt - pauseDuration\r\n}\r\n\r\nexport function glDrawFrame(ctx) {\r\n  const { canvasRef, gl } = ctx\r\n\r\n  // Only continue if WebGL is available and working\r\n  if (gl === null) {\r\n    alert('Unable to initialize WebGL. Your browser or machine may not support it.')\r\n    return\r\n  }\r\n\r\n  // Construct the final version of the fragment shader code\r\n  const fragCode = buildFragCode(ctx)\r\n\r\n  const vertexBuffer = bindVertices(gl)\r\n  const indexBuffer = bindIndices(gl)\r\n  const shaderProgram = createProgram(gl, fragCode)\r\n  setUniforms(shaderProgram, ctx)\r\n\r\n  /*======= Associating shaders to buffer objects =======*/\r\n  // Bind vertex buffer object\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n\r\n  // Bind index buffer object\r\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n\r\n  // Get the attribute location\r\n  const coord = gl.getAttribLocation(shaderProgram, 'coordinates')\r\n\r\n  // Point an attribute to the currently bound VBO\r\n  gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0)\r\n\r\n  // Enable the attribute\r\n  gl.enableVertexAttribArray(coord)\r\n\r\n  /*============= Drawing the Quad ================*/\r\n  // Clear the canvas\r\n  gl.clearColor(0, 0, 0, 1)\r\n\r\n  // Enable the depth test\r\n  gl.enable(gl.DEPTH_TEST)\r\n\r\n  // Clear the color buffer bit\r\n  gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n  // Set the view port\r\n  gl.viewport(0, 0, canvasRef.width, canvasRef.height)\r\n\r\n  // Draw the triangles\r\n  gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function DebugFrame({frameCount, frameTime}) {\r\n\r\n  return (\r\n    <div className='frametime'>\r\n      <p>Frames: {frameCount}</p>\r\n      <p>Frametime: {frameTime}ms</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HelpTooltip({hoverText}) {\r\n  return (\r\n    <div className='tooltip'>\r\n      <span className='tooltip-text'>{hoverText}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport HelpTooltip from './HelpTooltip'\r\n\r\nexport default function LabelledField({ label, helpText, inputValue, setInputValue }) {\r\n  function handleChange(event) {\r\n    setInputValue(event.target.value)\r\n    inputValue = event.target.value\r\n  }\r\n\r\n  return (\r\n    <div className='field-container'>\r\n      <span className='panel-label'>{label}</span>\r\n      {helpText ? <HelpTooltip hoverText={helpText} /> : null}\r\n      <input className='panel-input' name={label} value={inputValue} onChange={handleChange} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../ModelProvider'\r\nimport LabelledField from './LabelledField'\r\n\r\nexport default function MaxIterations() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.maxIterations\r\n\r\n  const helpText = 'Max iterations'\r\n\r\n  return <LabelledField label='Max Iterations' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './../ModelProvider'\r\nimport LabelledField from './LabelledField'\r\n\r\nfunction TranslateX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [translateX, setTranslateX] = ctx.viewport.translate.x\r\n\r\n  const helpText = 'Translate x'\r\n\r\n  return <LabelledField label='Translate X' helpText={helpText} inputValue={translateX} setInputValue={setTranslateX} />\r\n}\r\n\r\nfunction TranslateY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [translateY, setTranslateY] = ctx.viewport.translate.y\r\n\r\n  const helpText = 'Translate y'\r\n\r\n  return <LabelledField label='Translate Y' helpText={helpText} inputValue={translateY} setInputValue={setTranslateY} />\r\n}\r\n\r\nexport default function Translate() {\r\n  return (\r\n    <>\r\n      <TranslateX />\r\n      <TranslateY />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport HelpTooltip from './HelpTooltip'\r\n\r\nexport default function AspectRatioLock({ label, helpText, inputValue, setInputValue }) {\r\n  function toggle() {\r\n    if (inputValue === false) {\r\n      setInputValue(true)\r\n    } else {\r\n      setInputValue(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='field-container'>\r\n      <span className='panel-label'>{label}</span>\r\n      {helpText ? <HelpTooltip hoverText={helpText} /> : null}\r\n      <input className='panel-input' type='checkbox' name={label} checked={inputValue} onChange={toggle} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport Translate from './Translate'\r\nimport { ShaderContext } from '../ModelProvider'\r\nimport LabelledField from './LabelledField'\r\nimport CheckboxField from './CheckboxField'\r\n\r\nfunction Width() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n\r\n  const helpText = 'Viewport width'\r\n\r\n  return <LabelledField label='Viewport Width' helpText={helpText} inputValue={width} setInputValue={setWidth} />\r\n}\r\n\r\nfunction Height() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  const helpText = 'Viewport height'\r\n\r\n  return <LabelledField label='Viewport Height' helpText={helpText} inputValue={height} setInputValue={setHeight} />\r\n}\r\n\r\nfunction AspectRatioLock() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.viewport.lockAspectRatio\r\n\r\n  const label = 'Lock aspect ratio'\r\n  const helpText = 'Toggle viewport aspect ratio locking'\r\n\r\n  return <CheckboxField label={label} helpText={helpText} inputValue={value} setInputValue={setValue} />\r\n}\r\n\r\nexport default function Viewport() {\r\n  return (\r\n    <>\r\n      <Width />\r\n      <Height />\r\n      <Translate />\r\n      <AspectRatioLock />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nfunction PanelToggleButton({open, setOpen}) {\r\n\r\n\r\n  function togglePanel(event) {\r\n    if (open === true) {\r\n      setOpen(false)\r\n    } else if (open === false) {\r\n      setOpen(true)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <button onClick={togglePanel} className='panel-toggle'>{open ? '<<<' : '>>>'}</button>\r\n  )\r\n}\r\n\r\nexport default function CollapsiblePanel({children, styleClass}) {\r\n  const [open, setOpen] = useState(true)\r\n\r\n\r\n  return (\r\n    <div className={`${styleClass} panel ${open ? 'panel-open' : 'panel-closed'}`} >\r\n      <PanelToggleButton open={open} setOpen={setOpen}/>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from './ModelProvider'\r\n\r\nexport default function PauseButton() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [paused, setPaused] = ctx.time.paused\r\n  const [lastPausedAt, setLastPausedAt] = ctx.time.lastPausedAt\r\n  const [, setPauseDuration] = ctx.time.pauseDuration\r\n\r\n  function pause() {\r\n    setPaused(true)\r\n    setLastPausedAt(Date.now())\r\n  }\r\n\r\n  function resume() {\r\n    setPaused(false)\r\n    setPauseDuration(pauseDuration => pauseDuration + (Date.now() - lastPausedAt))\r\n  }\r\n\r\n  function togglePause() {\r\n    if (paused === true) {\r\n      resume()\r\n    } else if (paused === false) {\r\n      pause()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button onClick={togglePause} className='pause-button'>\r\n      {paused ? 'Resume' : 'Pause'}\r\n    </button>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { ShaderContext } from '../ModelProvider'\r\nimport LabelledField from './LabelledField'\r\n\r\nfunction CValueX() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.c.x\r\n\r\n  const helpText = 'C value x'\r\n\r\n  return <LabelledField label='C Y' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n}\r\n\r\nfunction CValueY() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [inputValue, setInputValue] = ctx.julia.c.y\r\n\r\n  const helpText = 'C value y'\r\n\r\n  return <LabelledField label='C X' helpText={helpText} inputValue={inputValue} setInputValue={setInputValue} />\r\n}\r\n\r\nexport default function CValue() {\r\n  return (\r\n    <>\r\n      <CValueX />\r\n      <CValueY />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { contextToValueObject, ShaderContext, loadObjectIntoContext } from './ModelProvider'\r\nimport LabelledField from './ControlPanel/LabelledField'\r\n\r\nfunction makePresetObject(name, ctx) {\r\n  const julia = contextToValueObject(ctx.julia)\r\n  const viewport = contextToValueObject(ctx.viewport)\r\n  return {\r\n    name,\r\n    julia,\r\n    viewport\r\n  }\r\n}\r\n\r\nfunction namedPresetExists(name) {\r\n  const array = getPresetArray()\r\n  for (const preset in array) {\r\n    if (preset.name === name) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nfunction getPresetArray() {\r\n  const presetArray = localStorage.getItem('presets')\r\n  return presetArray ? JSON.parse(presetArray) : []\r\n}\r\n\r\nfunction addPresetToArray(preset) {\r\n  const array = getPresetArray()\r\n  array.push(preset)\r\n  localStorage.setItem('presets', JSON.stringify(array))\r\n}\r\n\r\nexport default function PresetSaver() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [selectedPreset, setSelectedPreset] = useState('')\r\n  const [presetName, setPresetName] = useState('')\r\n  const [presetsList, setPresetsList] = useState([])\r\n\r\n  const updatePresetsList = () => {\r\n    const presets = getPresetArray()\r\n    setPresetsList(presets)\r\n  }\r\n\r\n  function savePreset() {\r\n    const presetObject = makePresetObject(presetName, ctx)\r\n    if (namedPresetExists(presetObject)) {\r\n      // TODO: ask to overwrite\r\n    }\r\n    addPresetToArray(presetObject)\r\n    updatePresetsList()\r\n  }\r\n\r\n  function loadPreset() {\r\n    const presetArray = getPresetArray()\r\n    // TODO: access presetArray by key identifier\r\n    for (const i in presetArray) {\r\n      const preset = presetArray[i]\r\n      if (preset.name === selectedPreset) {\r\n        loadObjectIntoContext(preset.julia, ctx.julia)\r\n        loadObjectIntoContext(preset.viewport, ctx.viewport)\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateSelection(e) {\r\n    setSelectedPreset(e.target.value)\r\n  }\r\n\r\n  // Initial select element population\r\n  useEffect(() => {\r\n    updatePresetsList()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <LabelledField label='Preset name' inputValue={presetName} setInputValue={setPresetName} />\r\n      <select value={selectedPreset} onChange={updateSelection} className='panel-input preset-selector'>\r\n        {presetsList.length === 0 ? <option>No presets saved</option> : null}\r\n        {presetsList.map(item => {\r\n          return (\r\n            <option key={item.name} value={item.name}>\r\n              {item.name}\r\n            </option>\r\n          )\r\n        })}\r\n      </select>\r\n      <button className='panel-input' onClick={savePreset}>\r\n        Save\r\n      </button>\r\n      <button className='panel-input' onClick={loadPreset}>\r\n        Load\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport CheckboxField from './CheckboxField'\r\nimport { ShaderContext } from './../ModelProvider';\r\n\r\nexport default function JuliaSmoothing() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [value, setValue] = ctx.julia.useSmoothing\r\n\r\n  const label = 'Julia smoothing'\r\n  const helpText = 'Toggle Julia iteration smoothing'\r\n\r\n  return <CheckboxField label={label} helpText={helpText} inputValue={value} setInputValue={setValue} />\r\n}\r\n","import React from 'react'\r\nimport MaxIterations from './MaxIterations'\r\nimport Viewport from './Viewport'\r\nimport ComplexPoly from './ComplexPoly'\r\nimport CollapsiblePanel from '../CollapsiblePanel'\r\nimport PauseButton from '../PauseButton'\r\nimport CValue from './CValue'\r\nimport PresetSaver from '../PresetSaver'\r\nimport ColorMap from './ColorMap'\r\nimport JuliaSmoothing from './JuliaSmoothing'\r\n\r\nfunction ControlPanel({ children }) {\r\n  function Spacer({ size }) {\r\n    return <div style={{ marginBottom: size }} />\r\n  }\r\n  // TODO: Convert integer field values to glsl floats\r\n\r\n  return (\r\n    <CollapsiblePanel styleClass='control-panel'>\r\n      <PresetSaver />\r\n      <Spacer size='3em' />\r\n      <p className='field-container'>Drag a box on the canvas to zoom to that area</p>\r\n      <p className='field-container'>Integers must be followed by a period to avoid compiliation errors</p>\r\n      <Spacer size='3em' />\r\n      <MaxIterations />\r\n      <JuliaSmoothing />\r\n      <Spacer size='3em' />\r\n      <Viewport />\r\n      <Spacer size='3em' />\r\n      <CValue />\r\n      {/* <ComplexPoly />\r\n      <Spacer size='3em' />\r\n      <ColorMap /> */}\r\n      <Spacer size='3em' />\r\n      <PauseButton />\r\n      {children}\r\n    </CollapsiblePanel>\r\n  )\r\n}\r\n\r\nexport default ControlPanel\r\n","import React, { useRef, useEffect, useContext, useState } from 'react'\r\nimport { glDrawFrame } from '../webgl'\r\nimport { ShaderContext, contextToValueObject } from './ModelProvider'\r\nimport DebugFrame from './DebugFrame'\r\nimport ControlPanel from './ControlPanel/ControlPanel'\r\n\r\nfunction scaleViewportByAspectRatio({ width, height }) {\r\n  function getOrientation() {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    return canvasWidth > canvasHeight ? 'landscape' : 'portrait'\r\n  }\r\n\r\n  function getAspectRatio(orientation) {\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n    // return early if 0 to avoid div by 0 errors\r\n    if (canvasHeight === 0 || canvasWidth === 0) return 1\r\n    if (orientation === 'landscape') {\r\n      return canvasWidth / canvasHeight\r\n    } else if (orientation === 'portrait') {\r\n      return canvasHeight / canvasWidth\r\n    }\r\n    // Fallback if orientation does not match one of two expected values\r\n    return 1\r\n  }\r\n\r\n  const canvasOrientation = getOrientation()\r\n  const aspectRatio = getAspectRatio(canvasOrientation)\r\n  // For landscape, width should not change\r\n  // For portrait, height should not change\r\n  if (canvasOrientation === 'landscape') {\r\n    height *= 1 / aspectRatio\r\n  } else if (canvasOrientation === 'portrait') {\r\n    width *= 1 / aspectRatio\r\n  }\r\n  return { width, height }\r\n}\r\n\r\nfunction useGlCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const canvasRef = useRef()\r\n  const setRef = ctx.canvasRef[1]\r\n  const setGl = ctx.gl[1]\r\n\r\n  useEffect(() => {\r\n    setRef(canvasRef.current)\r\n    setGl(canvasRef.current.getContext('webgl'))\r\n  }, [setRef, setGl, canvasRef])\r\n\r\n  return canvasRef\r\n}\r\n\r\nfunction useJuliaAnimation() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const animateRef = useRef()\r\n  const [frameCount, setFrameCount] = useState(0)\r\n  const [lastFrameTime, setLastFrameTime] = useState(0)\r\n  const paused = ctx.time.paused[0]\r\n  const gl = ctx.gl[0]\r\n\r\n  useEffect(() => {\r\n    // Define function to be run on every frame render\r\n    const animate = () => {\r\n      if (paused === false && gl !== null) {\r\n        setLastFrameTime(Date.now())\r\n        const glObj = contextToValueObject(ctx)\r\n        glDrawFrame(glObj)\r\n        setFrameCount(frameCount => frameCount + 1)\r\n      }\r\n      // The frame request runs itself recursively\r\n      animateRef.current = requestAnimationFrame(animate)\r\n    }\r\n\r\n    // Start frame requests\r\n    animateRef.current = requestAnimationFrame(animate)\r\n\r\n    // Return cleanup as callback\r\n    return () => cancelAnimationFrame(animateRef.current)\r\n  }, [ctx, paused, gl])\r\n\r\n  return [frameCount, lastFrameTime]\r\n}\r\n\r\nfunction useAspectRatioScaling() {\r\n  const ctx = useContext(ShaderContext)\r\n  const [width, setWidth] = ctx.viewport.width\r\n  const [height, setHeight] = ctx.viewport.height\r\n\r\n  useEffect(() => {\r\n    const vp = scaleViewportByAspectRatio({ width, height })\r\n    setWidth(vp.width)\r\n    setHeight(vp.height)\r\n    // Effect can't fire when width/height changes, results in loop\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n}\r\n\r\nexport default function ShaderCanvas() {\r\n  const ctx = useContext(ShaderContext)\r\n\r\n  const [lockAspectRatio] = ctx.viewport.lockAspectRatio\r\n  const [dragStart, setDragStart] = useState()\r\n\r\n  // Initialise canvas and webgl\r\n  const canvasRef = useGlCanvas()\r\n\r\n  // Start rendering\r\n  const [frameCount, lastFrameTime] = useJuliaAnimation()\r\n\r\n  // Scale initial viewport size to respect aspect ratio\r\n  useAspectRatioScaling()\r\n\r\n  function startDrag(e) {\r\n    const loc = [e.clientX, e.clientY]\r\n    console.log('drag start: ' + loc)\r\n    setDragStart(loc)\r\n  }\r\n\r\n  function endDrag(e) {\r\n    // Translate position values from the canvas to xy-coordinates on the grid\r\n    function canvasToGrid({ x, y }) {\r\n      const canvas = document.getElementsByClassName('glcanvas')[0]\r\n      const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n      const gridWidth = parseFloat(ctx.viewport.width[0])\r\n      const gridHeight = parseFloat(ctx.viewport.height[0])\r\n\r\n      const widthScale = gridWidth / canvasWidth\r\n      const heightScale = gridHeight / canvasHeight\r\n\r\n      const translateX = parseFloat(ctx.viewport.translate.x[0])\r\n      const translateY = parseFloat(ctx.viewport.translate.y[0])\r\n\r\n      const res = {\r\n        x: -gridWidth / 2 + x * widthScale + translateX,\r\n        y: -gridHeight / 2 + y * heightScale + translateY,\r\n      }\r\n\r\n      return res\r\n    }\r\n\r\n    const setTranslateX = ctx.viewport.translate.x[1]\r\n    const setTranslateY = ctx.viewport.translate.y[1]\r\n    const setViewportWidth = ctx.viewport.width[1]\r\n    const setViewportHeight = ctx.viewport.height[1]\r\n\r\n    const dragEnd = [e.clientX, e.clientY]\r\n    const canvas = document.getElementsByClassName('glcanvas')[0]\r\n    const [canvasWidth, canvasHeight] = [canvas.offsetWidth, canvas.offsetHeight]\r\n\r\n    // y values subtracted from canvas height to get correct locations\r\n    // canvas dimensions are measured from top left, need to start from bottom left\r\n    // as that's what our grid starts from\r\n    const dragBox = {\r\n      x1: dragStart[0],\r\n      x2: dragEnd[0],\r\n      y1: canvas.offsetHeight - dragStart[1],\r\n      y2: canvas.offsetHeight - dragEnd[1],\r\n    }\r\n    console.log(dragBox)\r\n    const dragCenterCanvas = { x: (dragBox.x1 + dragBox.x2) / 2, y: (dragBox.y1 + dragBox.y2) / 2 }\r\n    console.log(dragCenterCanvas)\r\n    const dragCenterGrid = canvasToGrid(dragCenterCanvas)\r\n\r\n    setTranslateX(dragCenterGrid.x)\r\n    setTranslateY(dragCenterGrid.y)\r\n\r\n    // Scale current viewport size by ratio of drag box\r\n    const viewportWidth = parseFloat(ctx.viewport.width)\r\n    const viewportHeight = parseFloat(ctx.viewport.height)\r\n\r\n    const dragDimensions = { width: Math.abs(dragBox.x1 - dragBox.x2), height: Math.abs(dragBox.y1 - dragBox.y2) }\r\n    const dragViewport = {\r\n      width: viewportWidth * (dragDimensions.width / canvasWidth),\r\n      height: viewportHeight * (dragDimensions.height / canvasHeight),\r\n    }\r\n\r\n    if (lockAspectRatio === true) {\r\n      console.log('scaling with lock')\r\n      const newViewport = scaleViewportByAspectRatio(dragViewport)\r\n      setViewportWidth(newViewport.width)\r\n      setViewportHeight(newViewport.height)\r\n    } else {\r\n      console.log('scaling without lock')\r\n      setViewportWidth(dragViewport.width)\r\n      setViewportHeight(dragViewport.height)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        className='glcanvas'\r\n        width='1000'\r\n        height='1000'\r\n        onMouseDown={startDrag}\r\n        onMouseUp={endDrag}\r\n        ref={canvasRef}\r\n      />\r\n      <ControlPanel>\r\n        <DebugFrame frameCount={frameCount} frameTime={Date.now() - lastFrameTime} />\r\n      </ControlPanel>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport ModelProvider from './components/ModelProvider'\r\nimport ShaderCanvas from './components/ShaderCanvas';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <ModelProvider>\r\n        <ShaderCanvas />\r\n      </ModelProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}